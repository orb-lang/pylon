<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="2671pt" height="32772pt"
 viewBox="0.00 0.00 2670.79 32772.45" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 32768.4532)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-32768.4532 2666.7914,-32768.4532 2666.7914,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="514.2914" cy="-32746.4532" rx="51.795" ry="18"/>
<text text-anchor="middle" x="514.2914" y="-32742.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 2099</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="514.2914" cy="-32674.4532" rx="55.6456" ry="18"/>
<text text-anchor="middle" x="514.2914" y="-32670.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;8</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M514.2914,-32728.2846C514.2914,-32720.5842 514.2914,-32711.4276 514.2914,-32702.8699"/>
<polygon fill="#000000" stroke="#000000" points="517.7915,-32702.8665 514.2914,-32692.8665 510.7915,-32702.8665 517.7915,-32702.8665"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="285.2914" cy="-32602.4532" rx="57.5925" ry="18"/>
<text text-anchor="middle" x="285.2914" y="-32598.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : Argparse</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M474.1406,-32661.8294C435.6644,-32649.7321 377.4545,-32631.4303 335.8383,-32618.3457"/>
<polygon fill="#000000" stroke="#000000" points="336.7574,-32614.9658 326.168,-32615.3053 334.6579,-32621.6436 336.7574,-32614.9658"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="473.2914" cy="-32602.4532" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="473.2914" y="-32598.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M504.1566,-32656.6555C499.3546,-32648.2228 493.5229,-32637.9818 488.2272,-32628.682"/>
<polygon fill="#000000" stroke="#000000" points="491.1581,-32626.7557 483.1682,-32619.7978 485.0752,-32630.2196 491.1581,-32626.7557"/>
</g>
<!-- prose_4 -->
<g id="node5" class="node">
<title>prose_4</title>
<ellipse fill="none" stroke="#000000" cx="595.2914" cy="-32602.4532" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="595.2914" y="-32598.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;prose_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M533.4873,-32657.3902C544.4344,-32647.6594 558.2847,-32635.3481 570.0978,-32624.8475"/>
<polygon fill="#000000" stroke="#000000" points="572.7412,-32627.1808 577.89,-32617.9212 568.0906,-32621.9489 572.7412,-32627.1808"/>
</g>
<!-- section_5 -->
<g id="node6" class="node">
<title>section_5</title>
<ellipse fill="none" stroke="#000000" cx="1439.2914" cy="-32602.4532" rx="70.655" ry="18"/>
<text text-anchor="middle" x="1439.2914" y="-32598.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 9&#45;2099</text>
</g>
<!-- section_1&#45;&gt;section_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;section_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M568.701,-32670.2181C725.4834,-32658.0145 1178.6451,-32622.7414 1361.4577,-32608.5117"/>
<polygon fill="#000000" stroke="#000000" points="1361.8342,-32611.993 1371.5324,-32607.7275 1361.2909,-32605.0141 1361.8342,-32611.993"/>
</g>
<!-- leaf_6 -->
<g id="node7" class="node">
<title>leaf_6</title>
<polygon fill="none" stroke="#c0c0c0" points="287.2914,-32548.4532 201.2914,-32548.4532 201.2914,-32512.4532 287.2914,-32512.4532 287.2914,-32548.4532"/>
<text text-anchor="middle" x="244.2914" y="-32526.9533" font-family="Inconsolata" font-size="14.00" fill="#000000">* Argparse</text>
</g>
<!-- header_2&#45;&gt;leaf_6 -->
<g id="edge6" class="edge">
<title>header_2&#45;&gt;leaf_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M275.1566,-32584.6555C270.4613,-32576.4102 264.7816,-32566.4361 259.5811,-32557.3034"/>
<polygon fill="#000000" stroke="#000000" points="262.5843,-32555.5043 254.5944,-32548.5464 256.5014,-32558.9682 262.5843,-32555.5043"/>
</g>
<!-- raw_7 -->
<g id="node8" class="node">
<title>raw_7</title>
<ellipse fill="none" stroke="#000000" cx="332.2914" cy="-32530.4532" rx="27" ry="18"/>
<text text-anchor="middle" x="332.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_7 -->
<g id="edge7" class="edge">
<title>prose_3&#45;&gt;raw_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M449.3727,-32590.2394C425.5806,-32578.0903 388.9774,-32559.3993 363.0391,-32546.1542"/>
<polygon fill="#000000" stroke="#000000" points="364.5066,-32542.9737 354.0088,-32541.543 361.3232,-32549.2079 364.5066,-32542.9737"/>
</g>
<!-- prespace_9 -->
<g id="node10" class="node">
<title>prespace_9</title>
<ellipse fill="none" stroke="#000000" cx="423.2914" cy="-32530.4532" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="423.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_4&#45;&gt;prespace_9 -->
<g id="edge9" class="edge">
<title>prose_4&#45;&gt;prespace_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M569.1683,-32591.518C541.2842,-32579.8456 496.7278,-32561.1941 464.1872,-32547.5724"/>
<polygon fill="#000000" stroke="#000000" points="465.5055,-32544.33 454.9296,-32543.6971 462.8025,-32550.7871 465.5055,-32544.33"/>
</g>
<!-- literal_10 -->
<g id="node11" class="node">
<title>literal_10</title>
<ellipse fill="none" stroke="#000000" cx="519.2914" cy="-32530.4532" rx="31.481" ry="18"/>
<text text-anchor="middle" x="519.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_4&#45;&gt;literal_10 -->
<g id="edge10" class="edge">
<title>prose_4&#45;&gt;literal_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M578.8005,-32586.8303C568.3434,-32576.9236 554.646,-32563.947 543.0288,-32552.9413"/>
<polygon fill="#000000" stroke="#000000" points="545.4168,-32550.3823 535.7501,-32546.0457 540.6025,-32555.464 545.4168,-32550.3823"/>
</g>
<!-- raw_11 -->
<g id="node12" class="node">
<title>raw_11</title>
<ellipse fill="none" stroke="#000000" cx="595.2914" cy="-32530.4532" rx="27" ry="18"/>
<text text-anchor="middle" x="595.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_11 -->
<g id="edge11" class="edge">
<title>prose_4&#45;&gt;raw_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M595.2914,-32584.2846C595.2914,-32576.5842 595.2914,-32567.4276 595.2914,-32558.8699"/>
<polygon fill="#000000" stroke="#000000" points="598.7915,-32558.8665 595.2914,-32548.8665 591.7915,-32558.8665 598.7915,-32558.8665"/>
</g>
<!-- prespace_12 -->
<g id="node13" class="node">
<title>prespace_12</title>
<ellipse fill="none" stroke="#000000" cx="779.2914" cy="-32530.4532" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="779.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_4&#45;&gt;prespace_12 -->
<g id="edge12" class="edge">
<title>prose_4&#45;&gt;prespace_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M622.0466,-32591.9838C652.1116,-32580.2192 701.3293,-32560.9601 736.6972,-32547.1205"/>
<polygon fill="#000000" stroke="#000000" points="738.2411,-32550.2749 746.2781,-32543.3715 735.6902,-32543.7562 738.2411,-32550.2749"/>
</g>
<!-- literal_13 -->
<g id="node14" class="node">
<title>literal_13</title>
<ellipse fill="none" stroke="#000000" cx="928.2914" cy="-32530.4532" rx="31.481" ry="18"/>
<text text-anchor="middle" x="928.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_4&#45;&gt;literal_13 -->
<g id="edge13" class="edge">
<title>prose_4&#45;&gt;literal_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M625.4302,-32595.9367C685.8863,-32582.8652 821.9074,-32553.4552 889.1456,-32538.9172"/>
<polygon fill="#000000" stroke="#000000" points="889.9028,-32542.3344 898.9372,-32536.8001 888.4234,-32535.4925 889.9028,-32542.3344"/>
</g>
<!-- raw_14 -->
<g id="node15" class="node">
<title>raw_14</title>
<ellipse fill="none" stroke="#000000" cx="1048.2914" cy="-32530.4532" rx="27" ry="18"/>
<text text-anchor="middle" x="1048.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_14 -->
<g id="edge14" class="edge">
<title>prose_4&#45;&gt;raw_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M626.8649,-32598.7217C691.3023,-32590.9215 842.4971,-32571.6747 968.2914,-32548.4532 982.9056,-32545.7555 998.9037,-32542.2648 1012.7269,-32539.0765"/>
<polygon fill="#000000" stroke="#000000" points="1013.8756,-32542.4023 1022.8148,-32536.7154 1012.2803,-32535.5865 1013.8756,-32542.4023"/>
</g>
<!-- header_21 -->
<g id="node22" class="node">
<title>header_21</title>
<ellipse fill="none" stroke="#000000" cx="1300.2914" cy="-32530.4532" rx="52.7555" ry="18"/>
<text text-anchor="middle" x="1300.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">3 : License</text>
</g>
<!-- section_5&#45;&gt;header_21 -->
<g id="edge21" class="edge">
<title>section_5&#45;&gt;header_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1408.0971,-32586.295C1387.5061,-32575.6292 1360.3914,-32561.5842 1338.5067,-32550.2482"/>
<polygon fill="#000000" stroke="#000000" points="1339.9713,-32547.0652 1329.482,-32545.5735 1336.7516,-32553.2809 1339.9713,-32547.0652"/>
</g>
<!-- prose_22 -->
<g id="node23" class="node">
<title>prose_22</title>
<ellipse fill="none" stroke="#000000" cx="1509.2914" cy="-32530.4532" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1509.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_5&#45;&gt;prose_22 -->
<g id="edge22" class="edge">
<title>section_5&#45;&gt;prose_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1456.5948,-32584.6555C1465.6283,-32575.3639 1476.7962,-32563.8769 1486.5226,-32553.8726"/>
<polygon fill="#000000" stroke="#000000" points="1489.1588,-32556.182 1493.6202,-32546.5722 1484.1399,-32551.3024 1489.1588,-32556.182"/>
</g>
<!-- codeblock_23 -->
<g id="node24" class="node">
<title>codeblock_23</title>
<ellipse fill="none" stroke="#000000" cx="1946.2914" cy="-32530.4532" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1946.2914" y="-32526.2532" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 16&#45;2099</text>
</g>
<!-- section_5&#45;&gt;codeblock_23 -->
<g id="edge23" class="edge">
<title>section_5&#45;&gt;codeblock_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1501.2059,-32593.6606C1592.3443,-32580.7179 1762.7572,-32556.5173 1864.2228,-32542.108"/>
<polygon fill="#000000" stroke="#000000" points="1864.7157,-32545.5732 1874.1242,-32540.7018 1863.7314,-32538.6427 1864.7157,-32545.5732"/>
</g>
<!-- leaf_8 -->
<g id="node9" class="node">
<title>leaf_8</title>
<polygon fill="none" stroke="#c0c0c0" points="135.7914,-16355.5281 14.7914,-16355.5281 14.7914,-16299.7252 135.7914,-16299.7252 135.7914,-16355.5281"/>
<text text-anchor="middle" x="75.2914" y="-16308.1267" font-family="Inconsolata" font-size="14.00" fill="#000000">Now on [[0.7]].</text>
</g>
<!-- raw_7&#45;&gt;leaf_8 -->
<g id="edge8" class="edge">
<title>raw_7&#45;&gt;leaf_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M311.3282,-32518.9629C306.4825,-32516.5924 301.2822,-32514.2685 296.2914,-32512.4532 231.4549,-32488.8709 188.1639,-32530.5074 145.2914,-32476.4532 -125.4962,-32135.0416 63.7563,-17218.0559 74.796,-16365.6138"/>
<polygon fill="#000000" stroke="#000000" points="78.2982,-16365.4645 74.9282,-16355.4199 71.2988,-16365.3736 78.2982,-16365.4645"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="208.2914,-16345.6267 154.2914,-16345.6267 154.2914,-16309.6267 208.2914,-16309.6267 208.2914,-16345.6267"/>
</g>
<!-- prespace_9&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>prespace_9&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M388.2145,-32518.4974C381.6242,-32516.3868 374.7696,-32514.2822 368.2914,-32512.4532 301.8948,-32493.7078 260.107,-32530.5525 217.2914,-32476.4532 81.5015,-32304.8774 176.3925,-17098.8983 181.1116,-16355.7817"/>
<polygon fill="#000000" stroke="#000000" points="184.6121,-16355.6916 181.1759,-16345.6695 177.6122,-16355.647 184.6121,-16355.6916"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="298.2914,-16345.6267 226.2914,-16345.6267 226.2914,-16309.6267 298.2914,-16309.6267 298.2914,-16345.6267"/>
<text text-anchor="middle" x="262.2914" y="-16324.1267" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse</text>
</g>
<!-- literal_10&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>literal_10&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M494.8937,-32518.7617C489.5054,-32516.4571 483.7688,-32514.2114 478.2914,-32512.4532 404.3416,-32488.7167 356.3108,-32536.6953 307.2914,-32476.4532 169.1888,-32306.733 257.714,-17098.989 262.1233,-16355.7851"/>
<polygon fill="#000000" stroke="#000000" points="265.6238,-16355.6923 262.1834,-16345.6717 258.6239,-16355.6507 265.6238,-16355.6923"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="780.2914,-16345.6267 316.2914,-16345.6267 316.2914,-16309.6267 780.2914,-16309.6267 780.2914,-16345.6267"/>
<text text-anchor="middle" x="548.2914" y="-16324.1267" font-family="Inconsolata" font-size="14.00" fill="#000000"> is what it says on the label, and we&#39;re lifting it wholesale as</text>
</g>
<!-- raw_11&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>raw_11&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M595.2383,-32512.152C593.5172,-31918.8011 550.5058,-17091.0238 548.3734,-16355.9027"/>
<polygon fill="#000000" stroke="#000000" points="551.8728,-16355.654 548.3437,-16345.6643 544.8728,-16355.6744 551.8728,-16355.654"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="852.2914,-16345.6267 798.2914,-16345.6267 798.2914,-16309.6267 852.2914,-16309.6267 852.2914,-16345.6267"/>
</g>
<!-- prespace_12&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>prespace_12&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M783.5486,-32512.0744C785.7399,-32501.6834 788.1797,-32488.415 789.2914,-32476.4532 870.2331,-31605.5154 827.565,-17082.7324 825.3771,-16355.866"/>
<polygon fill="#000000" stroke="#000000" points="828.8768,-16355.7208 825.3465,-16345.7314 821.8768,-16355.742 828.8768,-16355.7208"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="998.2914,-16345.6267 870.2914,-16345.6267 870.2914,-16309.6267 998.2914,-16309.6267 998.2914,-16345.6267"/>
<text text-anchor="middle" x="934.2914" y="-16324.1267" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_13&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>literal_13&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M928.2982,-32512.152C928.5179,-31918.8011 934.0087,-17091.0238 934.2809,-16355.9027"/>
<polygon fill="#000000" stroke="#000000" points="937.7809,-16355.6656 934.2847,-16345.6643 930.7809,-16355.6629 937.7809,-16355.6656"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="1165.7914,-16347.5287 1016.7914,-16347.5287 1016.7914,-16307.7246 1165.7914,-16307.7246 1165.7914,-16347.5287"/>
<text text-anchor="middle" x="1091.2914" y="-16332.1267" font-family="Inconsolata" font-size="14.00" fill="#000000">, at least for now.</text>
</g>
<!-- raw_14&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>raw_14&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1048.34,-32512.152C1049.9135,-31919.2468 1089.2064,-17113.2904 1091.2119,-16357.583"/>
<polygon fill="#000000" stroke="#000000" points="1094.7121,-16357.4862 1091.2387,-16347.4769 1087.7121,-16357.4676 1094.7121,-16357.4862"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="1276.7914,-16345.6267 1183.7914,-16345.6267 1183.7914,-16309.6267 1276.7914,-16309.6267 1276.7914,-16345.6267"/>
<text text-anchor="middle" x="1230.2914" y="-16324.1267" font-family="Inconsolata" font-size="14.00" fill="#000000">*** License</text>
</g>
<!-- header_21&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>header_21&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1294.3378,-32512.1831C1291.272,-32501.8261 1287.856,-32488.5556 1286.2914,-32476.4532 1174.1408,-31608.9788 1227.4438,-17082.9058 1230.184,-16355.8725"/>
<polygon fill="#000000" stroke="#000000" points="1233.6844,-16355.7488 1230.2223,-16345.7356 1226.6844,-16355.7223 1233.6844,-16355.7488"/>
</g>
<!-- raw_25 -->
<g id="node26" class="node">
<title>raw_25</title>
<ellipse fill="none" stroke="#000000" cx="1322.2914" cy="-16327.6267" rx="27" ry="18"/>
<text text-anchor="middle" x="1322.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_22&#45;&gt;raw_25 -->
<g id="edge25" class="edge">
<title>prose_22&#45;&gt;raw_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1479.0873,-32523.9501C1439.2471,-32514.6902 1372.5031,-32496.5811 1358.2914,-32476.4532 1232.0853,-32297.7099 1317.8609,-17098.548 1322.1287,-16355.7689"/>
<polygon fill="#000000" stroke="#000000" points="1325.6292,-16355.6813 1322.1869,-16345.6613 1318.6293,-16355.641 1325.6292,-16355.6813"/>
</g>
<!-- prespace_26 -->
<g id="node27" class="node">
<title>prespace_26</title>
<ellipse fill="none" stroke="#000000" cx="1413.2914" cy="-16327.6267" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="1413.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_22&#45;&gt;prespace_26 -->
<g id="edge26" class="edge">
<title>prose_22&#45;&gt;prespace_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1493.2327,-32514.5472C1484.31,-32504.5481 1474.0697,-32490.8478 1469.2914,-32476.4532 1331.4544,-32061.2236 1409.2176,-17094.4406 1413.1402,-16355.8942"/>
<polygon fill="#000000" stroke="#000000" points="1416.6403,-16355.8516 1413.1937,-16345.8331 1409.6404,-16355.8143 1416.6403,-16355.8516"/>
</g>
<!-- literal_27 -->
<g id="node28" class="node">
<title>literal_27</title>
<ellipse fill="none" stroke="#000000" cx="1509.2914" cy="-16327.6267" rx="31.481" ry="18"/>
<text text-anchor="middle" x="1509.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_22&#45;&gt;literal_27 -->
<g id="edge27" class="edge">
<title>prose_22&#45;&gt;literal_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1509.2914,-32512.152C1509.2914,-31918.8011 1509.2914,-17091.0238 1509.2914,-16355.9027"/>
<polygon fill="#000000" stroke="#000000" points="1512.7915,-16355.6642 1509.2914,-16345.6643 1505.7915,-16355.6643 1512.7915,-16355.6642"/>
</g>
<!-- raw_28 -->
<g id="node29" class="node">
<title>raw_28</title>
<ellipse fill="none" stroke="#000000" cx="1585.2914" cy="-16327.6267" rx="27" ry="18"/>
<text text-anchor="middle" x="1585.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_22&#45;&gt;raw_28 -->
<g id="edge28" class="edge">
<title>prose_22&#45;&gt;raw_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1525.3565,-32514.5493C1534.2816,-32504.551 1544.522,-32490.8508 1549.2914,-32476.4532 1686.8707,-32061.1398 1590.3275,-17094.4364 1585.4781,-16355.894"/>
<polygon fill="#000000" stroke="#000000" points="1588.9777,-16355.8097 1585.4119,-16345.833 1581.9779,-16355.8558 1588.9777,-16355.8097"/>
</g>
<!-- link_29 -->
<g id="node30" class="node">
<title>link_29</title>
<ellipse fill="none" stroke="#000000" cx="1710.2914" cy="-16327.6267" rx="27" ry="18"/>
<text text-anchor="middle" x="1710.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">link</text>
</g>
<!-- prose_22&#45;&gt;link_29 -->
<g id="edge29" class="edge">
<title>prose_22&#45;&gt;link_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1540.0064,-32524.951C1566.6106,-32518.3893 1603.5339,-32504.5563 1621.2914,-32476.4532 1738.1735,-32291.4749 1711.7073,-17098.2432 1710.344,-16355.7577"/>
<polygon fill="#000000" stroke="#000000" points="1713.8439,-16355.6476 1710.3253,-16345.6541 1706.8439,-16355.6606 1713.8439,-16355.6476"/>
</g>
<!-- raw_30 -->
<g id="node31" class="node">
<title>raw_30</title>
<ellipse fill="none" stroke="#000000" cx="1782.2914" cy="-16327.6267" rx="27" ry="18"/>
<text text-anchor="middle" x="1782.2914" y="-16323.4267" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_22&#45;&gt;raw_30 -->
<g id="edge30" class="edge">
<title>prose_22&#45;&gt;raw_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1541.5788,-32527.9484C1600.3288,-32522.6487 1720.9911,-32508.0941 1746.2914,-32476.4532 1814.6152,-32391.0065 1783.8928,-17103.108 1782.3504,-16355.9361"/>
<polygon fill="#000000" stroke="#000000" points="1785.8501,-16355.7613 1782.3293,-16345.7686 1778.8501,-16355.7759 1785.8501,-16355.7613"/>
</g>
<!-- leaf_40 -->
<g id="node41" class="node">
<title>leaf_40</title>
<polygon fill="none" stroke="#c0c0c0" points="2662.7914,-32476.2798 1827.7914,-32476.2798 1827.7914,-178.9735 2662.7914,-178.9735 2662.7914,-32476.2798"/>
<text text-anchor="middle" x="2245.2914" y="-32461.2532" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse = (function ()</text>
<text text-anchor="middle" x="2245.2914" y="-32429.8532" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The MIT License (MIT)</text>
<text text-anchor="middle" x="2245.2914" y="-32398.4532" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Copyright (c) 2013 &#45; 2018 Peter Melnichenko</text>
<text text-anchor="middle" x="2245.2914" y="-32383.0531" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2019 Paul Ouellette</text>
<text text-anchor="middle" x="2245.2914" y="-32351.6531" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Permission is hereby granted, free of charge, to any person obtaining a copy of</text>
<text text-anchor="middle" x="2245.2914" y="-32336.2531" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; this software and associated documentation files (the &quot;Software&quot;), to deal in</text>
<text text-anchor="middle" x="2245.2914" y="-32320.8531" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software without restriction, including without limitation the rights to</text>
<text text-anchor="middle" x="2245.2914" y="-32305.453" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of</text>
<text text-anchor="middle" x="2245.2914" y="-32290.053" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software, and to permit persons to whom the Software is furnished to do so,</text>
<text text-anchor="middle" x="2245.2914" y="-32274.653" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; subject to the following conditions:</text>
<text text-anchor="middle" x="2245.2914" y="-32243.2529" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The above copyright notice and this permission notice shall be included in all</text>
<text text-anchor="middle" x="2245.2914" y="-32227.8529" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; copies or substantial portions of the Software.</text>
<text text-anchor="middle" x="2245.2914" y="-32196.4529" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</text>
<text text-anchor="middle" x="2245.2914" y="-32181.0528" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS</text>
<text text-anchor="middle" x="2245.2914" y="-32165.6528" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR</text>
<text text-anchor="middle" x="2245.2914" y="-32150.2528" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER</text>
<text text-anchor="middle" x="2245.2914" y="-32134.8527" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN</text>
<text text-anchor="middle" x="2245.2914" y="-32119.4527" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</text>
<text text-anchor="middle" x="2245.2914" y="-32088.0527" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deep_update(t1, t2)</text>
<text text-anchor="middle" x="2245.2914" y="-32072.6526" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for k, v in pairs(t2) do</text>
<text text-anchor="middle" x="2245.2914" y="-32057.2526" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(v) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-32041.8526" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;v = deep_update({}, v)</text>
<text text-anchor="middle" x="2245.2914" y="-32026.4526" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31995.0525" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;t1[k] = v</text>
<text text-anchor="middle" x="2245.2914" y="-31979.6525" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31948.2525" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return t1</text>
<text text-anchor="middle" x="2245.2914" y="-31932.8524" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-31901.4524" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; A property is a tuple {name, callback}.</text>
<text text-anchor="middle" x="2245.2914" y="-31886.0524" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; properties.args is number of properties that can be set as arguments</text>
<text text-anchor="middle" x="2245.2914" y="-31870.6523" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; when calling an object.</text>
<text text-anchor="middle" x="2245.2914" y="-31855.2523" font-family="Inconsolata" font-size="14.00" fill="#000000">local function class(prototype, properties, parent)</text>
<text text-anchor="middle" x="2245.2914" y="-31839.8523" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Class is the metatable of its instances.</text>
<text text-anchor="middle" x="2245.2914" y="-31824.4522" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local cl = {}</text>
<text text-anchor="middle" x="2245.2914" y="-31809.0522" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;cl.__index = cl</text>
<text text-anchor="middle" x="2245.2914" y="-31777.6522" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parent then</text>
<text text-anchor="middle" x="2245.2914" y="-31762.2522" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = deep_update(deep_update({}, parent.__prototype), prototype)</text>
<text text-anchor="middle" x="2245.2914" y="-31746.8521" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-31731.4521" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = prototype</text>
<text text-anchor="middle" x="2245.2914" y="-31716.0521" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31684.652" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if properties then</text>
<text text-anchor="middle" x="2245.2914" y="-31669.252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local names = {}</text>
<text text-anchor="middle" x="2245.2914" y="-31637.852" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Create setter methods and fill set of property names.</text>
<text text-anchor="middle" x="2245.2914" y="-31622.4519" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, property in ipairs(properties) do</text>
<text text-anchor="middle" x="2245.2914" y="-31607.0519" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name, callback = property[1], property[2]</text>
<text text-anchor="middle" x="2245.2914" y="-31575.6519" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cl[name] = function(self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-31560.2518" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not callback(self, value) then</text>
<text text-anchor="middle" x="2245.2914" y="-31544.8518" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[&quot;_&quot; .. name] = value</text>
<text text-anchor="middle" x="2245.2914" y="-31529.4518" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31498.0517" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-31482.6517" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31451.2517" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;names[name] = true</text>
<text text-anchor="middle" x="2245.2914" y="-31435.8517" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31404.4516" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;function cl.__call(self, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-31389.0516" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; When calling an object, if the first argument is a table,</text>
<text text-anchor="middle" x="2245.2914" y="-31373.6516" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; interpret keys as property names, else delegate arguments</text>
<text text-anchor="middle" x="2245.2914" y="-31358.2515" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; to corresponding setters in order.</text>
<text text-anchor="middle" x="2245.2914" y="-31342.8515" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if type((...)) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-31327.4515" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name, value in pairs((...)) do</text>
<text text-anchor="middle" x="2245.2914" y="-31312.0514" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if names[name] then</text>
<text text-anchor="middle" x="2245.2914" y="-31296.6514" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[name](self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-31281.2514" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31265.8513" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31250.4513" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-31235.0513" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local nargs = select(&quot;#&quot;, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-31203.6512" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i, property in ipairs(properties) do</text>
<text text-anchor="middle" x="2245.2914" y="-31188.2512" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i &gt; nargs or i &gt; properties.args then</text>
<text text-anchor="middle" x="2245.2914" y="-31172.8512" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-31157.4512" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31126.0511" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local arg = select(i, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-31094.6511" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg ~= nil then</text>
<text text-anchor="middle" x="2245.2914" y="-31079.2511" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[property[1]](self, arg)</text>
<text text-anchor="middle" x="2245.2914" y="-31063.851" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31048.451" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31033.051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-31001.6509" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-30986.2509" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30970.8509" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30939.4508" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If indexing class fails, fallback to its parent.</text>
<text text-anchor="middle" x="2245.2914" y="-30924.0508" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local class_metatable = {}</text>
<text text-anchor="middle" x="2245.2914" y="-30908.6508" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;class_metatable.__index = parent</text>
<text text-anchor="middle" x="2245.2914" y="-30877.2507" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;function class_metatable.__call(self, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-30861.8507" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Calling a class returns its instance.</text>
<text text-anchor="middle" x="2245.2914" y="-30846.4507" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Arguments are delegated to the instance.</text>
<text text-anchor="middle" x="2245.2914" y="-30831.0507" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local object = deep_update({}, self.__prototype)</text>
<text text-anchor="middle" x="2245.2914" y="-30815.6506" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(object, self)</text>
<text text-anchor="middle" x="2245.2914" y="-30800.2506" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return object(...)</text>
<text text-anchor="middle" x="2245.2914" y="-30784.8506" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30753.4505" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return setmetatable(cl, class_metatable)</text>
<text text-anchor="middle" x="2245.2914" y="-30738.0505" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-30706.6505" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typecheck(name, types, value)</text>
<text text-anchor="middle" x="2245.2914" y="-30691.2504" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, type_ in ipairs(types) do</text>
<text text-anchor="middle" x="2245.2914" y="-30675.8504" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(value) == type_ then</text>
<text text-anchor="middle" x="2245.2914" y="-30660.4504" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="2245.2914" y="-30645.0503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30629.6503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30598.2503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;error((&quot;bad property &#39;%s&#39; (%s expected, got %s)&quot;):format(name, table.concat(types, &quot; or &quot;), type(value)))</text>
<text text-anchor="middle" x="2245.2914" y="-30582.8502" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-30551.4502" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typechecked(name, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-30536.0502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {...}</text>
<text text-anchor="middle" x="2245.2914" y="-30520.6502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(_, value) typecheck(name, types, value) end}</text>
<text text-anchor="middle" x="2245.2914" y="-30505.2501" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-30473.8501" font-family="Inconsolata" font-size="14.00" fill="#000000">local multiname = {&quot;name&quot;, function(self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-30458.4501" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;name&quot;, {&quot;string&quot;}, value)</text>
<text text-anchor="middle" x="2245.2914" y="-30427.05" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for alias in value:gmatch(&quot;%S+&quot;) do</text>
<text text-anchor="middle" x="2245.2914" y="-30411.65" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._name = self._name or alias</text>
<text text-anchor="middle" x="2245.2914" y="-30396.25" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._aliases, alias)</text>
<text text-anchor="middle" x="2245.2914" y="-30380.8499" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30349.4499" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Do not set _name as with other properties.</text>
<text text-anchor="middle" x="2245.2914" y="-30334.0499" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return true</text>
<text text-anchor="middle" x="2245.2914" y="-30318.6498" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="2245.2914" y="-30287.2498" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse_boundaries(str)</text>
<text text-anchor="middle" x="2245.2914" y="-30271.8498" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if tonumber(str) then</text>
<text text-anchor="middle" x="2245.2914" y="-30256.4497" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(str), tonumber(str)</text>
<text text-anchor="middle" x="2245.2914" y="-30241.0497" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30209.6497" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;*&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-30194.2497" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, math.huge</text>
<text text-anchor="middle" x="2245.2914" y="-30178.8496" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30147.4496" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;+&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-30132.0496" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 1, math.huge</text>
<text text-anchor="middle" x="2245.2914" y="-30116.6495" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30085.2495" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;?&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-30069.8495" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, 1</text>
<text text-anchor="middle" x="2245.2914" y="-30054.4494" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-30023.0494" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%&#45;%d+$&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-30007.6494" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = str:match &quot;^(%d+)%&#45;(%d+)$&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-29992.2493" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), tonumber(max)</text>
<text text-anchor="middle" x="2245.2914" y="-29976.8493" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29945.4493" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%+$&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-29930.0492" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min = str:match &quot;^(%d+)%+$&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-29914.6492" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), math.huge</text>
<text text-anchor="middle" x="2245.2914" y="-29899.2492" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29883.8492" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-29852.4491" font-family="Inconsolata" font-size="14.00" fill="#000000">local function boundaries(name)</text>
<text text-anchor="middle" x="2245.2914" y="-29837.0491" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29821.6491" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;typecheck(name, {&quot;number&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29790.249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = parse_boundaries(value)</text>
<text text-anchor="middle" x="2245.2914" y="-29758.849" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not min then</text>
<text text-anchor="middle" x="2245.2914" y="-29743.449" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error((&quot;bad property &#39;%s&#39;&quot;):format(name))</text>
<text text-anchor="middle" x="2245.2914" y="-29728.0489" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29696.6489" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self[&quot;_min&quot; .. name], self[&quot;_max&quot; .. name] = min, max</text>
<text text-anchor="middle" x="2245.2914" y="-29681.2489" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end}</text>
<text text-anchor="middle" x="2245.2914" y="-29665.8488" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-29634.4488" font-family="Inconsolata" font-size="14.00" fill="#000000">local actions = {}</text>
<text text-anchor="middle" x="2245.2914" y="-29603.0488" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_action = {&quot;action&quot;, function(_, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29587.6487" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;action&quot;, {&quot;function&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29556.2487" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) == &quot;string&quot; and not actions[value] then</text>
<text text-anchor="middle" x="2245.2914" y="-29540.8487" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error((&quot;unknown action &#39;%s&#39;&quot;):format(value))</text>
<text text-anchor="middle" x="2245.2914" y="-29525.4487" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29510.0486" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="2245.2914" y="-29478.6486" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_init = {&quot;init&quot;, function(self)</text>
<text text-anchor="middle" x="2245.2914" y="-29463.2486" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="2245.2914" y="-29447.8485" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="2245.2914" y="-29416.4485" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_default = {&quot;default&quot;, function(self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29401.0485" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) ~= &quot;string&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-29385.6484" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._init = value</text>
<text text-anchor="middle" x="2245.2914" y="-29370.2484" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="2245.2914" y="-29354.8484" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="2245.2914" y="-29339.4483" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29324.0483" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="2245.2914" y="-29292.6483" font-family="Inconsolata" font-size="14.00" fill="#000000">local add_help = {&quot;add_help&quot;, function(self, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29277.2482" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;add_help&quot;, {&quot;boolean&quot;, &quot;string&quot;, &quot;table&quot;}, value)</text>
<text text-anchor="middle" x="2245.2914" y="-29245.8482" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._help_option_idx then</text>
<text text-anchor="middle" x="2245.2914" y="-29230.4482" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(self._options, self._help_option_idx)</text>
<text text-anchor="middle" x="2245.2914" y="-29215.0482" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._help_option_idx = nil</text>
<text text-anchor="middle" x="2245.2914" y="-29199.6481" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-29168.2481" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-29152.8481" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local help = self:flag()</text>
<text text-anchor="middle" x="2245.2914" y="-29137.448" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:description &quot;Show this help message and exit.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-29122.048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:action(function()</text>
<text text-anchor="middle" x="2245.2914" y="-29106.648" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;print(self:get_help())</text>
<text text-anchor="middle" x="2245.2914" y="-29091.2479" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="2245.2914" y="-29075.8479" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="2245.2914" y="-29044.4479" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= true then</text>
<text text-anchor="middle" x="2245.2914" y="-29029.0478" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help = help(value)</text>
<text text-anchor="middle" x="2245.2914" y="-29013.6478" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-28982.2478" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not help._name then</text>
<text text-anchor="middle" x="2245.2914" y="-28966.8477" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help &quot;&#45;h&quot; &quot;&#45;&#45;help&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-28951.4477" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-28920.0477" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._help_option_idx = #self._options</text>
<text text-anchor="middle" x="2245.2914" y="-28904.6477" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-28889.2476" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="2245.2914" y="-28857.8476" font-family="Inconsolata" font-size="14.00" fill="#000000">local Parser = class({</text>
<text text-anchor="middle" x="2245.2914" y="-28842.4476" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_arguments = {},</text>
<text text-anchor="middle" x="2245.2914" y="-28827.0475" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_options = {},</text>
<text text-anchor="middle" x="2245.2914" y="-28811.6475" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_commands = {},</text>
<text text-anchor="middle" x="2245.2914" y="-28796.2475" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mutexes = {},</text>
<text text-anchor="middle" x="2245.2914" y="-28780.8474" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_groups = {},</text>
<text text-anchor="middle" x="2245.2914" y="-28765.4474" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_require_command = true,</text>
<text text-anchor="middle" x="2245.2914" y="-28750.0474" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_handle_options = true</text>
<text text-anchor="middle" x="2245.2914" y="-28734.6473" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="2245.2914" y="-28719.2473" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="2245.2914" y="-28703.8473" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28688.4473" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28673.0472" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28657.6472" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28642.2472" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28626.8471" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28611.4471" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28596.0471" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28580.647" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28565.247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28549.847" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28534.4469" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28519.0469" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28503.6469" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28488.2468" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28472.8468" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="2245.2914" y="-28457.4468" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="2245.2914" y="-28426.0468" font-family="Inconsolata" font-size="14.00" fill="#000000">local Command = class({</text>
<text text-anchor="middle" x="2245.2914" y="-28410.6467" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {}</text>
<text text-anchor="middle" x="2245.2914" y="-28395.2467" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="2245.2914" y="-28379.8467" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="2245.2914" y="-28364.4466" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="2245.2914" y="-28349.0466" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28333.6466" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28318.2465" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;summary&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28302.8465" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28287.4465" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28272.0464" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28256.6464" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28241.2464" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28225.8463" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28210.4463" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28195.0463" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28179.6463" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28164.2462" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28148.8462" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28133.4462" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28118.0461" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28102.6461" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-28087.2461" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="2245.2914" y="-28071.846" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Parser)</text>
<text text-anchor="middle" x="2245.2914" y="-28040.446" font-family="Inconsolata" font-size="14.00" fill="#000000">local Argument = class({</text>
<text text-anchor="middle" x="2245.2914" y="-28025.046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_minargs = 1,</text>
<text text-anchor="middle" x="2245.2914" y="-28009.6459" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxargs = 1,</text>
<text text-anchor="middle" x="2245.2914" y="-27994.2459" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 1,</text>
<text text-anchor="middle" x="2245.2914" y="-27978.8459" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxcount = 1,</text>
<text text-anchor="middle" x="2245.2914" y="-27963.4458" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_defmode = &quot;unused&quot;,</text>
<text text-anchor="middle" x="2245.2914" y="-27948.0458" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_show_default = true</text>
<text text-anchor="middle" x="2245.2914" y="-27932.6458" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="2245.2914" y="-27917.2458" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 5,</text>
<text text-anchor="middle" x="2245.2914" y="-27901.8457" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27886.4457" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27871.0457" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="2245.2914" y="-27855.6456" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27840.2456" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27824.8456" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27809.4455" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27794.0455" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27778.6455" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27763.2454" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;choices&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27747.8454" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27732.4454" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="2245.2914" y="-27717.0453" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="2245.2914" y="-27701.6453" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="2245.2914" y="-27670.2453" font-family="Inconsolata" font-size="14.00" fill="#000000">local Option = class({</text>
<text text-anchor="middle" x="2245.2914" y="-27654.8453" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {},</text>
<text text-anchor="middle" x="2245.2914" y="-27639.4452" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 0,</text>
<text text-anchor="middle" x="2245.2914" y="-27624.0452" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_overwrite = true</text>
<text text-anchor="middle" x="2245.2914" y="-27608.6452" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="2245.2914" y="-27593.2451" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 6,</text>
<text text-anchor="middle" x="2245.2914" y="-27577.8451" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="2245.2914" y="-27562.4451" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27547.045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="2245.2914" y="-27531.645" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27516.245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27500.8449" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;count&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27485.4449" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27470.0449" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27454.6448" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27439.2448" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;overwrite&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27423.8448" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27408.4448" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;choices&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27393.0447" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="2245.2914" y="-27377.6447" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="2245.2914" y="-27362.2447" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="2245.2914" y="-27346.8446" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Argument)</text>
<text text-anchor="middle" x="2245.2914" y="-27315.4446" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_inherit_property(name, default)</text>
<text text-anchor="middle" x="2245.2914" y="-27300.0446" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local element = self</text>
<text text-anchor="middle" x="2245.2914" y="-27268.6445" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="2245.2914" y="-27253.2445" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local value = element[&quot;_&quot; .. name]</text>
<text text-anchor="middle" x="2245.2914" y="-27221.8445" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= nil then</text>
<text text-anchor="middle" x="2245.2914" y="-27206.4444" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return value</text>
<text text-anchor="middle" x="2245.2914" y="-27191.0444" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-27159.6444" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-27144.2443" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return default</text>
<text text-anchor="middle" x="2245.2914" y="-27128.8443" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-27097.4443" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;element = element._parent</text>
<text text-anchor="middle" x="2245.2914" y="-27082.0443" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-27066.6442" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-27035.2442" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argument_list()</text>
<text text-anchor="middle" x="2245.2914" y="-27019.8442" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="2245.2914" y="-27004.4441" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local i = 1</text>
<text text-anchor="middle" x="2245.2914" y="-26973.0441" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._minargs, 3) do</text>
<text text-anchor="middle" x="2245.2914" y="-26957.6441" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argname = self:_get_argname(i)</text>
<text text-anchor="middle" x="2245.2914" y="-26926.244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._default and self._defmode:find &quot;a&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-26910.844" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argname = &quot;[&quot; .. argname .. &quot;]&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-26895.444" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26864.0439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, argname)</text>
<text text-anchor="middle" x="2245.2914" y="-26848.6439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="2245.2914" y="-26833.2439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26801.8438" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._maxargs, 3) do</text>
<text text-anchor="middle" x="2245.2914" y="-26786.4438" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;[&quot; .. self:_get_argname(i) .. &quot;]&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-26771.0438" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="2245.2914" y="-26739.6438" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == math.huge then</text>
<text text-anchor="middle" x="2245.2914" y="-26724.2437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-26708.8437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26693.4437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26662.0436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if i &lt; self._maxargs then</text>
<text text-anchor="middle" x="2245.2914" y="-26646.6436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;...&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-26631.2436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26599.8435" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return buf</text>
<text text-anchor="middle" x="2245.2914" y="-26584.4435" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26553.0435" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_usage()</text>
<text text-anchor="middle" x="2245.2914" y="-26537.6434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = table.concat(self:_get_argument_list(), &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-26506.2434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._defmode:find &quot;u&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-26490.8434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs &gt; 1 or (self._minargs == 1 and not self._defmode:find &quot;a&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-26475.4433" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-26460.0433" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26444.6433" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26413.2433" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="2245.2914" y="-26397.8432" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26366.4432" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_true(result, target)</text>
<text text-anchor="middle" x="2245.2914" y="-26351.0432" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = true</text>
<text text-anchor="middle" x="2245.2914" y="-26335.6431" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26304.2431" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_false(result, target)</text>
<text text-anchor="middle" x="2245.2914" y="-26288.8431" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = false</text>
<text text-anchor="middle" x="2245.2914" y="-26273.443" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26242.043" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store(result, target, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-26226.643" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = argument</text>
<text text-anchor="middle" x="2245.2914" y="-26211.2429" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26179.8429" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.count(result, target, _, overwrite)</text>
<text text-anchor="middle" x="2245.2914" y="-26164.4429" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not overwrite then</text>
<text text-anchor="middle" x="2245.2914" y="-26149.0428" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result[target] = result[target] + 1</text>
<text text-anchor="middle" x="2245.2914" y="-26133.6428" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-26118.2428" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-26086.8428" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.append(result, target, argument, overwrite)</text>
<text text-anchor="middle" x="2245.2914" y="-26071.4427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="2245.2914" y="-26056.0427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="2245.2914" y="-26024.6427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="2245.2914" y="-26009.2426" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(result[target], 1)</text>
<text text-anchor="middle" x="2245.2914" y="-25993.8426" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25978.4426" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-25947.0425" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.concat(result, target, arguments, overwrite)</text>
<text text-anchor="middle" x="2245.2914" y="-25931.6425" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="2245.2914" y="-25916.2425" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(&quot;&#39;concat&#39; action can&#39;t handle too many invocations&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-25900.8424" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25869.4424" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="2245.2914" y="-25838.0424" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(arguments) do</text>
<text text-anchor="middle" x="2245.2914" y="-25822.6424" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="2245.2914" y="-25807.2423" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25791.8423" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-25760.4423" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_action()</text>
<text text-anchor="middle" x="2245.2914" y="-25745.0422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local action, init</text>
<text text-anchor="middle" x="2245.2914" y="-25713.6422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._maxcount == 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-25698.2422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-25682.8421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store_true&quot;, nil</text>
<text text-anchor="middle" x="2245.2914" y="-25667.4421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-25652.0421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store&quot;, nil</text>
<text text-anchor="middle" x="2245.2914" y="-25636.642" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25621.242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-25605.842" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-25590.4419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;count&quot;, 0</text>
<text text-anchor="middle" x="2245.2914" y="-25575.0419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-25559.6419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;append&quot;, {}</text>
<text text-anchor="middle" x="2245.2914" y="-25544.2419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25528.8418" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25497.4418" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._action then</text>
<text text-anchor="middle" x="2245.2914" y="-25482.0418" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = self._action</text>
<text text-anchor="middle" x="2245.2914" y="-25466.6417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25435.2417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_init then</text>
<text text-anchor="middle" x="2245.2914" y="-25419.8417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;init = self._init</text>
<text text-anchor="middle" x="2245.2914" y="-25404.4416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25373.0416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(action) == &quot;string&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-25357.6416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = actions[action]</text>
<text text-anchor="middle" x="2245.2914" y="-25342.2415" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25310.8415" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return action, init</text>
<text text-anchor="middle" x="2245.2914" y="-25295.4415" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-25264.0414" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns placeholder for `narg`&#45;th argument.</text>
<text text-anchor="middle" x="2245.2914" y="-25248.6414" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argname(narg)</text>
<text text-anchor="middle" x="2245.2914" y="-25233.2414" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argname = self._argname or self:_get_default_argname()</text>
<text text-anchor="middle" x="2245.2914" y="-25201.8414" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(argname) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-25186.4413" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname[narg]</text>
<text text-anchor="middle" x="2245.2914" y="-25171.0413" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-25155.6413" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname</text>
<text text-anchor="middle" x="2245.2914" y="-25140.2412" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-25124.8412" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-25093.4412" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_choices_list()</text>
<text text-anchor="middle" x="2245.2914" y="-25078.0411" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return &quot;{&quot; .. table.concat(self._choices, &quot;,&quot;) .. &quot;}&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-25062.6411" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-25031.2411" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_argname()</text>
<text text-anchor="middle" x="2245.2914" y="-25015.841" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-25000.441" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self:_get_choices_list()</text>
<text text-anchor="middle" x="2245.2914" y="-24985.041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-24969.6409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&lt;&quot; .. self._name .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-24954.2409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24938.8409" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-24907.4409" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_argname()</text>
<text text-anchor="middle" x="2245.2914" y="-24892.0408" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-24876.6408" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self:_get_choices_list()</text>
<text text-anchor="middle" x="2245.2914" y="-24861.2408" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-24845.8407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&lt;&quot; .. self:_get_default_target() .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-24830.4407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24815.0407" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-24783.6406" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns labels to be shown in the help message.</text>
<text text-anchor="middle" x="2245.2914" y="-24768.2406" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_label_lines()</text>
<text text-anchor="middle" x="2245.2914" y="-24752.8406" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-24737.4405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {self:_get_choices_list()}</text>
<text text-anchor="middle" x="2245.2914" y="-24722.0405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-24706.6405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {self._name}</text>
<text text-anchor="middle" x="2245.2914" y="-24691.2404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24675.8404" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-24644.4404" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_label_lines()</text>
<text text-anchor="middle" x="2245.2914" y="-24629.0404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list = self:_get_argument_list()</text>
<text text-anchor="middle" x="2245.2914" y="-24597.6403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #argument_list == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-24582.2403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Don&#39;t put aliases for simple flags like `&#45;h` on different lines.</text>
<text text-anchor="middle" x="2245.2914" y="-24566.8403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="2245.2914" y="-24551.4402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24520.0402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local longest_alias_length = &#45;1</text>
<text text-anchor="middle" x="2245.2914" y="-24488.6402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-24473.2401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;longest_alias_length = math.max(longest_alias_length, #alias)</text>
<text text-anchor="middle" x="2245.2914" y="-24457.8401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24426.4401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list_repr = table.concat(argument_list, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-24411.04" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="2245.2914" y="-24379.64" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-24364.24" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = (&quot; &quot;):rep(longest_alias_length &#45; #alias) .. alias .. &quot; &quot; .. argument_list_repr</text>
<text text-anchor="middle" x="2245.2914" y="-24332.8399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if i ~= #self._aliases then</text>
<text text-anchor="middle" x="2245.2914" y="-24317.4399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. &quot;,&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-24302.0399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24270.6399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="2245.2914" y="-24255.2398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24223.8398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="2245.2914" y="-24208.4398" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-24177.0397" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_label_lines()</text>
<text text-anchor="middle" x="2245.2914" y="-24161.6397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="2245.2914" y="-24146.2397" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-24114.8396" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_description()</text>
<text text-anchor="middle" x="2245.2914" y="-24099.4396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._show_default then</text>
<text text-anchor="middle" x="2245.2914" y="-24084.0396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._description then</text>
<text text-anchor="middle" x="2245.2914" y="-24068.6395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;%s (default: %s)&quot;):format(self._description, self._default)</text>
<text text-anchor="middle" x="2245.2914" y="-24053.2395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-24037.8395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;default: %s&quot;):format(self._default)</text>
<text text-anchor="middle" x="2245.2914" y="-24022.4394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-24007.0394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-23991.6394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._description or &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-23976.2394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23960.8393" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23929.4393" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_description()</text>
<text text-anchor="middle" x="2245.2914" y="-23914.0393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._summary or self._description or &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-23898.6392" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23867.2392" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_usage()</text>
<text text-anchor="middle" x="2245.2914" y="-23851.8392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = self:_get_argument_list()</text>
<text text-anchor="middle" x="2245.2914" y="-23836.4391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(usage, 1, self._name)</text>
<text text-anchor="middle" x="2245.2914" y="-23821.0391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;usage = table.concat(usage, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-23789.6391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._mincount == 0 or self._default then</text>
<text text-anchor="middle" x="2245.2914" y="-23774.239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-23758.839" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23727.439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="2245.2914" y="-23712.0389" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23680.6389" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_target()</text>
<text text-anchor="middle" x="2245.2914" y="-23665.2389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._name</text>
<text text-anchor="middle" x="2245.2914" y="-23649.8389" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23618.4388" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_target()</text>
<text text-anchor="middle" x="2245.2914" y="-23603.0388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res</text>
<text text-anchor="middle" x="2245.2914" y="-23571.6388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-23556.2387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if alias:sub(1, 1) == alias:sub(2, 2) then</text>
<text text-anchor="middle" x="2245.2914" y="-23540.8387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res = alias:sub(3)</text>
<text text-anchor="middle" x="2245.2914" y="-23525.4387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-23510.0386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23494.6386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23463.2386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;res = res or self._name:sub(2)</text>
<text text-anchor="middle" x="2245.2914" y="-23447.8385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return (res:gsub(&quot;&#45;&quot;, &quot;_&quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-23432.4385" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23401.0385" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_is_vararg()</text>
<text text-anchor="middle" x="2245.2914" y="-23385.6384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._maxargs ~= self._minargs</text>
<text text-anchor="middle" x="2245.2914" y="-23370.2384" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23338.8384" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_fullname(exclude_root)</text>
<text text-anchor="middle" x="2245.2914" y="-23323.4384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parent = self._parent</text>
<text text-anchor="middle" x="2245.2914" y="-23308.0383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if exclude_root and not parent then</text>
<text text-anchor="middle" x="2245.2914" y="-23292.6383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-23277.2383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23261.8382" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {self._name}</text>
<text text-anchor="middle" x="2245.2914" y="-23230.4382" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while parent do</text>
<text text-anchor="middle" x="2245.2914" y="-23215.0382" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not exclude_root or parent._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-23199.6381" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, 1, parent._name)</text>
<text text-anchor="middle" x="2245.2914" y="-23184.2381" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23168.8381" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;parent = parent._parent</text>
<text text-anchor="middle" x="2245.2914" y="-23153.438" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-23122.038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(buf, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-23106.638" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-23075.238" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_update_charset(charset)</text>
<text text-anchor="middle" x="2245.2914" y="-23059.8379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;charset = charset or {}</text>
<text text-anchor="middle" x="2245.2914" y="-23028.4379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-23013.0379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_update_charset(charset)</text>
<text text-anchor="middle" x="2245.2914" y="-22997.6378" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-22966.2378" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-22950.8378" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-22935.4377" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;charset[alias:sub(1, 1)] = true</text>
<text text-anchor="middle" x="2245.2914" y="-22920.0377" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-22904.6377" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-22873.2376" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return charset</text>
<text text-anchor="middle" x="2245.2914" y="-22857.8376" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22826.4376" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:argument(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22811.0375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument = Argument(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22795.6375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._arguments, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-22780.2375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="2245.2914" y="-22764.8375" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22733.4374" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:option(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22718.0374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = Option(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22702.6374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._options, option)</text>
<text text-anchor="middle" x="2245.2914" y="-22687.2373" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return option</text>
<text text-anchor="middle" x="2245.2914" y="-22671.8373" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22640.4373" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:flag(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22625.0372" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:option():args(0)(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22609.6372" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22578.2372" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:command(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22562.8371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = Command():add_help(true)(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22547.4371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command._parent = self</text>
<text text-anchor="middle" x="2245.2914" y="-22532.0371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._commands, command)</text>
<text text-anchor="middle" x="2245.2914" y="-22516.637" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return command</text>
<text text-anchor="middle" x="2245.2914" y="-22501.237" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22469.837" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:mutex(...)</text>
<text text-anchor="middle" x="2245.2914" y="-22454.437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements = {...}</text>
<text text-anchor="middle" x="2245.2914" y="-22423.0369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(elements) do</text>
<text text-anchor="middle" x="2245.2914" y="-22407.6369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="2245.2914" y="-22392.2369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument, (&quot;bad argument #%d to &#39;mutex&#39; (Option or Argument expected)&quot;):format(i))</text>
<text text-anchor="middle" x="2245.2914" y="-22376.8368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-22345.4368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._mutexes, elements)</text>
<text text-anchor="middle" x="2245.2914" y="-22330.0368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-22314.6367" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22283.2367" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:group(name, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-22267.8367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(type(name) == &quot;string&quot;, (&quot;bad argument #1 to &#39;group&#39; (string expected, got %s)&quot;):format(type(name)))</text>
<text text-anchor="middle" x="2245.2914" y="-22236.4366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local group = {name = name, ...}</text>
<text text-anchor="middle" x="2245.2914" y="-22205.0366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(group) do</text>
<text text-anchor="middle" x="2245.2914" y="-22189.6366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="2245.2914" y="-22174.2365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument or mt == Command,</text>
<text text-anchor="middle" x="2245.2914" y="-22158.8365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #%d to &#39;group&#39; (Option or Argument or Command expected)&quot;):format(i + 1))</text>
<text text-anchor="middle" x="2245.2914" y="-22143.4365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-22112.0365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._groups, group)</text>
<text text-anchor="middle" x="2245.2914" y="-22096.6364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-22081.2364" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-22049.8364" font-family="Inconsolata" font-size="14.00" fill="#000000">local usage_welcome = &quot;Usage: &quot;</text>
<text text-anchor="middle" x="2245.2914" y="-22018.4363" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_usage()</text>
<text text-anchor="middle" x="2245.2914" y="-22003.0363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._usage then</text>
<text text-anchor="middle" x="2245.2914" y="-21987.6363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._usage</text>
<text text-anchor="middle" x="2245.2914" y="-21972.2362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21940.8362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = self:_inherit_property(&quot;usage_margin&quot;, #usage_welcome)</text>
<text text-anchor="middle" x="2245.2914" y="-21925.4362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local max_usage_width = self:_inherit_property(&quot;usage_max_width&quot;, 70)</text>
<text text-anchor="middle" x="2245.2914" y="-21910.0361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {usage_welcome .. self:_get_fullname()}</text>
<text text-anchor="middle" x="2245.2914" y="-21878.6361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add(s)</text>
<text text-anchor="middle" x="2245.2914" y="-21863.2361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #lines[#lines]+1+#s &lt;= max_usage_width then</text>
<text text-anchor="middle" x="2245.2914" y="-21847.836" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines] = lines[#lines] .. &quot; &quot; .. s</text>
<text text-anchor="middle" x="2245.2914" y="-21832.436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-21817.036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines+1] = (&quot; &quot;):rep(usage_margin) .. s</text>
<text text-anchor="middle" x="2245.2914" y="-21801.636" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21786.2359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21754.8359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Normally options are before positional arguments in usage messages.</text>
<text text-anchor="middle" x="2245.2914" y="-21739.4359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; However, vararg options should be after, because they can&#39;t be reliable used</text>
<text text-anchor="middle" x="2245.2914" y="-21724.0358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; before a positional argument.</text>
<text text-anchor="middle" x="2245.2914" y="-21708.6358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Mutexes come into play, too, and are shown as soon as possible.</text>
<text text-anchor="middle" x="2245.2914" y="-21693.2358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Overall, output usages in the following order:</text>
<text text-anchor="middle" x="2245.2914" y="-21677.8357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Mutexes that don&#39;t have positional arguments or vararg options.</text>
<text text-anchor="middle" x="2245.2914" y="-21662.4357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Options that are not in any mutexes and are not vararg.</text>
<text text-anchor="middle" x="2245.2914" y="-21647.0357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Positional arguments &#45; on their own or as a part of a mutex.</text>
<text text-anchor="middle" x="2245.2914" y="-21631.6356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 4. Remaining mutexes.</text>
<text text-anchor="middle" x="2245.2914" y="-21616.2356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 5. Remaining options.</text>
<text text-anchor="middle" x="2245.2914" y="-21584.8356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements_in_mutexes = {}</text>
<text text-anchor="middle" x="2245.2914" y="-21569.4355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="2245.2914" y="-21554.0355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_mutexes = {}</text>
<text text-anchor="middle" x="2245.2914" y="-21538.6355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_to_mutexes = {}</text>
<text text-anchor="middle" x="2245.2914" y="-21507.2355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_mutex(mutex, main_argument)</text>
<text text-anchor="middle" x="2245.2914" y="-21491.8354" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if added_mutexes[mutex] then</text>
<text text-anchor="middle" x="2245.2914" y="-21476.4354" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="2245.2914" y="-21461.0354" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21429.6353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;added_mutexes[mutex] = true</text>
<text text-anchor="middle" x="2245.2914" y="-21414.2353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="2245.2914" y="-21382.8353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="2245.2914" y="-21367.4352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="2245.2914" y="-21352.0352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option or element == main_argument then</text>
<text text-anchor="middle" x="2245.2914" y="-21336.6352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, element:_get_usage())</text>
<text text-anchor="middle" x="2245.2914" y="-21321.2351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="2245.2914" y="-21305.8351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21290.4351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21275.035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21243.635" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #buf == 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-21228.235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(buf[1])</text>
<text text-anchor="middle" x="2245.2914" y="-21212.835" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif #buf &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-21197.4349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;(&quot; .. table.concat(buf, &quot; | &quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-21182.0349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21166.6349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21135.2348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_element(element)</text>
<text text-anchor="middle" x="2245.2914" y="-21119.8348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="2245.2914" y="-21104.4348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(element:_get_usage())</text>
<text text-anchor="middle" x="2245.2914" y="-21089.0347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="2245.2914" y="-21073.6347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21058.2347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-21026.8346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="2245.2914" y="-21011.4346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local is_vararg = false</text>
<text text-anchor="middle" x="2245.2914" y="-20996.0346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local has_argument = false</text>
<text text-anchor="middle" x="2245.2914" y="-20964.6345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="2245.2914" y="-20949.2345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option then</text>
<text text-anchor="middle" x="2245.2914" y="-20933.8345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if element:_is_vararg() then</text>
<text text-anchor="middle" x="2245.2914" y="-20918.4345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;is_vararg = true</text>
<text text-anchor="middle" x="2245.2914" y="-20903.0344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20887.6344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-20872.2344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;has_argument = true</text>
<text text-anchor="middle" x="2245.2914" y="-20856.8343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument_to_mutexes[element] = argument_to_mutexes[element] or {}</text>
<text text-anchor="middle" x="2245.2914" y="-20841.4343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(argument_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="2245.2914" y="-20826.0343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20794.6342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elements_in_mutexes[element] = true</text>
<text text-anchor="middle" x="2245.2914" y="-20779.2342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20747.8342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not is_vararg and not has_argument then</text>
<text text-anchor="middle" x="2245.2914" y="-20732.4341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="2245.2914" y="-20717.0341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20701.6341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20670.234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-20654.834" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not elements_in_mutexes[option] and not option:_is_vararg() then</text>
<text text-anchor="middle" x="2245.2914" y="-20639.434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="2245.2914" y="-20624.034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20608.6339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20577.2339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Add usages for positional arguments, together with one mutex containing them, if they are in a mutex.</text>
<text text-anchor="middle" x="2245.2914" y="-20561.8339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(self._arguments) do</text>
<text text-anchor="middle" x="2245.2914" y="-20546.4338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Pick a mutex as a part of which to show this argument, take the first one that&#39;s still available.</text>
<text text-anchor="middle" x="2245.2914" y="-20531.0338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mutex</text>
<text text-anchor="middle" x="2245.2914" y="-20499.6338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if elements_in_mutexes[argument] then</text>
<text text-anchor="middle" x="2245.2914" y="-20484.2337" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, argument_mutex in ipairs(argument_to_mutexes[argument]) do</text>
<text text-anchor="middle" x="2245.2914" y="-20468.8337" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not added_mutexes[argument_mutex] then</text>
<text text-anchor="middle" x="2245.2914" y="-20453.4337" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mutex = argument_mutex</text>
<text text-anchor="middle" x="2245.2914" y="-20438.0336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20422.6336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20407.2336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20375.8335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if mutex then</text>
<text text-anchor="middle" x="2245.2914" y="-20360.4335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-20345.0335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-20329.6335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(argument)</text>
<text text-anchor="middle" x="2245.2914" y="-20314.2334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20298.8334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20267.4334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="2245.2914" y="-20252.0333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="2245.2914" y="-20236.6333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20205.2333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-20189.8332" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="2245.2914" y="-20174.4332" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20143.0332" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-20127.6331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._require_command then</text>
<text text-anchor="middle" x="2245.2914" y="-20112.2331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;&lt;command&gt;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-20096.8331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-20081.4331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;[&lt;command&gt;]&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-20066.033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-20034.633" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add(&quot;...&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-20019.233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19987.8329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-19972.4329" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-19941.0329" font-family="Inconsolata" font-size="14.00" fill="#000000">local function split_lines(s)</text>
<text text-anchor="middle" x="2245.2914" y="-19925.6328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s == &quot;&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-19910.2328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {}</text>
<text text-anchor="middle" x="2245.2914" y="-19894.8328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19863.4327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="2245.2914" y="-19832.0327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s:sub(&#45;1) ~= &quot;\n&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-19816.6327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;s = s .. &quot;\n&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-19801.2326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19769.8326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for line in s:gmatch(&quot;([^\n]*)\n&quot;) do</text>
<text text-anchor="middle" x="2245.2914" y="-19754.4326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="2245.2914" y="-19739.0326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19707.6325" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="2245.2914" y="-19692.2325" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-19660.8325" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="2245.2914" y="-19645.4324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Algorithm for splitting lines is simple and greedy.</text>
<text text-anchor="middle" x="2245.2914" y="-19630.0324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="2245.2914" y="-19598.6324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Preserve original indentation of the line, put this at the beginning of each result line.</text>
<text text-anchor="middle" x="2245.2914" y="-19583.2323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If the first word looks like a list marker (&#39;*&#39;, &#39;+&#39;, or &#39;&#45;&#39;), add spaces so that starts</text>
<text text-anchor="middle" x="2245.2914" y="-19567.8323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; of the second and the following lines vertically align with the start of the second word.</text>
<text text-anchor="middle" x="2245.2914" y="-19552.4323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local indentation = line:match(&quot;^ *&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-19521.0322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if line:find(&quot;^ *[%*%+%&#45;]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-19505.6322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;indentation = indentation .. &quot; &quot; .. line:match(&quot;^ *[%*%+%&#45;]( *)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-19490.2322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19458.8321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Parts of the last line being assembled.</text>
<text text-anchor="middle" x="2245.2914" y="-19443.4321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_parts = {}</text>
<text text-anchor="middle" x="2245.2914" y="-19412.0321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Length of the current line.</text>
<text text-anchor="middle" x="2245.2914" y="-19396.6321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_length = 0</text>
<text text-anchor="middle" x="2245.2914" y="-19365.232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Index of the next character to consider.</text>
<text text-anchor="middle" x="2245.2914" y="-19349.832" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local index = 1</text>
<text text-anchor="middle" x="2245.2914" y="-19318.432" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="2245.2914" y="-19303.0319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local word_start, word_finish, word = line:find(&quot;([^ ]+)&quot;, index)</text>
<text text-anchor="middle" x="2245.2914" y="-19271.6319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not word_start then</text>
<text text-anchor="middle" x="2245.2914" y="-19256.2319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Ignore trailing spaces, if any.</text>
<text text-anchor="middle" x="2245.2914" y="-19240.8318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-19225.4318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-19194.0318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local preceding_spaces = line:sub(index, word_start &#45; 1)</text>
<text text-anchor="middle" x="2245.2914" y="-19178.6317" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;index = word_finish + 1</text>
<text text-anchor="middle" x="2245.2914" y="-19147.2317" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if (#line_parts == 0) or (line_length + #preceding_spaces + #word &lt;= max_length) then</text>
<text text-anchor="middle" x="2245.2914" y="-19131.8317" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Either this is the very first word or it fits as an addition to the current line, add it.</text>
<text text-anchor="middle" x="2245.2914" y="-19116.4316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, preceding_spaces) &#45;&#45; For the very first word this adds the indentation.</text>
<text text-anchor="middle" x="2245.2914" y="-19101.0316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, word)</text>
<text text-anchor="middle" x="2245.2914" y="-19085.6316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = line_length + #preceding_spaces + #word</text>
<text text-anchor="middle" x="2245.2914" y="-19070.2316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-19054.8315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Does not fit, finish current line and put the word into a new one.</text>
<text text-anchor="middle" x="2245.2914" y="-19039.4315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="2245.2914" y="-19024.0315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_parts = {indentation, word}</text>
<text text-anchor="middle" x="2245.2914" y="-19008.6314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = #indentation + #word</text>
<text text-anchor="middle" x="2245.2914" y="-18993.2314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18977.8314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18946.4313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #line_parts &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-18931.0313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="2245.2914" y="-18915.6313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18884.2312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #result_lines == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-18868.8312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Preserve empty lines.</text>
<text text-anchor="middle" x="2245.2914" y="-18853.4312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result_lines[1] = &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-18838.0311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18806.6311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="2245.2914" y="-18791.2311" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-18759.8311" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Automatically wraps lines within given array,</text>
<text text-anchor="middle" x="2245.2914" y="-18744.431" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; attempting to limit line length to `max_length`.</text>
<text text-anchor="middle" x="2245.2914" y="-18729.031" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Existing line splits are preserved.</text>
<text text-anchor="middle" x="2245.2914" y="-18713.631" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap(lines, max_length)</text>
<text text-anchor="middle" x="2245.2914" y="-18698.2309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="2245.2914" y="-18666.8309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, line in ipairs(lines) do</text>
<text text-anchor="middle" x="2245.2914" y="-18651.4309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local autowrapped_lines = autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="2245.2914" y="-18620.0308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, autowrapped_line in ipairs(autowrapped_lines) do</text>
<text text-anchor="middle" x="2245.2914" y="-18604.6308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, autowrapped_line)</text>
<text text-anchor="middle" x="2245.2914" y="-18589.2308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18573.8307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18542.4307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="2245.2914" y="-18527.0307" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-18495.6306" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_element_help(element)</text>
<text text-anchor="middle" x="2245.2914" y="-18480.2306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local label_lines = element:_get_label_lines()</text>
<text text-anchor="middle" x="2245.2914" y="-18464.8306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_lines = split_lines(element:_get_description())</text>
<text text-anchor="middle" x="2245.2914" y="-18433.4306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="2245.2914" y="-18402.0305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; All label lines should have the same length (except the last one, it has no comma).</text>
<text text-anchor="middle" x="2245.2914" y="-18386.6305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If too long, start description after all the label lines.</text>
<text text-anchor="middle" x="2245.2914" y="-18371.2305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Otherwise, combine label and description lines.</text>
<text text-anchor="middle" x="2245.2914" y="-18339.8304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin_len = self:_inherit_property(&quot;help_usage_margin&quot;, 3)</text>
<text text-anchor="middle" x="2245.2914" y="-18324.4304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = (&quot; &quot;):rep(usage_margin_len)</text>
<text text-anchor="middle" x="2245.2914" y="-18309.0304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin_len = self:_inherit_property(&quot;help_description_margin&quot;, 25)</text>
<text text-anchor="middle" x="2245.2914" y="-18293.6303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin = (&quot; &quot;):rep(description_margin_len)</text>
<text text-anchor="middle" x="2245.2914" y="-18262.2303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-18230.8303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="2245.2914" y="-18215.4302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description_max_width = math.max(help_max_width &#45; description_margin_len, 10)</text>
<text text-anchor="middle" x="2245.2914" y="-18200.0302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;description_lines = autowrap(description_lines, description_max_width)</text>
<text text-anchor="middle" x="2245.2914" y="-18184.6302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18153.2301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #label_lines[1] &gt;= (description_margin_len &#45; usage_margin_len) then</text>
<text text-anchor="middle" x="2245.2914" y="-18137.8301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, label_line in ipairs(label_lines) do</text>
<text text-anchor="middle" x="2245.2914" y="-18122.4301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, usage_margin .. label_line)</text>
<text text-anchor="middle" x="2245.2914" y="-18107.0301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18075.63" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, description_line in ipairs(description_lines) do</text>
<text text-anchor="middle" x="2245.2914" y="-18060.23" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, description_margin .. description_line)</text>
<text text-anchor="middle" x="2245.2914" y="-18044.83" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-18029.4299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-18014.0299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, math.max(#label_lines, #description_lines) do</text>
<text text-anchor="middle" x="2245.2914" y="-17998.6299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local label_line = label_lines[i]</text>
<text text-anchor="middle" x="2245.2914" y="-17983.2298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local description_line = description_lines[i]</text>
<text text-anchor="middle" x="2245.2914" y="-17951.8298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local line = &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-17920.4298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if label_line then</text>
<text text-anchor="middle" x="2245.2914" y="-17905.0297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = usage_margin .. label_line</text>
<text text-anchor="middle" x="2245.2914" y="-17889.6297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17858.2297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if description_line and description_line ~= &quot;&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-17842.8296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. (&quot; &quot;):rep(description_margin_len &#45; #line) .. description_line</text>
<text text-anchor="middle" x="2245.2914" y="-17827.4296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17796.0296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, line)</text>
<text text-anchor="middle" x="2245.2914" y="-17780.6296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17765.2295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17733.8295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(result_lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-17718.4295" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-17687.0294" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_group_types(group)</text>
<text text-anchor="middle" x="2245.2914" y="-17671.6294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {}</text>
<text text-anchor="middle" x="2245.2914" y="-17640.2294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(group) do</text>
<text text-anchor="middle" x="2245.2914" y="-17624.8293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;types[getmetatable(element)] = true</text>
<text text-anchor="middle" x="2245.2914" y="-17609.4293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17578.0293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return types</text>
<text text-anchor="middle" x="2245.2914" y="-17562.6292" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-17531.2292" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_add_group_help(blocks, added_elements, label, elements)</text>
<text text-anchor="middle" x="2245.2914" y="-17515.8292" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {label}</text>
<text text-anchor="middle" x="2245.2914" y="-17484.4291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(elements) do</text>
<text text-anchor="middle" x="2245.2914" y="-17469.0291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="2245.2914" y="-17453.6291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="2245.2914" y="-17438.2291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, self:_get_element_help(element))</text>
<text text-anchor="middle" x="2245.2914" y="-17422.829" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17407.429" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17376.029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #buf &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-17360.6289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, table.concat(buf, (&quot;\n&quot;):rep(self:_inherit_property(&quot;help_vertical_space&quot;, 0) + 1)))</text>
<text text-anchor="middle" x="2245.2914" y="-17345.2289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17329.8289" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-17298.4288" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_help()</text>
<text text-anchor="middle" x="2245.2914" y="-17283.0288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._help then</text>
<text text-anchor="middle" x="2245.2914" y="-17267.6288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._help</text>
<text text-anchor="middle" x="2245.2914" y="-17252.2287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17220.8287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local blocks = {self:get_usage()}</text>
<text text-anchor="middle" x="2245.2914" y="-17189.4287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-17158.0286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._description then</text>
<text text-anchor="middle" x="2245.2914" y="-17142.6286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description = self._description</text>
<text text-anchor="middle" x="2245.2914" y="-17111.2286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="2245.2914" y="-17095.8286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;description = table.concat(autowrap(split_lines(description), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-17080.4285" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17049.0285" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, description)</text>
<text text-anchor="middle" x="2245.2914" y="-17033.6285" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-17002.2284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Put groups containing arguments first, then other arguments.</text>
<text text-anchor="middle" x="2245.2914" y="-16986.8284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Put remaining groups containing options, then other options.</text>
<text text-anchor="middle" x="2245.2914" y="-16971.4284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Put remaining groups containing commands, then other commands.</text>
<text text-anchor="middle" x="2245.2914" y="-16956.0283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Assume that an element can&#39;t be in several groups.</text>
<text text-anchor="middle" x="2245.2914" y="-16940.6283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local groups_by_type = {</text>
<text text-anchor="middle" x="2245.2914" y="-16925.2283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Argument] = {},</text>
<text text-anchor="middle" x="2245.2914" y="-16909.8282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Option] = {},</text>
<text text-anchor="middle" x="2245.2914" y="-16894.4282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Command] = {}</text>
<text text-anchor="middle" x="2245.2914" y="-16879.0282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="2245.2914" y="-16847.6282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, group in ipairs(self._groups) do</text>
<text text-anchor="middle" x="2245.2914" y="-16832.2281" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local group_types = get_group_types(group)</text>
<text text-anchor="middle" x="2245.2914" y="-16800.8281" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mt in ipairs({Argument, Option, Command}) do</text>
<text text-anchor="middle" x="2245.2914" y="-16785.4281" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if group_types[mt] then</text>
<text text-anchor="middle" x="2245.2914" y="-16770.028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(groups_by_type[mt], group)</text>
<text text-anchor="middle" x="2245.2914" y="-16754.628" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-16739.228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16723.8279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16708.4279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16677.0279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local default_groups = {</text>
<text text-anchor="middle" x="2245.2914" y="-16661.6278" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Arguments&quot;, type = Argument, elements = self._arguments},</text>
<text text-anchor="middle" x="2245.2914" y="-16646.2278" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Options&quot;, type = Option, elements = self._options},</text>
<text text-anchor="middle" x="2245.2914" y="-16630.8278" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Commands&quot;, type = Command, elements = self._commands}</text>
<text text-anchor="middle" x="2245.2914" y="-16615.4277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="2245.2914" y="-16584.0277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="2245.2914" y="-16552.6277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, default_group in ipairs(default_groups) do</text>
<text text-anchor="middle" x="2245.2914" y="-16537.2277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local type_groups = groups_by_type[default_group.type]</text>
<text text-anchor="middle" x="2245.2914" y="-16505.8276" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, group in ipairs(type_groups) do</text>
<text text-anchor="middle" x="2245.2914" y="-16490.4276" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, group.name .. &quot;:&quot;, group)</text>
<text text-anchor="middle" x="2245.2914" y="-16475.0276" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16443.6275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local default_label = default_group.name .. &quot;:&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-16412.2275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #type_groups &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-16396.8275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default_label = &quot;Other &quot; .. default_label:gsub(&quot;^.&quot;, string.lower)</text>
<text text-anchor="middle" x="2245.2914" y="-16381.4274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16350.0274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, default_label, default_group.elements)</text>
<text text-anchor="middle" x="2245.2914" y="-16334.6274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16303.2273" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._epilog then</text>
<text text-anchor="middle" x="2245.2914" y="-16287.8273" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local epilog = self._epilog</text>
<text text-anchor="middle" x="2245.2914" y="-16256.4273" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="2245.2914" y="-16241.0272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;epilog = table.concat(autowrap(split_lines(epilog), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-16225.6272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16194.2272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, epilog)</text>
<text text-anchor="middle" x="2245.2914" y="-16178.8272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16147.4271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(blocks, &quot;\n\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-16132.0271" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-16100.6271" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:add_help_command(value)</text>
<text text-anchor="middle" x="2245.2914" y="-16085.227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-16069.827" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(type(value) == &quot;string&quot; or type(value) == &quot;table&quot;,</text>
<text text-anchor="middle" x="2245.2914" y="-16054.427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #1 to &#39;add_help_command&#39; (string or table expected, got %s)&quot;):format(type(value)))</text>
<text text-anchor="middle" x="2245.2914" y="-16039.0269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-16007.6269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help = self:command()</text>
<text text-anchor="middle" x="2245.2914" y="-15992.2269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:description &quot;Show help for commands.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-15976.8268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;help:argument &quot;command&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-15961.4268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:description &quot;The command to show help for.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-15946.0268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:args &quot;?&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-15930.6267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:action(function(_, _, cmd)</text>
<text text-anchor="middle" x="2245.2914" y="-15915.2267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not cmd then</text>
<text text-anchor="middle" x="2245.2914" y="-15899.8267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;print(self:get_help())</text>
<text text-anchor="middle" x="2245.2914" y="-15884.4267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="2245.2914" y="-15869.0266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-15853.6266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-15838.2266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(command._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-15822.8265" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if alias == cmd then</text>
<text text-anchor="middle" x="2245.2914" y="-15807.4265" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;print(command:get_help())</text>
<text text-anchor="middle" x="2245.2914" y="-15792.0265" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="2245.2914" y="-15776.6264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15761.2264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15745.8264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15730.4263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15715.0263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help:error((&quot;unknown command &#39;%s&#39;&quot;):format(cmd))</text>
<text text-anchor="middle" x="2245.2914" y="-15699.6263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="2245.2914" y="-15668.2262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-15652.8262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;help = help(value)</text>
<text text-anchor="middle" x="2245.2914" y="-15637.4262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15606.0262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not help._name then</text>
<text text-anchor="middle" x="2245.2914" y="-15590.6261" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;help &quot;help&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-15575.2261" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15543.8261" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;help._is_help_command = true</text>
<text text-anchor="middle" x="2245.2914" y="-15528.426" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-15513.026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-15481.626" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_is_shell_safe()</text>
<text text-anchor="middle" x="2245.2914" y="-15466.2259" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._basename then</text>
<text text-anchor="middle" x="2245.2914" y="-15450.8259" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._basename:find(&quot;[^%w_%&#45;%+%.]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-15435.4259" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-15420.0258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15404.6258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-15389.2258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-15373.8257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if alias:find(&quot;[^%w_%&#45;%+%.]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-15358.4257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-15343.0257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15327.6257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15312.2256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15296.8256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-15281.4256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-15266.0255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if alias:find(&quot;[^%w_%&#45;%+%.]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-15250.6255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-15235.2255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15219.8254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15204.4254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-15189.0254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, choice in ipairs(option._choices) do</text>
<text text-anchor="middle" x="2245.2914" y="-15173.6253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if choice:find(&quot;[%s&#39;\&quot;]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-15158.2253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-15142.8253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15127.4252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15112.0252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15096.6252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-15081.2252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(self._arguments) do</text>
<text text-anchor="middle" x="2245.2914" y="-15065.8251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if argument._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-15050.4251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, choice in ipairs(argument._choices) do</text>
<text text-anchor="middle" x="2245.2914" y="-15035.0251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if choice:find(&quot;[%s&#39;\&quot;]&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-15019.625" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-15004.225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14988.825" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14973.4249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14958.0249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14942.6249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-14927.2248" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not command:_is_shell_safe() then</text>
<text text-anchor="middle" x="2245.2914" y="-14911.8248" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false</text>
<text text-anchor="middle" x="2245.2914" y="-14896.4248" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14881.0247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14865.6247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return true</text>
<text text-anchor="middle" x="2245.2914" y="-14850.2247" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-14818.8247" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:add_complete(value)</text>
<text text-anchor="middle" x="2245.2914" y="-14803.4246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-14788.0246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(type(value) == &quot;string&quot; or type(value) == &quot;table&quot;,</text>
<text text-anchor="middle" x="2245.2914" y="-14772.6246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #1 to &#39;add_complete&#39; (string or table expected, got %s)&quot;):format(type(value)))</text>
<text text-anchor="middle" x="2245.2914" y="-14757.2245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14725.8245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local complete = self:option()</text>
<text text-anchor="middle" x="2245.2914" y="-14710.4245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:description &quot;Output a shell completion script for the specified shell.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14695.0244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:args(1)</text>
<text text-anchor="middle" x="2245.2914" y="-14679.6244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:choices {&quot;bash&quot;, &quot;zsh&quot;, &quot;fish&quot;}</text>
<text text-anchor="middle" x="2245.2914" y="-14664.2244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:action(function(_, _, shell)</text>
<text text-anchor="middle" x="2245.2914" y="-14648.8243" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;io.write(self[&quot;get_&quot; .. shell .. &quot;_complete&quot;](self))</text>
<text text-anchor="middle" x="2245.2914" y="-14633.4243" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="2245.2914" y="-14618.0243" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="2245.2914" y="-14586.6242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-14571.2242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;complete = complete(value)</text>
<text text-anchor="middle" x="2245.2914" y="-14555.8242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14524.4242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not complete._name then</text>
<text text-anchor="middle" x="2245.2914" y="-14509.0241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;complete &quot;&#45;&#45;completion&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14493.6241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14462.2241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-14446.824" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-14415.424" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:add_complete_command(value)</text>
<text text-anchor="middle" x="2245.2914" y="-14400.024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-14384.6239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(type(value) == &quot;string&quot; or type(value) == &quot;table&quot;,</text>
<text text-anchor="middle" x="2245.2914" y="-14369.2239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #1 to &#39;add_complete_command&#39; (string or table expected, got %s)&quot;):format(type(value)))</text>
<text text-anchor="middle" x="2245.2914" y="-14353.8239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14322.4238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local complete = self:command()</text>
<text text-anchor="middle" x="2245.2914" y="-14307.0238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:description &quot;Output a shell completion script.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14291.6238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;complete:argument &quot;shell&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14276.2238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:description &quot;The shell to output a completion script for.&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14260.8237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:choices {&quot;bash&quot;, &quot;zsh&quot;, &quot;fish&quot;}</text>
<text text-anchor="middle" x="2245.2914" y="-14245.4237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;:action(function(_, _, shell)</text>
<text text-anchor="middle" x="2245.2914" y="-14230.0237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;io.write(self[&quot;get_&quot; .. shell .. &quot;_complete&quot;](self))</text>
<text text-anchor="middle" x="2245.2914" y="-14214.6236" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="2245.2914" y="-14199.2236" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="2245.2914" y="-14167.8236" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="2245.2914" y="-14152.4235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;complete = complete(value)</text>
<text text-anchor="middle" x="2245.2914" y="-14137.0235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14105.6235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not complete._name then</text>
<text text-anchor="middle" x="2245.2914" y="-14090.2234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;complete &quot;completion&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-14074.8234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-14043.4234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-14028.0233" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13996.6233" font-family="Inconsolata" font-size="14.00" fill="#000000">local function base_name(pathname)</text>
<text text-anchor="middle" x="2245.2914" y="-13981.2233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return pathname:gsub(&quot;[/\\]*$&quot;, &quot;&quot;):match(&quot;.*[/\\]([^/\\]*)&quot;) or pathname</text>
<text text-anchor="middle" x="2245.2914" y="-13965.8233" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13934.4232" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_short_description(element)</text>
<text text-anchor="middle" x="2245.2914" y="-13919.0232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local short = element:_get_description():match(&quot;^(.&#45;)%.%s&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13903.6232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return short or element:_get_description():match(&quot;^(.&#45;)%.?$&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13888.2231" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13856.8231" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_options()</text>
<text text-anchor="middle" x="2245.2914" y="-13841.4231" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local options = {}</text>
<text text-anchor="middle" x="2245.2914" y="-13826.023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-13810.623" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-13795.223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(options, alias)</text>
<text text-anchor="middle" x="2245.2914" y="-13779.8229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13764.4229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13749.0229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(options, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13733.6228" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13702.2228" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_commands()</text>
<text text-anchor="middle" x="2245.2914" y="-13686.8228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local commands = {}</text>
<text text-anchor="middle" x="2245.2914" y="-13671.4228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-13656.0227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(command._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-13640.6227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(commands, alias)</text>
<text text-anchor="middle" x="2245.2914" y="-13625.2227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13609.8226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13594.4226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(commands, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13579.0226" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13547.6225" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_bash_option_args(buf, indent)</text>
<text text-anchor="middle" x="2245.2914" y="-13532.2225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local opts = {}</text>
<text text-anchor="middle" x="2245.2914" y="-13516.8225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-13501.4224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._choices or option._minargs &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-13486.0224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local compreply</text>
<text text-anchor="middle" x="2245.2914" y="-13470.6224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-13455.2223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;compreply = &#39;COMPREPLY=($(compgen &#45;W &quot;&#39; .. table.concat(option._choices, &quot; &quot;) .. &#39;&quot; &#45;&#45; &quot;$cur&quot;))&#39;</text>
<text text-anchor="middle" x="2245.2914" y="-13439.8223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-13424.4223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;compreply = &#39;COMPREPLY=($(compgen &#45;f &#45;&#45; &quot;$cur&quot;))&#39;</text>
<text text-anchor="middle" x="2245.2914" y="-13409.0223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13393.6222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(opts, (&quot; &quot;):rep(indent + 4) .. table.concat(option._aliases, &quot;|&quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13378.2222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(opts, (&quot; &quot;):rep(indent + 8) .. compreply)</text>
<text text-anchor="middle" x="2245.2914" y="-13362.8222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(opts, (&quot; &quot;):rep(indent + 8) .. &quot;return 0&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13347.4221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(opts, (&quot; &quot;):rep(indent + 8) .. &quot;;;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13332.0221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13316.6221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13285.222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #opts &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-13269.822" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &#39;case &quot;$prev&quot; in&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-13254.422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, table.concat(opts, &quot;\n&quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-13239.0219" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;esac\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13223.6219" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13208.2219" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-13176.8218" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_bash_get_cmd(buf, indent)</text>
<text text-anchor="middle" x="2245.2914" y="-13161.4218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-13146.0218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="2245.2914" y="-13130.6218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-13099.2217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &#39;args=(&quot;${args[@]:1}&quot;)&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-13083.8217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &#39;for arg in &quot;${args[@]}&quot;; do&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-13068.4217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 4) .. &#39;case &quot;$arg&quot; in&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-13037.0216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-13021.6216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 8) .. table.concat(command._aliases, &quot;|&quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-13006.2216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-12990.8215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &#39;cmd=&quot;$cmd &#39; .. command._name .. &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12975.4215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-12960.0215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &#39;cmd=&quot;&#39; .. command._name .. &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12944.6214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12929.2214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &#39;opts=&quot;$opts &#39; .. command:_get_options() .. &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12913.8214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_bash_get_cmd(buf, indent + 12)</text>
<text text-anchor="middle" x="2245.2914" y="-12898.4213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &quot;break&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12883.0213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &quot;;;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12867.6213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12836.2213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 4) .. &quot;esac&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12820.8212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;done&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12805.4212" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-12774.0212" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_bash_cmd_completions(buf)</text>
<text text-anchor="middle" x="2245.2914" y="-12758.6211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local cmd_buf = {}</text>
<text text-anchor="middle" x="2245.2914" y="-12743.2211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-12727.8211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_bash_option_args(cmd_buf, 12)</text>
<text text-anchor="middle" x="2245.2914" y="-12712.421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12697.021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-12681.621" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(cmd_buf, (&quot; &quot;):rep(12) .. &#39;COMPREPLY=($(compgen &#45;W &quot;&#39; .. self:_get_commands() .. &#39;&quot; &#45;&#45; &quot;$cur&quot;))&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12666.2209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif self._is_help_command then</text>
<text text-anchor="middle" x="2245.2914" y="-12650.8209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(cmd_buf, (&quot; &quot;):rep(12)</text>
<text text-anchor="middle" x="2245.2914" y="-12635.4209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.. &#39;COMPREPLY=($(compgen &#45;W &quot;&#39;</text>
<text text-anchor="middle" x="2245.2914" y="-12620.0208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.. self._parent:_get_commands()</text>
<text text-anchor="middle" x="2245.2914" y="-12604.6208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.. &#39;&quot; &#45;&#45; &quot;$cur&quot;))&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12589.2208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12573.8208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #cmd_buf &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-12558.4207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(8) .. &quot;&#39;&quot; .. self:_get_fullname(true) .. &quot;&#39;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12543.0207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, table.concat(cmd_buf, &quot;\n&quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-12527.6207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(12) .. &quot;;;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12512.2206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12480.8206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-12465.4206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_bash_cmd_completions(buf)</text>
<text text-anchor="middle" x="2245.2914" y="-12450.0205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12434.6205" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-12403.2205" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_bash_complete()</text>
<text text-anchor="middle" x="2245.2914" y="-12387.8204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._basename = base_name(self._name)</text>
<text text-anchor="middle" x="2245.2914" y="-12372.4204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(self:_is_shell_safe())</text>
<text text-anchor="middle" x="2245.2914" y="-12357.0204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {([[</text>
<text text-anchor="middle" x="2245.2914" y="-12341.6203" font-family="Inconsolata" font-size="14.00" fill="#000000">_%s() {</text>
<text text-anchor="middle" x="2245.2914" y="-12326.2203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local IFS=$&#39; \t\n&#39;</text>
<text text-anchor="middle" x="2245.2914" y="-12310.8203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local args cur prev cmd opts arg</text>
<text text-anchor="middle" x="2245.2914" y="-12295.4203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;args=(&quot;${COMP_WORDS[@]}&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12280.0202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;cur=&quot;${COMP_WORDS[COMP_CWORD]}&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-12264.6202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;prev=&quot;${COMP_WORDS[COMP_CWORD&#45;1]}&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-12249.2202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;opts=&quot;%s&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-12233.8201" font-family="Inconsolata" font-size="14.00" fill="#000000">]]):format(self._basename, self:_get_options())}</text>
<text text-anchor="middle" x="2245.2914" y="-12202.4201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_bash_option_args(buf, 4)</text>
<text text-anchor="middle" x="2245.2914" y="-12187.0201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_bash_get_cmd(buf, 4)</text>
<text text-anchor="middle" x="2245.2914" y="-12171.62" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-12156.22" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12140.82" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(4) .. &#39;case &quot;$cmd&quot; in&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-12125.4199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_bash_cmd_completions(buf)</text>
<text text-anchor="middle" x="2245.2914" y="-12110.0199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(4) .. &quot;esac\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-12094.6199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-12063.2198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, ([=[</text>
<text text-anchor="middle" x="2245.2914" y="-12047.8198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if [[ &quot;$cur&quot; = &#45;* ]]; then</text>
<text text-anchor="middle" x="2245.2914" y="-12032.4198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;COMPREPLY=($(compgen &#45;W &quot;$opts&quot; &#45;&#45; &quot;$cur&quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-12017.0198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;fi</text>
<text text-anchor="middle" x="2245.2914" y="-12001.6197" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2245.2914" y="-11970.2197" font-family="Inconsolata" font-size="14.00" fill="#000000">complete &#45;F _%s &#45;o bashdefault &#45;o default %s</text>
<text text-anchor="middle" x="2245.2914" y="-11954.8197" font-family="Inconsolata" font-size="14.00" fill="#000000">]=]):format(self._basename, self._basename))</text>
<text text-anchor="middle" x="2245.2914" y="-11923.4196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(buf, &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11908.0196" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-11876.6196" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_zsh_arguments(buf, cmd_name, indent)</text>
<text text-anchor="middle" x="2245.2914" y="-11861.2195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-11845.8195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;options=(&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11830.4195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &quot;$options&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11815.0194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-11799.6194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;local &#45;a options=(&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11784.2194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11752.8193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-11737.4193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = {}</text>
<text text-anchor="middle" x="2245.2914" y="-11722.0193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #option._aliases &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-11706.6193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option._maxcount &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-11691.2192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &#39;&quot;*&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11675.8192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11660.4192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;{&quot; .. table.concat(option._aliases, &quot;,&quot;) .. &#39;}&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11645.0191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-11629.6191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11614.2191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option._maxcount &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-11598.819" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;*&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11583.419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11568.019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, option._name)</text>
<text text-anchor="middle" x="2245.2914" y="-11552.6189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11537.2189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._description then</text>
<text text-anchor="middle" x="2245.2914" y="-11521.8189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local description = get_short_description(option):gsub(&#39;[&quot;%]:`$]&#39;, &quot;\\%0&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11506.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;[&quot; .. description .. &quot;]&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11491.0188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11475.6188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._maxargs == math.huge then</text>
<text text-anchor="middle" x="2245.2914" y="-11460.2188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;:*&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11444.8187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11429.4187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-11414.0187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;: :(&quot; .. table.concat(option._choices, &quot; &quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11398.6186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif option._maxargs &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-11383.2186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;: :_files&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11367.8186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11352.4185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(line, &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11337.0185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. table.concat(line))</text>
<text text-anchor="middle" x="2245.2914" y="-11321.6185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11290.2184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11274.8184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;_arguments &#45;s &#45;S \\&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11259.4184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &quot;$options \\&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-11228.0184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._is_help_command then</text>
<text text-anchor="middle" x="2245.2914" y="-11212.6183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &#39;&quot;: :(&#39; .. self._parent:_get_commands() .. &#39;)&quot; \\&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11197.2183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-11181.8183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, argument in ipairs(self._arguments) do</text>
<text text-anchor="middle" x="2245.2914" y="-11166.4182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local spec</text>
<text text-anchor="middle" x="2245.2914" y="-11151.0182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if argument._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-11135.6182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;spec = &quot;: :(&quot; .. table.concat(argument._choices, &quot; &quot;) .. &quot;)&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-11120.2181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-11104.8181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;spec = &quot;: :_files&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-11089.4181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11074.018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if argument._maxargs == math.huge then</text>
<text text-anchor="middle" x="2245.2914" y="-11058.618" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &#39;&quot;*&#39; .. spec .. &#39;&quot; \\&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-11043.218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-11027.8179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-11012.4179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ = 1, argument._maxargs do</text>
<text text-anchor="middle" x="2245.2914" y="-10997.0179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &#39;&quot;&#39; .. spec .. &#39;&quot; \\&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10981.6179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10966.2178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10934.8178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-10919.4178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &#39;&quot;: :_&#39; .. cmd_name .. &#39;_cmds&quot; \\&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10904.0177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &#39;&quot;*:: :&#45;&gt;args&quot; \\&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10888.6177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10873.2177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10841.8176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. &quot;&amp;&amp; return 0&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10826.4176" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-10795.0176" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_zsh_cmds(buf, cmd_name)</text>
<text text-anchor="middle" x="2245.2914" y="-10779.6175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;\n_&quot; .. cmd_name .. &quot;_cmds() {&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10764.2175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot; &#160;local &#45;a commands=(&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10732.8175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-10717.4174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = {}</text>
<text text-anchor="middle" x="2245.2914" y="-10702.0174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #command._aliases &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-10686.6174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;{&quot; .. table.concat(command._aliases, &quot;,&quot;) .. &#39;}&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10671.2174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-10655.8173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &#39;&quot;&#39; .. command._name)</text>
<text text-anchor="middle" x="2245.2914" y="-10640.4173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10625.0173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if command._description then</text>
<text text-anchor="middle" x="2245.2914" y="-10609.6172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line, &quot;:&quot; .. get_short_description(command):gsub(&#39;[&quot;`$]&#39;, &quot;\\%0&quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-10594.2172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10578.8172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot; &#160;&#160;&#160;&quot; .. table.concat(line) .. &#39;&quot;&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10563.4171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10532.0171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &#39; &#160;)\n &#160;_describe &quot;command&quot; commands\n}&#39;)</text>
<text text-anchor="middle" x="2245.2914" y="-10516.6171" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-10485.217" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_zsh_complete_help(buf, cmds_buf, cmd_name, indent)</text>
<text text-anchor="middle" x="2245.2914" y="-10469.817" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-10454.417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="2245.2914" y="-10439.0169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10407.6169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_zsh_cmds(cmds_buf, cmd_name)</text>
<text text-anchor="middle" x="2245.2914" y="-10392.2169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;\n&quot; .. (&quot; &quot;):rep(indent) .. &quot;case $words[1] in&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10360.8169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-10345.4168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local name = cmd_name .. &quot;_&quot; .. command._name</text>
<text text-anchor="middle" x="2245.2914" y="-10330.0168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 2) .. table.concat(command._aliases, &quot;|&quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10314.6168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_zsh_arguments(buf, name, indent + 4)</text>
<text text-anchor="middle" x="2245.2914" y="-10299.2167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_zsh_complete_help(buf, cmds_buf, name, indent + 4)</text>
<text text-anchor="middle" x="2245.2914" y="-10283.8167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 4) .. &quot;;;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10268.4167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10237.0166" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;esac&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10221.6166" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-10190.2166" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_zsh_complete()</text>
<text text-anchor="middle" x="2245.2914" y="-10174.8165" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._basename = base_name(self._name)</text>
<text text-anchor="middle" x="2245.2914" y="-10159.4165" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(self:_is_shell_safe())</text>
<text text-anchor="middle" x="2245.2914" y="-10144.0165" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {(&quot;#compdef %s\n&quot;):format(self._basename)}</text>
<text text-anchor="middle" x="2245.2914" y="-10128.6164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local cmds_buf = {}</text>
<text text-anchor="middle" x="2245.2914" y="-10113.2164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;_&quot; .. self._basename .. &quot;() {&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10097.8164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-10082.4164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot; &#160;local context state state_descr line&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10067.0163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot; &#160;typeset &#45;A opt_args\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-10051.6163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-10036.2163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_zsh_arguments(buf, self._basename, 2)</text>
<text text-anchor="middle" x="2245.2914" y="-10020.8162" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_zsh_complete_help(buf, cmds_buf, self._basename, 2)</text>
<text text-anchor="middle" x="2245.2914" y="-10005.4162" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;\n &#160;return 1&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9990.0162" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;}&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9958.6161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result = table.concat(buf, &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9943.2161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #cmds_buf &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-9927.8161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result = result .. &quot;\n&quot; .. table.concat(cmds_buf, &quot;\n&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9912.416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9897.016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result .. &quot;\n\n_&quot; .. self._basename .. &quot;\n&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-9881.616" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-9850.2159" font-family="Inconsolata" font-size="14.00" fill="#000000">local function fish_escape(string)</text>
<text text-anchor="middle" x="2245.2914" y="-9834.8159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return string:gsub(&quot;[\\&#39;]&quot;, &quot;\\%0&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9819.4159" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-9788.0159" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_fish_get_cmd(buf, indent)</text>
<text text-anchor="middle" x="2245.2914" y="-9772.6158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-9757.2158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="2245.2914" y="-9741.8158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9710.4157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;set &#45;e cmdline[1]&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9695.0157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;for arg in $cmdline&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9679.6157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 4) .. &quot;switch $arg&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9648.2156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-9632.8156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 8) .. &quot;case &quot; .. table.concat(command._aliases, &quot; &quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-9617.4156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &quot;set cmd $cmd &quot; .. command._name)</text>
<text text-anchor="middle" x="2245.2914" y="-9602.0155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_fish_get_cmd(buf, indent + 12)</text>
<text text-anchor="middle" x="2245.2914" y="-9586.6155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 12) .. &quot;break&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9571.2155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9539.8154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent + 4) .. &quot;end&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9524.4154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, (&quot; &quot;):rep(indent) .. &quot;end&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9509.0154" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-9477.6154" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_fish_complete_help(buf, basename)</text>
<text text-anchor="middle" x="2245.2914" y="-9462.2153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local prefix = &quot;complete &#45;c &quot; .. basename</text>
<text text-anchor="middle" x="2245.2914" y="-9446.8153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(buf, &quot;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9415.4153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-9400.0152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local aliases = table.concat(command._aliases, &quot; &quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9384.6152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line</text>
<text text-anchor="middle" x="2245.2914" y="-9369.2152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-9353.8151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = (&quot;%s &#45;n &#39;__fish_%s_using_command %s&#39; &#45;xa &#39;%s&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9338.4151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:format(prefix, basename, self:_get_fullname(true), aliases)</text>
<text text-anchor="middle" x="2245.2914" y="-9323.0151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-9307.615" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = (&quot;%s &#45;n &#39;__fish_%s_using_command&#39; &#45;xa &#39;%s&#39;&quot;):format(prefix, basename, aliases)</text>
<text text-anchor="middle" x="2245.2914" y="-9292.215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9276.815" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if command._description then</text>
<text text-anchor="middle" x="2245.2914" y="-9261.4149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = (&quot;%s &#45;d &#39;%s&#39;&quot;):format(line, fish_escape(get_short_description(command)))</text>
<text text-anchor="middle" x="2245.2914" y="-9246.0149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9230.6149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, line)</text>
<text text-anchor="middle" x="2245.2914" y="-9215.2149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9183.8148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._is_help_command then</text>
<text text-anchor="middle" x="2245.2914" y="-9168.4148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = (&quot;%s &#45;n &#39;__fish_%s_using_command %s&#39; &#45;xa &#39;%s&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9153.0148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:format(prefix, basename, self:_get_fullname(true), self._parent:_get_commands())</text>
<text text-anchor="middle" x="2245.2914" y="-9137.6147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, line)</text>
<text text-anchor="middle" x="2245.2914" y="-9122.2147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-9090.8147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-9075.4146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local parts = {prefix}</text>
<text text-anchor="middle" x="2245.2914" y="-9044.0146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._parent then</text>
<text text-anchor="middle" x="2245.2914" y="-9028.6146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;n &#39;__fish_&quot; .. basename .. &quot;_seen_command &quot; .. self:_get_fullname(true) .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-9013.2145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8981.8145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-8966.4145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if alias:match(&quot;^%&#45;.$&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-8951.0144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;s &quot; .. alias:sub(2))</text>
<text text-anchor="middle" x="2245.2914" y="-8935.6144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif alias:match(&quot;^%&#45;%&#45;.+&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-8920.2144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;l &quot; .. alias:sub(3))</text>
<text text-anchor="middle" x="2245.2914" y="-8904.8144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8889.4143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8858.0143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-8842.6143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;xa &#39;&quot; .. table.concat(option._choices, &quot; &quot;) .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-8827.2142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif option._minargs &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-8811.8142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;r&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-8796.4142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8765.0141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option._description then</text>
<text text-anchor="middle" x="2245.2914" y="-8749.6141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(parts, &quot;&#45;d &#39;&quot; .. fish_escape(get_short_description(option)) .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-8734.2141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8702.814" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, table.concat(parts, &quot; &quot;))</text>
<text text-anchor="middle" x="2245.2914" y="-8687.414" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8656.014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-8640.614" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_fish_complete_help(buf, basename)</text>
<text text-anchor="middle" x="2245.2914" y="-8625.2139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8609.8139" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-8578.4139" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_fish_complete()</text>
<text text-anchor="middle" x="2245.2914" y="-8563.0138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._basename = base_name(self._name)</text>
<text text-anchor="middle" x="2245.2914" y="-8547.6138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(self:_is_shell_safe())</text>
<text text-anchor="middle" x="2245.2914" y="-8532.2138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="2245.2914" y="-8500.8137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-8485.4137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, ([[</text>
<text text-anchor="middle" x="2245.2914" y="-8470.0137" font-family="Inconsolata" font-size="14.00" fill="#000000">function __fish_%s_print_command</text>
<text text-anchor="middle" x="2245.2914" y="-8454.6136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;set &#45;l cmdline (commandline &#45;poc)</text>
<text text-anchor="middle" x="2245.2914" y="-8439.2136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;set &#45;l cmd]]):format(self._basename))</text>
<text text-anchor="middle" x="2245.2914" y="-8423.8136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_fish_get_cmd(buf, 4)</text>
<text text-anchor="middle" x="2245.2914" y="-8408.4135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, ([[</text>
<text text-anchor="middle" x="2245.2914" y="-8393.0135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;echo &quot;$cmd&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-8377.6135" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-8346.2135" font-family="Inconsolata" font-size="14.00" fill="#000000">function __fish_%s_using_command</text>
<text text-anchor="middle" x="2245.2914" y="-8330.8134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;test (__fish_%s_print_command) = &quot;$argv&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-8315.4134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;and return 0</text>
<text text-anchor="middle" x="2245.2914" y="-8300.0134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;or return 1</text>
<text text-anchor="middle" x="2245.2914" y="-8284.6133" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-8253.2133" font-family="Inconsolata" font-size="14.00" fill="#000000">function __fish_%s_seen_command</text>
<text text-anchor="middle" x="2245.2914" y="-8237.8133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;string match &#45;q &quot;$argv*&quot; (__fish_%s_print_command)</text>
<text text-anchor="middle" x="2245.2914" y="-8222.4132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;and return 0</text>
<text text-anchor="middle" x="2245.2914" y="-8207.0132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;or return 1</text>
<text text-anchor="middle" x="2245.2914" y="-8191.6132" font-family="Inconsolata" font-size="14.00" fill="#000000">end]]):format(self._basename, self._basename, self._basename, self._basename))</text>
<text text-anchor="middle" x="2245.2914" y="-8176.2131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-8144.8131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:_fish_complete_help(buf, self._basename)</text>
<text text-anchor="middle" x="2245.2914" y="-8129.4131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(buf, &quot;\n&quot;) .. &quot;\n&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-8114.013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-8082.613" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_tip(context, wrong_name)</text>
<text text-anchor="middle" x="2245.2914" y="-8067.213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local context_pool = {}</text>
<text text-anchor="middle" x="2245.2914" y="-8051.813" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_name</text>
<text text-anchor="middle" x="2245.2914" y="-8036.4129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_names = {}</text>
<text text-anchor="middle" x="2245.2914" y="-8005.0129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for name in pairs(context) do</text>
<text text-anchor="middle" x="2245.2914" y="-7989.6129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(name) == &quot;string&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-7974.2128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 1, #name do</text>
<text text-anchor="middle" x="2245.2914" y="-7958.8128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_name = name:sub(1, i &#45; 1) .. name:sub(i + 1)</text>
<text text-anchor="middle" x="2245.2914" y="-7927.4128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not context_pool[possible_name] then</text>
<text text-anchor="middle" x="2245.2914" y="-7912.0127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context_pool[possible_name] = {}</text>
<text text-anchor="middle" x="2245.2914" y="-7896.6127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7865.2127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(context_pool[possible_name], name)</text>
<text text-anchor="middle" x="2245.2914" y="-7849.8126" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7834.4126" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7819.0126" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7787.6125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #wrong_name + 1 do</text>
<text text-anchor="middle" x="2245.2914" y="-7772.2125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;possible_name = wrong_name:sub(1, i &#45; 1) .. wrong_name:sub(i + 1)</text>
<text text-anchor="middle" x="2245.2914" y="-7740.8125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if context[possible_name] then</text>
<text text-anchor="middle" x="2245.2914" y="-7725.4125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[possible_name] = true</text>
<text text-anchor="middle" x="2245.2914" y="-7710.0124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif context_pool[possible_name] then</text>
<text text-anchor="middle" x="2245.2914" y="-7694.6124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, name in ipairs(context_pool[possible_name]) do</text>
<text text-anchor="middle" x="2245.2914" y="-7679.2124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[name] = true</text>
<text text-anchor="middle" x="2245.2914" y="-7663.8123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7648.4123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7633.0123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7601.6122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first = next(possible_names)</text>
<text text-anchor="middle" x="2245.2914" y="-7570.2122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if first then</text>
<text text-anchor="middle" x="2245.2914" y="-7554.8122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if next(possible_names, first) then</text>
<text text-anchor="middle" x="2245.2914" y="-7539.4121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local possible_names_arr = {}</text>
<text text-anchor="middle" x="2245.2914" y="-7508.0121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name in pairs(possible_names) do</text>
<text text-anchor="middle" x="2245.2914" y="-7492.6121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(possible_names_arr, &quot;&#39;&quot; .. name .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-7477.212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7445.812" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.sort(possible_names_arr)</text>
<text text-anchor="middle" x="2245.2914" y="-7430.412" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean one of these: &quot; .. table.concat(possible_names_arr, &quot; &quot;) .. &quot;?&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-7415.012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-7399.6119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean &#39;&quot; .. first .. &quot;&#39;?&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-7384.2119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7368.8119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-7353.4118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-7338.0118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-7322.6118" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-7291.2117" font-family="Inconsolata" font-size="14.00" fill="#000000">local ElementState = class({</text>
<text text-anchor="middle" x="2245.2914" y="-7275.8117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;invocations = 0</text>
<text text-anchor="middle" x="2245.2914" y="-7260.4117" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="2245.2914" y="-7229.0116" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:__call(state, element)</text>
<text text-anchor="middle" x="2245.2914" y="-7213.6116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state = state</text>
<text text-anchor="middle" x="2245.2914" y="-7198.2116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.result = state.result</text>
<text text-anchor="middle" x="2245.2914" y="-7182.8115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.element = element</text>
<text text-anchor="middle" x="2245.2914" y="-7167.4115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.target = element._target or element:_get_default_target()</text>
<text text-anchor="middle" x="2245.2914" y="-7152.0115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.action, self.result[self.target] = element:_get_action()</text>
<text text-anchor="middle" x="2245.2914" y="-7136.6115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-7121.2114" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-7089.8114" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:error(fmt, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-7074.4114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state:error(fmt, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-7059.0113" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-7027.6113" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:convert(argument, index)</text>
<text text-anchor="middle" x="2245.2914" y="-7012.2113" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local converter = self.element._convert</text>
<text text-anchor="middle" x="2245.2914" y="-6980.8112" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if converter then</text>
<text text-anchor="middle" x="2245.2914" y="-6965.4112" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local ok, err</text>
<text text-anchor="middle" x="2245.2914" y="-6934.0112" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(converter) == &quot;function&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-6918.6111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter(argument)</text>
<text text-anchor="middle" x="2245.2914" y="-6903.2111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif type(converter[index]) == &quot;function&quot; then</text>
<text text-anchor="middle" x="2245.2914" y="-6887.8111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter[index](argument)</text>
<text text-anchor="middle" x="2245.2914" y="-6872.411" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-6857.011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok = converter[argument]</text>
<text text-anchor="middle" x="2245.2914" y="-6841.611" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6810.211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ok == nil then</text>
<text text-anchor="middle" x="2245.2914" y="-6794.8109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(err and &quot;%s&quot; or &quot;malformed argument &#39;%s&#39;&quot;, err or argument)</text>
<text text-anchor="middle" x="2245.2914" y="-6779.4109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6748.0109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ok</text>
<text text-anchor="middle" x="2245.2914" y="-6732.6108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6701.2108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="2245.2914" y="-6685.8108" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-6654.4107" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:default(mode)</text>
<text text-anchor="middle" x="2245.2914" y="-6639.0107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.element._defmode:find(mode) and self.element._default</text>
<text text-anchor="middle" x="2245.2914" y="-6623.6107" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-6592.2106" font-family="Inconsolata" font-size="14.00" fill="#000000">local function bound(noun, min, max, is_max)</text>
<text text-anchor="middle" x="2245.2914" y="-6576.8106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res = &quot;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-6545.4106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if min ~= max then</text>
<text text-anchor="middle" x="2245.2914" y="-6530.0105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;res = &quot;at &quot; .. (is_max and &quot;most&quot; or &quot;least&quot;) .. &quot; &quot;</text>
<text text-anchor="middle" x="2245.2914" y="-6514.6105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6483.2105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local number = is_max and max or min</text>
<text text-anchor="middle" x="2245.2914" y="-6467.8105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return res .. tostring(number) .. &quot; &quot; .. noun .. &#160;(number == 1 and &quot;&quot; or &quot;s&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-6452.4104" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-6421.0104" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:set_name(alias)</text>
<text text-anchor="middle" x="2245.2914" y="-6405.6104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.name = (&quot;%s &#39;%s&#39;&quot;):format(alias and &quot;option&quot; or &quot;argument&quot;, alias or self.element._name)</text>
<text text-anchor="middle" x="2245.2914" y="-6390.2103" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-6358.8103" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:invoke()</text>
<text text-anchor="middle" x="2245.2914" y="-6343.4103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.open = true</text>
<text text-anchor="middle" x="2245.2914" y="-6328.0102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.overwrite = false</text>
<text text-anchor="middle" x="2245.2914" y="-6296.6102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.invocations &gt;= self.element._maxcount then</text>
<text text-anchor="middle" x="2245.2914" y="-6281.2102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._overwrite then</text>
<text text-anchor="middle" x="2245.2914" y="-6265.8101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.overwrite = true</text>
<text text-anchor="middle" x="2245.2914" y="-6250.4101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-6235.0101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local num_times_repr = bound(&quot;time&quot;, self.element._mincount, self.element._maxcount, true)</text>
<text text-anchor="middle" x="2245.2914" y="-6219.61" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, self.name, num_times_repr)</text>
<text text-anchor="middle" x="2245.2914" y="-6204.21" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6188.81" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-6173.41" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.invocations = self.invocations + 1</text>
<text text-anchor="middle" x="2245.2914" y="-6158.0099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6126.6099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.args = {}</text>
<text text-anchor="middle" x="2245.2914" y="-6095.2099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-6079.8098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="2245.2914" y="-6064.4098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-6033.0098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="2245.2914" y="-6017.6097" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-5986.2097" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:check_choices(argument)</text>
<text text-anchor="middle" x="2245.2914" y="-5970.8097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element._choices then</text>
<text text-anchor="middle" x="2245.2914" y="-5955.4096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, choice in ipairs(self.element._choices) do</text>
<text text-anchor="middle" x="2245.2914" y="-5940.0096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if argument == choice then</text>
<text text-anchor="middle" x="2245.2914" y="-5924.6096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="2245.2914" y="-5909.2095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5893.8095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5878.4095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local choices_list = &quot;&#39;&quot; .. table.concat(self.element._choices, &quot;&#39;, &#39;&quot;) .. &quot;&#39;&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-5863.0095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local is_option = getmetatable(self.element) == Option</text>
<text text-anchor="middle" x="2245.2914" y="-5847.6094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;%s%s must be one of %s&quot;, is_option and &quot;argument for &quot; or &quot;&quot;, self.name, choices_list)</text>
<text text-anchor="middle" x="2245.2914" y="-5832.2094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5816.8094" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-5785.4093" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:pass(argument)</text>
<text text-anchor="middle" x="2245.2914" y="-5770.0093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:check_choices(argument)</text>
<text text-anchor="middle" x="2245.2914" y="-5754.6093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument = self:convert(argument, #self.args + 1)</text>
<text text-anchor="middle" x="2245.2914" y="-5739.2092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self.args, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-5707.8092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self.args &gt;= self.element._maxargs then</text>
<text text-anchor="middle" x="2245.2914" y="-5692.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="2245.2914" y="-5677.0091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5645.6091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="2245.2914" y="-5630.2091" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-5598.8091" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:complete_invocation()</text>
<text text-anchor="middle" x="2245.2914" y="-5583.409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while #self.args &lt; self.element._minargs do</text>
<text text-anchor="middle" x="2245.2914" y="-5568.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:pass(self.element._default)</text>
<text text-anchor="middle" x="2245.2914" y="-5552.609" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5537.2089" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-5505.8089" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:close()</text>
<text text-anchor="middle" x="2245.2914" y="-5490.4089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.open then</text>
<text text-anchor="middle" x="2245.2914" y="-5475.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.open = false</text>
<text text-anchor="middle" x="2245.2914" y="-5443.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.args &lt; self.element._minargs then</text>
<text text-anchor="middle" x="2245.2914" y="-5428.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-5412.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:complete_invocation()</text>
<text text-anchor="middle" x="2245.2914" y="-5397.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-5382.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #self.args == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-5366.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(self.element) == Argument then</text>
<text text-anchor="middle" x="2245.2914" y="-5351.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, self.name)</text>
<text text-anchor="middle" x="2245.2914" y="-5335.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-5320.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires an argument&quot;, self.name)</text>
<text text-anchor="middle" x="2245.2914" y="-5305.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5289.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5258.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires %s&quot;, self.name, bound(&quot;argument&quot;, self.element._minargs, self.element._maxargs))</text>
<text text-anchor="middle" x="2245.2914" y="-5242.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5227.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5196.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local args</text>
<text text-anchor="middle" x="2245.2914" y="-5164.6083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._maxargs == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-5149.2083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="2245.2914" y="-5133.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-5118.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.element._minargs == 0 and self.element._mincount ~= self.element._maxcount then</text>
<text text-anchor="middle" x="2245.2914" y="-5103.0082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="2245.2914" y="-5087.6082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-5072.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="2245.2914" y="-5056.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-5041.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-5026.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="2245.2914" y="-5010.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4979.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.action(self.result, self.target, args, self.overwrite)</text>
<text text-anchor="middle" x="2245.2914" y="-4963.808" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4948.4079" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-4917.0079" font-family="Inconsolata" font-size="14.00" fill="#000000">local ParseState = class({</text>
<text text-anchor="middle" x="2245.2914" y="-4901.6079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result = {},</text>
<text text-anchor="middle" x="2245.2914" y="-4886.2078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;options = {},</text>
<text text-anchor="middle" x="2245.2914" y="-4870.8078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;arguments = {},</text>
<text text-anchor="middle" x="2245.2914" y="-4855.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument_i = 1,</text>
<text text-anchor="middle" x="2245.2914" y="-4840.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;element_to_mutexes = {},</text>
<text text-anchor="middle" x="2245.2914" y="-4824.6077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;mutex_to_element_state = {},</text>
<text text-anchor="middle" x="2245.2914" y="-4809.2077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command_actions = {}</text>
<text text-anchor="middle" x="2245.2914" y="-4793.8076" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="2245.2914" y="-4762.4076" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:__call(parser, error_handler)</text>
<text text-anchor="middle" x="2245.2914" y="-4747.0076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="2245.2914" y="-4731.6076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler = error_handler</text>
<text text-anchor="middle" x="2245.2914" y="-4716.2075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.charset = parser:_update_charset()</text>
<text text-anchor="middle" x="2245.2914" y="-4700.8075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:switch(parser)</text>
<text text-anchor="middle" x="2245.2914" y="-4685.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="2245.2914" y="-4670.0074" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-4638.6074" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:error(fmt, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-4623.2074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler(self.parser, fmt:format(...))</text>
<text text-anchor="middle" x="2245.2914" y="-4607.8073" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-4576.4073" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:switch(parser)</text>
<text text-anchor="middle" x="2245.2914" y="-4561.0073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="2245.2914" y="-4529.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parser._action then</text>
<text text-anchor="middle" x="2245.2914" y="-4514.2072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.command_actions, {action = parser._action, name = parser._name})</text>
<text text-anchor="middle" x="2245.2914" y="-4498.8072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4467.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(parser._options) do</text>
<text text-anchor="middle" x="2245.2914" y="-4452.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option = ElementState(self, option)</text>
<text text-anchor="middle" x="2245.2914" y="-4436.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.options, option)</text>
<text text-anchor="middle" x="2245.2914" y="-4405.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option.element._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-4389.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.options[alias] = option</text>
<text text-anchor="middle" x="2245.2914" y="-4374.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4359.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4327.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(parser._mutexes) do</text>
<text text-anchor="middle" x="2245.2914" y="-4312.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="2245.2914" y="-4296.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not self.element_to_mutexes[element] then</text>
<text text-anchor="middle" x="2245.2914" y="-4281.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.element_to_mutexes[element] = {}</text>
<text text-anchor="middle" x="2245.2914" y="-4266.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4234.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(self.element_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="2245.2914" y="-4219.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4203.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4172.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(parser._arguments) do</text>
<text text-anchor="middle" x="2245.2914" y="-4157.0066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ElementState(self, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-4141.6066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.arguments, argument)</text>
<text text-anchor="middle" x="2245.2914" y="-4126.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:set_name()</text>
<text text-anchor="middle" x="2245.2914" y="-4110.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:invoke()</text>
<text text-anchor="middle" x="2245.2914" y="-4095.4065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-4064.0065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.handle_options = parser._handle_options</text>
<text text-anchor="middle" x="2245.2914" y="-4048.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="2245.2914" y="-4033.2064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.commands = parser._commands</text>
<text text-anchor="middle" x="2245.2914" y="-4001.8064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self.commands) do</text>
<text text-anchor="middle" x="2245.2914" y="-3986.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(command._aliases) do</text>
<text text-anchor="middle" x="2245.2914" y="-3971.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.commands[alias] = command</text>
<text text-anchor="middle" x="2245.2914" y="-3955.6063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3940.2063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3924.8062" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-3893.4062" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_option(name)</text>
<text text-anchor="middle" x="2245.2914" y="-3878.0062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = self.options[name]</text>
<text text-anchor="middle" x="2245.2914" y="-3846.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not option then</text>
<text text-anchor="middle" x="2245.2914" y="-3831.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown option &#39;%s&#39;%s&quot;, name, get_tip(self.options, name))</text>
<text text-anchor="middle" x="2245.2914" y="-3815.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-3800.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return option</text>
<text text-anchor="middle" x="2245.2914" y="-3785.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3769.606" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-3738.206" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_command(name)</text>
<text text-anchor="middle" x="2245.2914" y="-3722.8059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = self.commands[name]</text>
<text text-anchor="middle" x="2245.2914" y="-3691.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not command then</text>
<text text-anchor="middle" x="2245.2914" y="-3676.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-3660.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown command &#39;%s&#39;%s&quot;, name, get_tip(self.commands, name))</text>
<text text-anchor="middle" x="2245.2914" y="-3645.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-3629.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;too many arguments&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-3614.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3599.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-3583.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return command</text>
<text text-anchor="middle" x="2245.2914" y="-3568.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3552.8056" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-3521.4056" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:check_mutexes(element_state)</text>
<text text-anchor="middle" x="2245.2914" y="-3506.0056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element_to_mutexes[element_state.element] then</text>
<text text-anchor="middle" x="2245.2914" y="-3490.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mutex in ipairs(self.element_to_mutexes[element_state.element]) do</text>
<text text-anchor="middle" x="2245.2914" y="-3475.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local used_element_state = self.mutex_to_element_state[mutex]</text>
<text text-anchor="middle" x="2245.2914" y="-3443.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if used_element_state and used_element_state ~= element_state then</text>
<text text-anchor="middle" x="2245.2914" y="-3428.4054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s can not be used together with %s&quot;, element_state.name, used_element_state.name)</text>
<text text-anchor="middle" x="2245.2914" y="-3413.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-3397.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.mutex_to_element_state[mutex] = element_state</text>
<text text-anchor="middle" x="2245.2914" y="-3382.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3366.8053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3351.4053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3336.0052" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-3304.6052" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:invoke(option, name)</text>
<text text-anchor="middle" x="2245.2914" y="-3289.2052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="2245.2914" y="-3273.8051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option:set_name(name)</text>
<text text-anchor="middle" x="2245.2914" y="-3258.4051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:check_mutexes(option, name)</text>
<text text-anchor="middle" x="2245.2914" y="-3227.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if option:invoke() then</text>
<text text-anchor="middle" x="2245.2914" y="-3211.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = option</text>
<text text-anchor="middle" x="2245.2914" y="-3196.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3180.805" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-3149.405" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:pass(arg)</text>
<text text-anchor="middle" x="2245.2914" y="-3134.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="2245.2914" y="-3118.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.option:pass(arg) then</text>
<text text-anchor="middle" x="2245.2914" y="-3103.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="2245.2914" y="-3087.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-3072.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif self.argument then</text>
<text text-anchor="middle" x="2245.2914" y="-3057.0048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:check_mutexes(self.argument)</text>
<text text-anchor="middle" x="2245.2914" y="-3025.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.argument:pass(arg) then</text>
<text text-anchor="middle" x="2245.2914" y="-3010.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument_i = self.argument_i + 1</text>
<text text-anchor="middle" x="2245.2914" y="-2994.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="2245.2914" y="-2979.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2964.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-2948.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local command = self:get_command(arg)</text>
<text text-anchor="middle" x="2245.2914" y="-2933.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.result[command._target or command._name] = true</text>
<text text-anchor="middle" x="2245.2914" y="-2901.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.parser._command_target then</text>
<text text-anchor="middle" x="2245.2914" y="-2886.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.result[self.parser._command_target] = command._name</text>
<text text-anchor="middle" x="2245.2914" y="-2871.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2839.6044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:switch(command)</text>
<text text-anchor="middle" x="2245.2914" y="-2824.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2808.8044" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-2777.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2762.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="2245.2914" y="-2746.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2731.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="2245.2914" y="-2715.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2700.4042" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-2669.0042" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:finalize()</text>
<text text-anchor="middle" x="2245.2914" y="-2653.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2622.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = self.argument_i, #self.arguments do</text>
<text text-anchor="middle" x="2245.2914" y="-2606.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argument = self.arguments[i]</text>
<text text-anchor="middle" x="2245.2914" y="-2591.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #argument.args == 0 and argument:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-2576.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:complete_invocation()</text>
<text text-anchor="middle" x="2245.2914" y="-2560.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-2545.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2529.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2514.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2483.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.parser._require_command and #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-2467.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;a command is required&quot;)</text>
<text text-anchor="middle" x="2245.2914" y="-2452.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2420.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self.options) do</text>
<text text-anchor="middle" x="2245.2914" y="-2405.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option.name = option.name or (&quot;option &#39;%s&#39;&quot;):format(option.element._name)</text>
<text text-anchor="middle" x="2245.2914" y="-2374.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-2358.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-2343.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="2245.2914" y="-2327.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:complete_invocation()</text>
<text text-anchor="middle" x="2245.2914" y="-2312.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2297.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2281.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2250.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mincount = option.element._mincount</text>
<text text-anchor="middle" x="2245.2914" y="-2218.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations &lt; mincount then</text>
<text text-anchor="middle" x="2245.2914" y="-2203.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="2245.2914" y="-2188.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while option.invocations &lt; mincount do</text>
<text text-anchor="middle" x="2245.2914" y="-2172.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="2245.2914" y="-2157.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="2245.2914" y="-2141.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2126.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif option.invocations == 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-2111.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, option.name)</text>
<text text-anchor="middle" x="2245.2914" y="-2095.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-2080.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, option.name, bound(&quot;time&quot;, mincount, option.element._maxcount))</text>
<text text-anchor="middle" x="2245.2914" y="-2064.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2049.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2034.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-2002.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = #self.command_actions, 1, &#45;1 do</text>
<text text-anchor="middle" x="2245.2914" y="-1987.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.command_actions[i].action(self.result, self.command_actions[i].name)</text>
<text text-anchor="middle" x="2245.2914" y="-1971.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1956.4029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-1925.0029" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:parse(args)</text>
<text text-anchor="middle" x="2245.2914" y="-1909.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, arg in ipairs(args) do</text>
<text text-anchor="middle" x="2245.2914" y="-1894.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local plain = true</text>
<text text-anchor="middle" x="2245.2914" y="-1862.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.handle_options then</text>
<text text-anchor="middle" x="2245.2914" y="-1847.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local first = arg:sub(1, 1)</text>
<text text-anchor="middle" x="2245.2914" y="-1816.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.charset[first] then</text>
<text text-anchor="middle" x="2245.2914" y="-1800.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg &gt; 1 then</text>
<text text-anchor="middle" x="2245.2914" y="-1785.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;plain = false</text>
<text text-anchor="middle" x="2245.2914" y="-1753.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg:sub(2, 2) == first then</text>
<text text-anchor="middle" x="2245.2914" y="-1738.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg == 2 then</text>
<text text-anchor="middle" x="2245.2914" y="-1723.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.options[arg] then</text>
<text text-anchor="middle" x="2245.2914" y="-1707.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="2245.2914" y="-1692.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="2245.2914" y="-1676.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-1661.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="2245.2914" y="-1646.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1614.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.handle_options = false</text>
<text text-anchor="middle" x="2245.2914" y="-1599.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-1583.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local equals = arg:find &quot;=&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-1568.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if equals then</text>
<text text-anchor="middle" x="2245.2914" y="-1553.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = arg:sub(1, equals &#45; 1)</text>
<text text-anchor="middle" x="2245.2914" y="-1537.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="2245.2914" y="-1506.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-1490.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;option &#39;%s&#39; does not take arguments&quot;, name)</text>
<text text-anchor="middle" x="2245.2914" y="-1475.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1444.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="2245.2914" y="-1428.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(equals + 1))</text>
<text text-anchor="middle" x="2245.2914" y="-1413.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-1397.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="2245.2914" y="-1382.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="2245.2914" y="-1367.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1351.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1336.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-1320.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 2, #arg do</text>
<text text-anchor="middle" x="2245.2914" y="-1305.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = first .. arg:sub(i, i)</text>
<text text-anchor="middle" x="2245.2914" y="-1290.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="2245.2914" y="-1274.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="2245.2914" y="-1243.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i ~= #arg and option.element._maxargs &gt; 0 then</text>
<text text-anchor="middle" x="2245.2914" y="-1227.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(i + 1))</text>
<text text-anchor="middle" x="2245.2914" y="-1212.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="2245.2914" y="-1197.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1181.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1166.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1150.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1135.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1120.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1088.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if plain then</text>
<text text-anchor="middle" x="2245.2914" y="-1073.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg)</text>
<text text-anchor="middle" x="2245.2914" y="-1057.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1042.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-1011.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:finalize()</text>
<text text-anchor="middle" x="2245.2914" y="-995.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.result</text>
<text text-anchor="middle" x="2245.2914" y="-980.2013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-948.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:error(msg)</text>
<text text-anchor="middle" x="2245.2914" y="-933.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.stderr:write((&quot;%s\n\nError: %s\n&quot;):format(self:get_usage(), msg))</text>
<text text-anchor="middle" x="2245.2914" y="-918.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;os.exit(1)</text>
<text text-anchor="middle" x="2245.2914" y="-902.6012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-871.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Compatibility with strict.lua and other checkers:</text>
<text text-anchor="middle" x="2245.2914" y="-855.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">local default_cmdline = rawget(_G, &quot;arg&quot;) or {}</text>
<text text-anchor="middle" x="2245.2914" y="-824.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_parse(args, error_handler)</text>
<text text-anchor="middle" x="2245.2914" y="-809.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ParseState(self, error_handler):parse(args or default_cmdline)</text>
<text text-anchor="middle" x="2245.2914" y="-793.601" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-762.201" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:parse(args)</text>
<text text-anchor="middle" x="2245.2914" y="-746.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:_parse(args, self.error)</text>
<text text-anchor="middle" x="2245.2914" y="-731.4009" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-700.0009" font-family="Inconsolata" font-size="14.00" fill="#000000">local function xpcall_error_handler(err)</text>
<text text-anchor="middle" x="2245.2914" y="-684.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tostring(err) .. &quot;\noriginal &quot; .. debug.traceback(&quot;&quot;, 2):sub(2)</text>
<text text-anchor="middle" x="2245.2914" y="-669.2008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-637.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:pparse(args)</text>
<text text-anchor="middle" x="2245.2914" y="-622.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parse_error</text>
<text text-anchor="middle" x="2245.2914" y="-591.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ok, result = xpcall(function()</text>
<text text-anchor="middle" x="2245.2914" y="-575.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self:_parse(args, function(_, err)</text>
<text text-anchor="middle" x="2245.2914" y="-560.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;parse_error = err</text>
<text text-anchor="middle" x="2245.2914" y="-544.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(err, 0)</text>
<text text-anchor="middle" x="2245.2914" y="-529.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="2245.2914" y="-514.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end, xpcall_error_handler)</text>
<text text-anchor="middle" x="2245.2914" y="-482.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ok then</text>
<text text-anchor="middle" x="2245.2914" y="-467.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true, result</text>
<text text-anchor="middle" x="2245.2914" y="-451.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif not parse_error then</text>
<text text-anchor="middle" x="2245.2914" y="-436.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(result, 0)</text>
<text text-anchor="middle" x="2245.2914" y="-421.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2245.2914" y="-405.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return false, parse_error</text>
<text text-anchor="middle" x="2245.2914" y="-390.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2245.2914" y="-374.8003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2245.2914" y="-343.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">local argparse = {}</text>
<text text-anchor="middle" x="2245.2914" y="-312.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse.version = &quot;0.7.0&quot;</text>
<text text-anchor="middle" x="2245.2914" y="-280.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">setmetatable(argparse, {__call = function(_, ...)</text>
<text text-anchor="middle" x="2245.2914" y="-265.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return Parser(default_cmdline[0]):add_help(true)(...)</text>
<text text-anchor="middle" x="2245.2914" y="-249.8002" font-family="Inconsolata" font-size="14.00" fill="#000000">end})</text>
<text text-anchor="middle" x="2245.2914" y="-218.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">return argparse</text>
<text text-anchor="middle" x="2245.2914" y="-187.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">end ) ()</text>
</g>
<!-- codeblock_23&#45;&gt;leaf_40 -->
<g id="edge40" class="edge">
<title>codeblock_23&#45;&gt;leaf_40</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1946.6291,-32512.152C1946.7517,-32505.5104 1946.9072,-32497.0854 1947.0948,-32486.9166"/>
<polygon fill="#000000" stroke="#000000" points="1950.5994,-32486.6971 1947.2846,-32476.6342 1943.6005,-32486.5679 1950.5994,-32486.6971"/>
</g>
<!-- leaf_31 -->
<g id="node32" class="node">
<title>leaf_31</title>
<polygon fill="none" stroke="#c0c0c0" points="1239.2914,-142.7004 677.2914,-142.7004 677.2914,-72.0997 1239.2914,-72.0997 1239.2914,-142.7004"/>
<text text-anchor="middle" x="958.2914" y="-95.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">This is lightly modified by wrapping it in an anonymous function and assigning</text>
<text text-anchor="middle" x="958.2914" y="-80.2" font-family="Inconsolata" font-size="14.00" fill="#000000">it to</text>
</g>
<!-- raw_25&#45;&gt;leaf_31 -->
<g id="edge31" class="edge">
<title>raw_25&#45;&gt;leaf_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1322.3286,-16309.4843C1323.5578,-15706.3157 1354.3494,-264.363 1285.2914,-178.8001 1274.5887,-165.5394 1251.6254,-154.6071 1222.5813,-145.6324"/>
<polygon fill="#000000" stroke="#000000" points="1223.5275,-142.2624 1212.9456,-142.7868 1221.5449,-148.9758 1223.5275,-142.2624"/>
</g>
<!-- leaf_32 -->
<g id="node33" class="node">
<title>leaf_32</title>
<polygon fill="none" stroke="#c0c0c0" points="1311.2914,-125.4 1257.2914,-125.4 1257.2914,-89.4 1311.2914,-89.4 1311.2914,-125.4"/>
<text text-anchor="middle" x="1284.2914" y="-103.9" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_26&#45;&gt;leaf_32 -->
<g id="edge32" class="edge">
<title>prespace_26&#45;&gt;leaf_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1413.4324,-16309.4042C1418.0365,-15711.2072 1532.7217,-582.4325 1358.2914,-178.8001 1349.0625,-157.4444 1337.0306,-158.9566 1320.2914,-142.8001 1316.8462,-139.4748 1313.2322,-135.9569 1309.6783,-132.4799"/>
<polygon fill="#000000" stroke="#000000" points="1312.1297,-129.9817 1302.541,-125.4751 1307.2265,-134.9776 1312.1297,-129.9817"/>
</g>
<!-- leaf_33 -->
<g id="node34" class="node">
<title>leaf_33</title>
<polygon fill="none" stroke="#c0c0c0" points="1457.2914,-125.4 1329.2914,-125.4 1329.2914,-89.4 1457.2914,-89.4 1457.2914,-125.4"/>
<text text-anchor="middle" x="1393.2914" y="-103.9" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_27&#45;&gt;leaf_33 -->
<g id="edge33" class="edge">
<title>literal_27&#45;&gt;leaf_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1509.3445,-16309.6176C1511.1001,-15710.8644 1555.1946,-380.8098 1468.2914,-178.8001 1460.259,-160.1284 1444.6925,-144.0225 1429.8135,-131.858"/>
<polygon fill="#000000" stroke="#000000" points="1431.7101,-128.8988 1421.6704,-125.5142 1427.4081,-134.4209 1431.7101,-128.8988"/>
</g>
<!-- leaf_34 -->
<g id="node35" class="node">
<title>leaf_34</title>
<polygon fill="none" stroke="#c0c0c0" points="1694.7914,-125.4 1475.7914,-125.4 1475.7914,-89.4 1694.7914,-89.4 1694.7914,-125.4"/>
<text text-anchor="middle" x="1585.2914" y="-103.9" font-family="Inconsolata" font-size="14.00" fill="#000000">, but is otherwise exactly as</text>
</g>
<!-- raw_28&#45;&gt;leaf_34 -->
<g id="edge34" class="edge">
<title>raw_28&#45;&gt;leaf_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1585.2914,-16309.3058C1585.2914,-15715.3177 1585.2914,-871.617 1585.2914,-135.7064"/>
<polygon fill="#000000" stroke="#000000" points="1588.7915,-135.457 1585.2914,-125.457 1581.7915,-135.4571 1588.7915,-135.457"/>
</g>
<!-- anchortext_35 -->
<g id="node36" class="node">
<title>anchortext_35</title>
<ellipse fill="none" stroke="#000000" cx="1764.2914" cy="-107.4" rx="51.3018" ry="18"/>
<text text-anchor="middle" x="1764.2914" y="-103.2" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">anchortext</text>
</g>
<!-- link_29&#45;&gt;anchortext_35 -->
<g id="edge35" class="edge">
<title>link_29&#45;&gt;anchortext_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1710.0552,-16309.3046C1702.7075,-15736.7022 1527.9388,-1922.2628 1746.2914,-178.8001 1748.1215,-164.187 1751.9497,-148.2668 1755.607,-135.1752"/>
<polygon fill="#000000" stroke="#000000" points="1759.0292,-135.941 1758.462,-125.3614 1752.3079,-133.9856 1759.0292,-135.941"/>
</g>
<!-- url_36 -->
<g id="node37" class="node">
<title>url_36</title>
<ellipse fill="none" stroke="#000000" cx="1860.2914" cy="-107.4" rx="27" ry="18"/>
<text text-anchor="middle" x="1860.2914" y="-103.2" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">url</text>
</g>
<!-- link_29&#45;&gt;url_36 -->
<g id="edge36" class="edge">
<title>link_29&#45;&gt;url_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1710.0546,-16309.3649C1702.312,-15709.8817 1508.8961,-548.918 1746.2914,-178.8001 1766.9049,-146.6619 1792.8811,-164.5065 1824.2914,-142.8001 1829.4654,-139.2245 1834.567,-134.8725 1839.2304,-130.46"/>
<polygon fill="#000000" stroke="#000000" points="1841.9954,-132.6454 1846.6003,-123.1036 1837.0501,-127.6911 1841.9954,-132.6454"/>
</g>
<!-- leaf_39 -->
<g id="node40" class="node">
<title>leaf_39</title>
<polygon fill="none" stroke="#c0c0c0" points="1959.2914,-125.4 1905.2914,-125.4 1905.2914,-89.4 1959.2914,-89.4 1959.2914,-125.4"/>
<text text-anchor="middle" x="1932.2914" y="-103.9" font-family="Inconsolata" font-size="14.00" fill="#000000">.</text>
</g>
<!-- raw_30&#45;&gt;leaf_39 -->
<g id="edge39" class="edge">
<title>raw_30&#45;&gt;leaf_39</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1782.1962,-16309.5983C1779.0461,-15710.2041 1699.5642,-363.9051 1818.2914,-178.8001 1838.9049,-146.6619 1864.8811,-164.5065 1896.2914,-142.8001 1900.5978,-139.8241 1904.8541,-136.3102 1908.8493,-132.6712"/>
<polygon fill="#000000" stroke="#000000" points="1911.385,-135.0883 1916.1549,-125.6279 1906.5265,-130.0489 1911.385,-135.0883"/>
</g>
<!-- leaf_37 -->
<g id="node38" class="node">
<title>leaf_37</title>
<polygon fill="none" stroke="#c0c0c0" points="1691.2914,-36 1605.2914,-36 1605.2914,0 1691.2914,0 1691.2914,-36"/>
<text text-anchor="middle" x="1648.2914" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">found here</text>
</g>
<!-- anchortext_35&#45;&gt;leaf_37 -->
<g id="edge37" class="edge">
<title>anchortext_35&#45;&gt;leaf_37</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1743.0152,-91.0027C1725.3094,-77.357 1699.8471,-57.7334 1679.7797,-42.2677"/>
<polygon fill="#000000" stroke="#000000" points="1681.8841,-39.4707 1671.8269,-36.1385 1677.611,-45.0152 1681.8841,-39.4707"/>
</g>
<!-- leaf_38 -->
<g id="node39" class="node">
<title>leaf_38</title>
<polygon fill="none" stroke="#c0c0c0" points="2243.2914,-36 1709.2914,-36 1709.2914,0 2243.2914,0 2243.2914,-36"/>
<text text-anchor="middle" x="1976.2914" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">https://raw.githubusercontent.com/mpeterv/argparse/master/src/argparse.lua</text>
</g>
<!-- url_36&#45;&gt;leaf_38 -->
<g id="edge38" class="edge">
<title>url_36&#45;&gt;leaf_38</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1874.7794,-91.9462C1881.1302,-85.4972 1888.8267,-78.103 1896.2914,-72 1909.3808,-61.2983 1924.5796,-50.6439 1938.1917,-41.662"/>
<polygon fill="#000000" stroke="#000000" points="1940.3953,-44.404 1946.8695,-36.0174 1936.5784,-38.5361 1940.3953,-44.404"/>
</g>
</g>
</svg>
