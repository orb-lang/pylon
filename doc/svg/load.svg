<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="8401pt" height="25445pt"
 viewBox="0.00 0.00 8400.50 25444.64" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 25440.6405)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-25440.6405 8396.5,-25440.6405 8396.5,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1097.5" cy="-25418.6405" rx="51.795" ry="18"/>
<text text-anchor="middle" x="1097.5" y="-25414.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 1757</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1097.5" cy="-25346.6405" rx="70.655" ry="18"/>
<text text-anchor="middle" x="1097.5" y="-25342.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;1686</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1097.5,-25400.4719C1097.5,-25392.7715 1097.5,-25383.6149 1097.5,-25375.0572"/>
<polygon fill="#000000" stroke="#000000" points="1101.0001,-25375.0538 1097.5,-25365.0538 1094.0001,-25375.0538 1101.0001,-25375.0538"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="137.5" cy="-25274.6405" rx="39.232" ry="18"/>
<text text-anchor="middle" x="137.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : load</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1027.748,-25343.6899C885.3565,-25337.3117 551.0639,-25320.5227 271.5,-25292.6405 242.6573,-25289.7639 210.4612,-25285.4743 184.858,-25281.8041"/>
<polygon fill="#000000" stroke="#000000" points="185.0755,-25278.2991 174.6767,-25280.3277 184.0709,-25285.2267 185.0755,-25278.2991"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="312.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="312.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1030.91,-25340.5329C873.9145,-25326.1333 484.13,-25290.3824 354.8901,-25278.5286"/>
<polygon fill="#000000" stroke="#000000" points="354.897,-25275.0146 344.6191,-25277.5865 354.2576,-25281.9853 354.897,-25275.0146"/>
</g>
<!-- prose_4 -->
<g id="node5" class="node">
<title>prose_4</title>
<ellipse fill="none" stroke="#000000" cx="782.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="782.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;prose_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1044.3059,-25334.7873C995.8483,-25323.9501 922.3238,-25307.4084 858.5,-25292.6405 846.7499,-25289.9217 833.9904,-25286.9193 822.3412,-25284.1585"/>
<polygon fill="#000000" stroke="#000000" points="822.9814,-25280.7133 812.4432,-25281.8078 821.3638,-25287.5238 822.9814,-25280.7133"/>
</g>
<!-- prose_5 -->
<g id="node6" class="node">
<title>prose_5</title>
<ellipse fill="none" stroke="#000000" cx="899.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="899.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;prose_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1056.954,-25331.8965C1021.5306,-25319.0153 970.5516,-25300.4775 936.2882,-25288.0181"/>
<polygon fill="#000000" stroke="#000000" points="937.2552,-25284.6456 926.6612,-25284.5173 934.863,-25291.2241 937.2552,-25284.6456"/>
</g>
<!-- section_6 -->
<g id="node7" class="node">
<title>section_6</title>
<ellipse fill="none" stroke="#000000" cx="1097.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1097.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 12&#45;21</text>
</g>
<!-- section_1&#45;&gt;section_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;section_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1097.5,-25328.4719C1097.5,-25320.7715 1097.5,-25311.6149 1097.5,-25303.0572"/>
<polygon fill="#000000" stroke="#000000" points="1101.0001,-25303.0538 1097.5,-25293.0538 1094.0001,-25303.0538 1101.0001,-25303.0538"/>
</g>
<!-- section_7 -->
<g id="node8" class="node">
<title>section_7</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 22&#45;33</text>
</g>
<!-- section_1&#45;&gt;section_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;section_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1163.2986,-25340.124C1299.4402,-25326.641 1611.1045,-25295.7746 1752.4445,-25281.7767"/>
<polygon fill="#000000" stroke="#000000" points="1753.1239,-25285.2266 1762.7302,-25280.758 1752.4339,-25278.2607 1753.1239,-25285.2266"/>
</g>
<!-- section_8 -->
<g id="node9" class="node">
<title>section_8</title>
<ellipse fill="none" stroke="#000000" cx="2997.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="2997.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 34&#45;39</text>
</g>
<!-- section_1&#45;&gt;section_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;section_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1167.3753,-25343.9926C1463.7785,-25332.7605 2615.9531,-25289.0992 2922.3266,-25277.4892"/>
<polygon fill="#000000" stroke="#000000" points="2922.5759,-25280.9824 2932.4361,-25277.1061 2922.3107,-25273.9874 2922.5759,-25280.9824"/>
</g>
<!-- section_9 -->
<g id="node10" class="node">
<title>section_9</title>
<ellipse fill="none" stroke="#000000" cx="5601.5" cy="-25274.6405" rx="85.1652" ry="18"/>
<text text-anchor="middle" x="5601.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1588&#45;1675</text>
</g>
<!-- section_1&#45;&gt;section_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;section_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1168.2471,-25345.5096C1687.5502,-25337.2081 4906.8054,-25285.7458 5505.6641,-25276.1726"/>
<polygon fill="#000000" stroke="#000000" points="5506.036,-25279.6672 5515.9788,-25276.0077 5505.9241,-25272.668 5506.036,-25279.6672"/>
</g>
<!-- section_10 -->
<g id="node11" class="node">
<title>section_10</title>
<ellipse fill="none" stroke="#000000" cx="7372.5" cy="-25274.6405" rx="85.1652" ry="18"/>
<text text-anchor="middle" x="7372.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1687&#45;1757</text>
</g>
<!-- section_1&#45;&gt;section_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;section_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1168.2407,-25345.8289C1805.0068,-25338.5225 6542.7628,-25284.161 7277.015,-25275.7361"/>
<polygon fill="#000000" stroke="#000000" points="7277.317,-25279.233 7287.2762,-25275.6184 7277.2367,-25272.2335 7277.317,-25279.233"/>
</g>
<!-- leaf_11 -->
<g id="node12" class="node">
<title>leaf_11</title>
<polygon fill="none" stroke="#c0c0c0" points="80.5,-25220.6405 22.5,-25220.6405 22.5,-25184.6405 80.5,-25184.6405 80.5,-25220.6405"/>
<text text-anchor="middle" x="51.5" y="-25199.1406" font-family="Inconsolata" font-size="14.00" fill="#000000">* load</text>
</g>
<!-- header_2&#45;&gt;leaf_11 -->
<g id="edge11" class="edge">
<title>header_2&#45;&gt;leaf_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M118.4138,-25258.6614C107.4537,-25249.4855 93.4543,-25237.7651 81.0961,-25227.4187"/>
<polygon fill="#000000" stroke="#000000" points="83.1749,-25224.5944 73.2605,-25220.8586 78.6813,-25229.9617 83.1749,-25224.5944"/>
</g>
<!-- raw_12 -->
<g id="node13" class="node">
<title>raw_12</title>
<ellipse fill="none" stroke="#000000" cx="125.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="125.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_12 -->
<g id="edge12" class="edge">
<title>prose_3&#45;&gt;raw_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M284.2815,-25265.6777C253.6521,-25255.6891 203.4919,-25238.5702 161.5,-25220.6405 159.7167,-25219.8791 157.8969,-25219.0712 156.0697,-25218.2359"/>
<polygon fill="#000000" stroke="#000000" points="157.5375,-25215.0584 147.004,-25213.9191 154.528,-25221.3784 157.5375,-25215.0584"/>
</g>
<!-- prespace_13 -->
<g id="node14" class="node">
<title>prespace_13</title>
<ellipse fill="none" stroke="#000000" cx="216.5" cy="-25202.6405" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="216.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_3&#45;&gt;prespace_13 -->
<g id="edge13" class="edge">
<title>prose_3&#45;&gt;prespace_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M293.073,-25260.0703C279.5746,-25249.9465 261.3362,-25236.2677 246.0453,-25224.7995"/>
<polygon fill="#000000" stroke="#000000" points="248.0024,-25221.8924 237.9024,-25218.6923 243.8024,-25227.4924 248.0024,-25221.8924"/>
</g>
<!-- literal_14 -->
<g id="node15" class="node">
<title>literal_14</title>
<ellipse fill="none" stroke="#000000" cx="312.5" cy="-25202.6405" rx="31.481" ry="18"/>
<text text-anchor="middle" x="312.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_3&#45;&gt;literal_14 -->
<g id="edge14" class="edge">
<title>prose_3&#45;&gt;literal_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M312.5,-25256.4719C312.5,-25248.7715 312.5,-25239.6149 312.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="316.0001,-25231.0538 312.5,-25221.0538 309.0001,-25231.0538 316.0001,-25231.0538"/>
</g>
<!-- raw_15 -->
<g id="node16" class="node">
<title>raw_15</title>
<ellipse fill="none" stroke="#000000" cx="388.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="388.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_15 -->
<g id="edge15" class="edge">
<title>prose_3&#45;&gt;raw_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M328.9909,-25259.0176C339.6629,-25248.9073 353.7097,-25235.5998 365.476,-25224.4527"/>
<polygon fill="#000000" stroke="#000000" points="367.968,-25226.9132 372.8204,-25217.4949 363.1538,-25221.8315 367.968,-25226.9132"/>
</g>
<!-- raw_20 -->
<g id="node21" class="node">
<title>raw_20</title>
<ellipse fill="none" stroke="#000000" cx="561.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="561.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_20 -->
<g id="edge20" class="edge">
<title>prose_4&#45;&gt;raw_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M754.5102,-25265.5217C713.9944,-25252.322 639.095,-25227.9204 595.47,-25213.7077"/>
<polygon fill="#000000" stroke="#000000" points="596.4681,-25210.3519 585.8758,-25210.582 594.2997,-25217.0076 596.4681,-25210.3519"/>
</g>
<!-- raw_22 -->
<g id="node23" class="node">
<title>raw_22</title>
<ellipse fill="none" stroke="#000000" cx="766.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="766.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_5&#45;&gt;raw_22 -->
<g id="edge22" class="edge">
<title>prose_5&#45;&gt;raw_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M876.3332,-25262.0991C854.257,-25250.1481 820.8957,-25232.0878 796.735,-25219.0084"/>
<polygon fill="#000000" stroke="#000000" points="798.1081,-25215.7718 787.6477,-25214.0889 794.7756,-25221.9276 798.1081,-25215.7718"/>
</g>
<!-- header_24 -->
<g id="node25" class="node">
<title>header_24</title>
<ellipse fill="none" stroke="#000000" cx="955.5" cy="-25202.6405" rx="92.3882" ry="18"/>
<text text-anchor="middle" x="955.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">3 : Check for lua&#45;utf8</text>
</g>
<!-- section_6&#45;&gt;header_24 -->
<g id="edge24" class="edge">
<title>section_6&#45;&gt;header_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1065.9856,-25258.6614C1045.9672,-25248.5112 1019.8084,-25235.2476 997.9694,-25224.1743"/>
<polygon fill="#000000" stroke="#000000" points="999.4067,-25220.9789 988.9049,-25219.5782 996.241,-25227.2222 999.4067,-25220.9789"/>
</g>
<!-- prose_25 -->
<g id="node26" class="node">
<title>prose_25</title>
<ellipse fill="none" stroke="#000000" cx="1097.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1097.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_6&#45;&gt;prose_25 -->
<g id="edge25" class="edge">
<title>section_6&#45;&gt;prose_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1097.5,-25256.4719C1097.5,-25248.7715 1097.5,-25239.6149 1097.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="1101.0001,-25231.0538 1097.5,-25221.0538 1094.0001,-25231.0538 1101.0001,-25231.0538"/>
</g>
<!-- codeblock_26 -->
<g id="node27" class="node">
<title>codeblock_26</title>
<ellipse fill="none" stroke="#000000" cx="1241.5" cy="-25202.6405" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="1241.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 16&#45;19</text>
</g>
<!-- section_6&#45;&gt;codeblock_26 -->
<g id="edge26" class="edge">
<title>section_6&#45;&gt;codeblock_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1129.1014,-25258.8398C1149.8395,-25248.4708 1177.1887,-25234.7962 1199.7165,-25223.5323"/>
<polygon fill="#000000" stroke="#000000" points="1201.3445,-25226.6314 1208.7236,-25219.0288 1198.214,-25220.3705 1201.3445,-25226.6314"/>
</g>
<!-- header_31 -->
<g id="node32" class="node">
<title>header_31</title>
<ellipse fill="none" stroke="#000000" cx="1582.5" cy="-25202.6405" rx="68.717" ry="18"/>
<text text-anchor="middle" x="1582.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Bridge Path</text>
</g>
<!-- section_7&#45;&gt;header_31 -->
<g id="edge31" class="edge">
<title>section_7&#45;&gt;header_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1779.8314,-25261.3507C1739.7936,-25249.4387 1680.91,-25231.9195 1637.8888,-25219.1198"/>
<polygon fill="#000000" stroke="#000000" points="1638.7234,-25215.7166 1628.1405,-25216.2195 1636.7272,-25222.426 1638.7234,-25215.7166"/>
</g>
<!-- prose_32 -->
<g id="node33" class="node">
<title>prose_32</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_7&#45;&gt;prose_32 -->
<g id="edge32" class="edge">
<title>section_7&#45;&gt;prose_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.5,-25256.4719C1824.5,-25248.7715 1824.5,-25239.6149 1824.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="1828.0001,-25231.0538 1824.5,-25221.0538 1821.0001,-25231.0538 1828.0001,-25231.0538"/>
</g>
<!-- prose_33 -->
<g id="node34" class="node">
<title>prose_33</title>
<ellipse fill="none" stroke="#000000" cx="2465.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2465.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_7&#45;&gt;prose_33 -->
<g id="edge33" class="edge">
<title>section_7&#45;&gt;prose_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1885.3816,-25267.802C2014.6527,-25253.2817 2313.7074,-25219.6906 2423.8216,-25207.3221"/>
<polygon fill="#000000" stroke="#000000" points="2424.3291,-25210.7871 2433.8759,-25206.1927 2423.5477,-25203.8309 2424.3291,-25210.7871"/>
</g>
<!-- codeblock_34 -->
<g id="node35" class="node">
<title>codeblock_34</title>
<ellipse fill="none" stroke="#000000" cx="2674.5" cy="-25202.6405" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="2674.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 28&#45;31</text>
</g>
<!-- section_7&#45;&gt;codeblock_34 -->
<g id="edge34" class="edge">
<title>section_7&#45;&gt;codeblock_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1888.4884,-25270.1685C2009.344,-25261.5901 2279.438,-25241.7897 2506.5,-25220.6405 2535.244,-25217.9632 2566.716,-25214.6843 2594.5706,-25211.6619"/>
<polygon fill="#000000" stroke="#000000" points="2595.0959,-25215.1254 2604.6573,-25210.5616 2594.3367,-25208.1667 2595.0959,-25215.1254"/>
</g>
<!-- header_59 -->
<g id="node60" class="node">
<title>header_59</title>
<ellipse fill="none" stroke="#000000" cx="2858.5" cy="-25202.6405" rx="57.5925" ry="18"/>
<text text-anchor="middle" x="2858.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Argparse</text>
</g>
<!-- section_8&#45;&gt;header_59 -->
<g id="edge59" class="edge">
<title>section_8&#45;&gt;header_59</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2966.6514,-25258.6614C2946.2161,-25248.0762 2919.2439,-25234.105 2897.3477,-25222.7631"/>
<polygon fill="#000000" stroke="#000000" points="2898.7976,-25219.5725 2888.3083,-25218.0808 2895.578,-25225.7881 2898.7976,-25219.5725"/>
</g>
<!-- prose_60 -->
<g id="node61" class="node">
<title>prose_60</title>
<ellipse fill="none" stroke="#000000" cx="3140.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3140.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_8&#45;&gt;prose_60 -->
<g id="edge60" class="edge">
<title>section_8&#45;&gt;prose_60</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3029.2363,-25258.6614C3052.3785,-25247.0094 3083.6695,-25231.2545 3107.1738,-25219.4202"/>
<polygon fill="#000000" stroke="#000000" points="3109.046,-25222.3962 3116.4037,-25214.7729 3105.8979,-25216.144 3109.046,-25222.3962"/>
</g>
<!-- section_61 -->
<g id="node62" class="node">
<title>section_61</title>
<ellipse fill="none" stroke="#000000" cx="4177.5" cy="-25202.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="4177.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 40&#45;70</text>
</g>
<!-- section_8&#45;&gt;section_61 -->
<g id="edge61" class="edge">
<title>section_8&#45;&gt;section_61</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3061.7799,-25270.7184C3264.0675,-25258.3754 3886.9639,-25220.3682 4102.8844,-25207.1934"/>
<polygon fill="#000000" stroke="#000000" points="4103.3936,-25210.6689 4113.1618,-25206.5663 4102.9672,-25203.6819 4103.3936,-25210.6689"/>
</g>
<!-- header_105 -->
<g id="node106" class="node">
<title>header_105</title>
<ellipse fill="none" stroke="#000000" cx="5495.5" cy="-25202.6405" rx="55.1438" ry="18"/>
<text text-anchor="middle" x="5495.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Stricture</text>
</g>
<!-- section_9&#45;&gt;header_105 -->
<g id="edge105" class="edge">
<title>section_9&#45;&gt;header_105</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5576.1104,-25257.3947C5561.6404,-25247.5661 5543.361,-25235.1499 5527.8686,-25224.6268"/>
<polygon fill="#000000" stroke="#000000" points="5529.8291,-25221.7274 5519.5903,-25219.0038 5525.8959,-25227.5179 5529.8291,-25221.7274"/>
</g>
<!-- prose_106 -->
<g id="node107" class="node">
<title>prose_106</title>
<ellipse fill="none" stroke="#000000" cx="5601.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="5601.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_9&#45;&gt;prose_106 -->
<g id="edge106" class="edge">
<title>section_9&#45;&gt;prose_106</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5601.5,-25256.4719C5601.5,-25248.7715 5601.5,-25239.6149 5601.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="5605.0001,-25231.0538 5601.5,-25221.0538 5598.0001,-25231.0538 5605.0001,-25231.0538"/>
</g>
<!-- codeblock_107 -->
<g id="node108" class="node">
<title>codeblock_107</title>
<ellipse fill="none" stroke="#000000" cx="5855.5" cy="-25202.6405" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="5855.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1593&#45;1673</text>
</g>
<!-- section_9&#45;&gt;codeblock_107 -->
<g id="edge107" class="edge">
<title>section_9&#45;&gt;codeblock_107</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5652.5951,-25260.1569C5692.9147,-25248.7277 5749.3566,-25232.7284 5792.4786,-25220.5049"/>
<polygon fill="#000000" stroke="#000000" points="5793.6328,-25223.8157 5802.2992,-25217.7211 5791.7237,-25217.081 5793.6328,-25223.8157"/>
</g>
<!-- section_108 -->
<g id="node109" class="node">
<title>section_108</title>
<ellipse fill="none" stroke="#000000" cx="6363.5" cy="-25202.6405" rx="85.1652" ry="18"/>
<text text-anchor="middle" x="6363.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1676&#45;1686</text>
</g>
<!-- section_9&#45;&gt;section_108 -->
<g id="edge108" class="edge">
<title>section_9&#45;&gt;section_108</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5679.4664,-25267.2736C5822.3144,-25253.7762 6125.0974,-25225.1668 6275.2543,-25210.9787"/>
<polygon fill="#000000" stroke="#000000" points="6275.7329,-25214.4492 6285.3593,-25210.0239 6275.0743,-25207.4802 6275.7329,-25214.4492"/>
</g>
<!-- header_132 -->
<g id="node133" class="node">
<title>header_132</title>
<ellipse fill="none" stroke="#000000" cx="7238.5" cy="-25202.6405" rx="45.4959" ry="18"/>
<text text-anchor="middle" x="7238.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Parse</text>
</g>
<!-- section_10&#45;&gt;header_132 -->
<g id="edge132" class="edge">
<title>section_10&#45;&gt;header_132</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7341.083,-25257.7597C7321.1371,-25247.0426 7295.2643,-25233.1408 7274.4927,-25221.9799"/>
<polygon fill="#000000" stroke="#000000" points="7276.1077,-25218.8744 7265.6421,-25217.2244 7272.7944,-25225.0407 7276.1077,-25218.8744"/>
</g>
<!-- prose_133 -->
<g id="node134" class="node">
<title>prose_133</title>
<ellipse fill="none" stroke="#000000" cx="7372.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="7372.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_10&#45;&gt;prose_133 -->
<g id="edge133" class="edge">
<title>section_10&#45;&gt;prose_133</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7372.5,-25256.4719C7372.5,-25248.7715 7372.5,-25239.6149 7372.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="7376.0001,-25231.0538 7372.5,-25221.0538 7369.0001,-25231.0538 7376.0001,-25231.0538"/>
</g>
<!-- prose_134 -->
<g id="node135" class="node">
<title>prose_134</title>
<ellipse fill="none" stroke="#000000" cx="7725.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="7725.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_10&#45;&gt;prose_134 -->
<g id="edge134" class="edge">
<title>section_10&#45;&gt;prose_134</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7433.9879,-25262.0991C7506.0658,-25247.3977 7623.4687,-25223.4515 7684.9834,-25210.9046"/>
<polygon fill="#000000" stroke="#000000" points="7685.98,-25214.2734 7695.0788,-25208.8454 7684.581,-25207.4146 7685.98,-25214.2734"/>
</g>
<!-- codeblock_135 -->
<g id="node136" class="node">
<title>codeblock_135</title>
<ellipse fill="none" stroke="#000000" cx="8019.5" cy="-25202.6405" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="8019.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1693&#45;1744</text>
</g>
<!-- section_10&#45;&gt;codeblock_135 -->
<g id="edge135" class="edge">
<title>section_10&#45;&gt;codeblock_135</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7447.9854,-25266.2403C7566.6908,-25253.0304 7796.7413,-25227.4298 7925.8279,-25213.0646"/>
<polygon fill="#000000" stroke="#000000" points="7926.5375,-25216.5074 7936.089,-25211.9228 7925.7632,-25209.5503 7926.5375,-25216.5074"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="177,-24563.3408 0,-24563.3408 0,-24507.5379 177,-24507.5379 177,-24563.3408"/>
<text text-anchor="middle" x="88.5" y="-24515.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">The responsibilities of</text>
</g>
<!-- raw_12&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>raw_12&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M124.4912,-25184.4485C119.5168,-25094.7496 97.5629,-24698.8663 90.6156,-24573.5895"/>
<polygon fill="#000000" stroke="#000000" points="94.0956,-24573.1303 90.0472,-24563.3395 87.1064,-24573.518 94.0956,-24573.1303"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="249.5,-24553.4394 195.5,-24553.4394 195.5,-24517.4394 249.5,-24517.4394 249.5,-24553.4394"/>
<text text-anchor="middle" x="222.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_13&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>prespace_13&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M216.6636,-25184.4485C217.4924,-25092.2805 221.2284,-24676.8395 222.2443,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="225.7464,-24563.6462 222.3365,-24553.6151 218.7467,-24563.5832 225.7464,-24563.6462"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="333.5,-24553.4394 279.5,-24553.4394 279.5,-24517.4394 333.5,-24517.4394 333.5,-24553.4394"/>
<text text-anchor="middle" x="306.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">load</text>
</g>
<!-- literal_14&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>literal_14&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M312.3364,-25184.4485C311.5076,-25092.2805 307.7716,-24676.8395 306.7557,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="310.2533,-24563.5832 306.6635,-24553.6151 303.2536,-24563.6462 310.2533,-24563.5832"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="405.5,-24553.4394 351.5,-24553.4394 351.5,-24517.4394 405.5,-24517.4394 405.5,-24553.4394"/>
<text text-anchor="middle" x="378.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">:</text>
</g>
<!-- raw_15&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>raw_15&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M388.2273,-25184.4485C386.8459,-25092.2805 380.6193,-24676.8395 378.9261,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="382.422,-24563.5615 378.7724,-24553.6151 375.4228,-24563.6665 382.422,-24563.5615"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="559,-24555.3414 424,-24555.3414 424,-24515.5373 559,-24515.5373 559,-24555.3414"/>
<text text-anchor="middle" x="491.5" y="-24523.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45; Parse arguments</text>
</g>
<!-- raw_20&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>raw_20&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M559.5914,-25184.4485C549.9648,-25092.6933 506.7249,-24680.5545 494.6441,-24565.4073"/>
<polygon fill="#000000" stroke="#000000" points="498.0989,-24564.7921 493.5745,-24555.2119 491.1371,-24565.5225 498.0989,-24564.7921"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="852,-24578.0404 577,-24578.0404 577,-24492.8383 852,-24492.8383 852,-24578.0404"/>
<text text-anchor="middle" x="714.5" y="-24547.0394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45; If interactive and scripts:</text>
<text text-anchor="middle" x="714.5" y="-24531.6394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Clone the global namespace</text>
<text text-anchor="middle" x="714.5" y="-24516.2394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Run scripts into namespace clone</text>
<text text-anchor="middle" x="714.5" y="-24500.8393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Launch REPL.</text>
</g>
<!-- raw_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>raw_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M765.0822,-25184.4485C758.341,-25097.9547 729.4116,-24726.7666 718.5987,-24588.0288"/>
<polygon fill="#000000" stroke="#000000" points="722.0881,-24587.7556 717.8216,-24578.0578 715.1093,-24588.2996 722.0881,-24587.7556"/>
</g>
<!-- leaf_27 -->
<g id="node28" class="node">
<title>leaf_27</title>
<polygon fill="none" stroke="#c0c0c0" points="1040.5,-24553.4394 870.5,-24553.4394 870.5,-24517.4394 1040.5,-24517.4394 1040.5,-24553.4394"/>
<text text-anchor="middle" x="955.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">*** Check for lua&#45;utf8</text>
</g>
<!-- header_24&#45;&gt;leaf_27 -->
<g id="edge27" class="edge">
<title>header_24&#45;&gt;leaf_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M955.5,-25184.4485C955.5,-25092.2805 955.5,-24676.8395 955.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="959.0001,-24563.6151 955.5,-24553.6151 952.0001,-24563.6151 959.0001,-24563.6151"/>
</g>
<!-- raw_28 -->
<g id="node29" class="node">
<title>raw_28</title>
<ellipse fill="none" stroke="#000000" cx="1085.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1085.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_25&#45;&gt;raw_28 -->
<g id="edge28" class="edge">
<title>prose_25&#45;&gt;raw_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1097.1728,-25184.4485C1095.5151,-25092.2805 1088.0432,-24676.8395 1086.0114,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="1089.5063,-24563.5505 1085.8269,-24553.6151 1082.5074,-24563.6765 1089.5063,-24563.5505"/>
</g>
<!-- leaf_30 -->
<g id="node31" class="node">
<title>leaf_30</title>
<polygon fill="none" stroke="#c0c0c0" points="1384.5,-24554.7399 1130.5,-24554.7399 1130.5,-24516.1388 1384.5,-24516.1388 1384.5,-24554.7399"/>
<text text-anchor="middle" x="1257.5" y="-24539.6394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; local utf8 = require &quot;lua&#45;utf8&quot;</text>
<text text-anchor="middle" x="1257.5" y="-24524.2394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; assert(utf8, &quot;no utf8&quot;)</text>
</g>
<!-- codeblock_26&#45;&gt;leaf_30 -->
<g id="edge30" class="edge">
<title>codeblock_26&#45;&gt;leaf_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1241.9363,-25184.4485C1244.139,-25092.5921 1254.0418,-24679.6453 1256.7905,-24565.0275"/>
<polygon fill="#000000" stroke="#000000" points="1260.2928,-24564.9686 1257.0336,-24554.8876 1253.2948,-24564.8008 1260.2928,-24564.9686"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="1112.5,-23745.0379 1058.5,-23745.0379 1058.5,-23709.0379 1112.5,-23709.0379 1112.5,-23745.0379"/>
</g>
<!-- raw_28&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>raw_28&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1085.5,-24517.4213C1085.5,-24412.8393 1085.5,-23884.0356 1085.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="1089.0001,-23755.0994 1085.5,-23745.0994 1082.0001,-23755.0995 1089.0001,-23755.0994"/>
</g>
<!-- leaf_35 -->
<g id="node36" class="node">
<title>leaf_35</title>
<polygon fill="none" stroke="#c0c0c0" points="1516.5,-24553.4394 1402.5,-24553.4394 1402.5,-24517.4394 1516.5,-24517.4394 1516.5,-24553.4394"/>
<text text-anchor="middle" x="1459.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Bridge Path</text>
</g>
<!-- header_31&#45;&gt;leaf_35 -->
<g id="edge35" class="edge">
<title>header_31&#45;&gt;leaf_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1557.7712,-25185.7593C1545.9542,-25176.2936 1532.8199,-25163.4215 1525.5,-25148.6405 1424.0173,-24943.7174 1445.9244,-24653.9362 1455.9745,-24563.5043"/>
<polygon fill="#000000" stroke="#000000" points="1459.4614,-24563.819 1457.1323,-24553.4833 1452.5076,-24563.0155 1459.4614,-24563.819"/>
</g>
<!-- raw_36 -->
<g id="node37" class="node">
<title>raw_36</title>
<ellipse fill="none" stroke="#000000" cx="1561.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1561.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_32&#45;&gt;raw_36 -->
<g id="edge36" class="edge">
<title>prose_32&#45;&gt;raw_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1792.3932,-25199.6502C1735.8891,-25193.6705 1622.2967,-25178.2032 1597.5,-25148.6405 1522.2978,-25058.9844 1549.5766,-24672.3924 1558.895,-24563.8675"/>
<polygon fill="#000000" stroke="#000000" points="1562.4002,-24563.9608 1559.7867,-24553.6934 1555.4269,-24563.3496 1562.4002,-24563.9608"/>
</g>
<!-- prespace_37 -->
<g id="node38" class="node">
<title>prespace_37</title>
<ellipse fill="none" stroke="#000000" cx="1652.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="1652.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_32&#45;&gt;prespace_37 -->
<g id="edge37" class="edge">
<title>prose_32&#45;&gt;prespace_37</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1793.5676,-25197.1433C1766.4105,-25190.5677 1728.2481,-25176.7105 1708.5,-25148.6405 1576.4066,-24960.883 1626.5219,-24656.631 1646.1036,-24563.4502"/>
<polygon fill="#000000" stroke="#000000" points="1649.5852,-24563.9083 1648.2727,-24553.3951 1642.7426,-24562.4321 1649.5852,-24563.9083"/>
</g>
<!-- literal_38 -->
<g id="node39" class="node">
<title>literal_38</title>
<ellipse fill="none" stroke="#000000" cx="1748.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="1748.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_32&#45;&gt;literal_38 -->
<g id="edge38" class="edge">
<title>prose_32&#45;&gt;literal_38</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1810.3367,-25186.3557C1802.4089,-25176.2223 1793.1989,-25162.5139 1788.5,-25148.6405 1715.6466,-24933.542 1736.295,-24652.1729 1745.3201,-24563.4727"/>
<polygon fill="#000000" stroke="#000000" points="1748.8144,-24563.7098 1746.3811,-24553.3982 1741.8529,-24562.9766 1748.8144,-24563.7098"/>
</g>
<!-- raw_39 -->
<g id="node40" class="node">
<title>raw_39</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_32&#45;&gt;raw_39 -->
<g id="edge39" class="edge">
<title>prose_32&#45;&gt;raw_39</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.5,-25184.4485C1824.5,-25092.2805 1824.5,-24676.8395 1824.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="1828.0001,-24563.6151 1824.5,-24553.6151 1821.0001,-24563.6151 1828.0001,-24563.6151"/>
</g>
<!-- prespace_40 -->
<g id="node41" class="node">
<title>prespace_40</title>
<ellipse fill="none" stroke="#000000" cx="1915.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="1915.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_32&#45;&gt;prespace_40 -->
<g id="edge40" class="edge">
<title>prose_32&#45;&gt;prespace_40</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1838.5409,-25186.3135C1846.4254,-25176.1651 1855.6328,-25162.4558 1860.5,-25148.6405 1936.02,-24934.2817 1924.031,-24652.9757 1917.8015,-24563.8162"/>
<polygon fill="#000000" stroke="#000000" points="1921.2805,-24563.399 1917.0589,-24553.6815 1914.2992,-24563.9106 1921.2805,-24563.399"/>
</g>
<!-- literal_41 -->
<g id="node42" class="node">
<title>literal_41</title>
<ellipse fill="none" stroke="#000000" cx="2011.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="2011.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_32&#45;&gt;literal_41 -->
<g id="edge41" class="edge">
<title>prose_32&#45;&gt;literal_41</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1854.5201,-25195.6156C1892.9572,-25185.9672 1956.3063,-25167.6387 1970.5,-25148.6405 2107.9298,-24964.6924 2043.2735,-24656.6725 2019.1777,-24563.1767"/>
<polygon fill="#000000" stroke="#000000" points="2022.5189,-24562.1203 2016.5864,-24553.3422 2015.7499,-24563.9039 2022.5189,-24562.1203"/>
</g>
<!-- raw_42 -->
<g id="node43" class="node">
<title>raw_42</title>
<ellipse fill="none" stroke="#000000" cx="2111.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2111.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_32&#45;&gt;raw_42 -->
<g id="edge42" class="edge">
<title>prose_32&#45;&gt;raw_42</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1856.4948,-25199.5544C1912.8191,-25193.4209 2026.1331,-25177.7154 2051.5,-25148.6405 2203.3308,-24974.616 2141.7361,-24657.9627 2118.7184,-24563.0452"/>
<polygon fill="#000000" stroke="#000000" points="2122.1117,-24562.187 2116.3057,-24553.3246 2115.3178,-24563.8733 2122.1117,-24562.187"/>
</g>
<!-- raw_50 -->
<g id="node51" class="node">
<title>raw_50</title>
<ellipse fill="none" stroke="#000000" cx="2346.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2346.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_33&#45;&gt;raw_50 -->
<g id="edge50" class="edge">
<title>prose_33&#45;&gt;raw_50</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2445.2384,-25188.5424C2432.9921,-25178.8305 2418.2879,-25164.7923 2410.5,-25148.6405 2311.2159,-24942.73 2333.0452,-24653.6088 2343.0091,-24563.4229"/>
<polygon fill="#000000" stroke="#000000" points="2346.4929,-24563.7637 2344.1565,-24553.4297 2339.5386,-24562.9652 2346.4929,-24563.7637"/>
</g>
<!-- prespace_51 -->
<g id="node52" class="node">
<title>prespace_51</title>
<ellipse fill="none" stroke="#000000" cx="2465.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="2465.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_33&#45;&gt;prespace_51 -->
<g id="edge51" class="edge">
<title>prose_33&#45;&gt;prespace_51</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2465.5,-25184.4485C2465.5,-25092.2805 2465.5,-24676.8395 2465.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2469.0001,-24563.6151 2465.5,-24553.6151 2462.0001,-24563.6151 2469.0001,-24563.6151"/>
</g>
<!-- literal_52 -->
<g id="node53" class="node">
<title>literal_52</title>
<ellipse fill="none" stroke="#000000" cx="2561.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="2561.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_33&#45;&gt;literal_52 -->
<g id="edge52" class="edge">
<title>prose_33&#45;&gt;literal_52</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2485.9674,-25188.6392C2498.2957,-25178.966 2513.0141,-25164.9345 2520.5,-25148.6405 2615.6303,-24941.5785 2580.5704,-24653.2271 2566.3347,-24563.328"/>
<polygon fill="#000000" stroke="#000000" points="2569.7744,-24562.6743 2564.712,-24553.3673 2562.8655,-24563.7999 2569.7744,-24562.6743"/>
</g>
<!-- raw_53 -->
<g id="node54" class="node">
<title>raw_53</title>
<ellipse fill="none" stroke="#000000" cx="2637.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2637.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_33&#45;&gt;raw_53 -->
<g id="edge53" class="edge">
<title>prose_33&#45;&gt;raw_53</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2497.2938,-25199.6377C2529.3371,-25194.7618 2577.3959,-25181.9979 2601.5,-25148.6405 2670.0376,-25053.7922 2647.521,-24670.9104 2639.6977,-24563.5503"/>
<polygon fill="#000000" stroke="#000000" points="2643.1813,-24563.1989 2638.9479,-24553.4866 2636.2006,-24563.7191 2643.1813,-24563.1989"/>
</g>
<!-- leaf_58 -->
<g id="node59" class="node">
<title>leaf_58</title>
<polygon fill="none" stroke="#c0c0c0" points="2736.5,-24553.4394 2682.5,-24553.4394 2682.5,-24517.4394 2736.5,-24517.4394 2736.5,-24553.4394"/>
</g>
<!-- codeblock_34&#45;&gt;leaf_58 -->
<g id="edge58" class="edge">
<title>codeblock_34&#45;&gt;leaf_58</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2675.4543,-25184.4485C2680.2893,-25092.2805 2702.0824,-24676.8395 2708.0085,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2711.5178,-24563.7848 2708.5465,-24553.6151 2704.5274,-24563.418 2711.5178,-24563.7848"/>
</g>
<!-- leaf_43 -->
<g id="node44" class="node">
<title>leaf_43</title>
<polygon fill="none" stroke="#c0c0c0" points="1416.5,-23745.0379 1362.5,-23745.0379 1362.5,-23709.0379 1416.5,-23709.0379 1416.5,-23745.0379"/>
</g>
<!-- raw_36&#45;&gt;leaf_43 -->
<g id="edge43" class="edge">
<title>raw_36&#45;&gt;leaf_43</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1563.0088,-24517.3473C1570.2251,-24426.3438 1597.9719,-24019.1822 1525.5,-23922.2382 1497.217,-23884.4046 1456.7824,-23921.6319 1425.5,-23886.2382 1393.1873,-23849.6788 1388.0557,-23790.2773 1388.1591,-23755.3008"/>
<polygon fill="#000000" stroke="#000000" points="1391.6588,-23755.3424 1388.3349,-23745.2825 1384.6599,-23755.2195 1391.6588,-23755.3424"/>
</g>
<!-- leaf_44 -->
<g id="node45" class="node">
<title>leaf_44</title>
<polygon fill="none" stroke="#c0c0c0" points="1488.5,-23745.0379 1434.5,-23745.0379 1434.5,-23709.0379 1488.5,-23709.0379 1488.5,-23745.0379"/>
</g>
<!-- prespace_37&#45;&gt;leaf_44 -->
<g id="edge44" class="edge">
<title>prespace_37&#45;&gt;leaf_44</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1657.1234,-24517.4433C1676.4834,-24437.6427 1743.4663,-24111.3473 1597.5,-23922.2382 1568.6375,-23884.8448 1528.7824,-23921.6319 1497.5,-23886.2382 1465.1873,-23849.6788 1460.0557,-23790.2773 1460.1591,-23755.3008"/>
<polygon fill="#000000" stroke="#000000" points="1463.6588,-23755.3424 1460.3349,-23745.2825 1456.6599,-23755.2195 1463.6588,-23755.3424"/>
</g>
<!-- leaf_45 -->
<g id="node46" class="node">
<title>leaf_45</title>
<polygon fill="none" stroke="#c0c0c0" points="1564.5,-23745.0379 1506.5,-23745.0379 1506.5,-23709.0379 1564.5,-23709.0379 1564.5,-23745.0379"/>
<text text-anchor="middle" x="1535.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">bridge</text>
</g>
<!-- literal_38&#45;&gt;leaf_45 -->
<g id="edge45" class="edge">
<title>literal_38&#45;&gt;leaf_45</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1749.9996,-24517.2181C1757.1497,-24425.5832 1784.3557,-24015.8248 1707.5,-23922.2382 1668.3631,-23874.5814 1616.4874,-23930.453 1573.5,-23886.2382 1539.2137,-23850.9729 1533.9199,-23790.6142 1534.0871,-23755.2183"/>
<polygon fill="#000000" stroke="#000000" points="1537.5889,-23755.1577 1534.2882,-23745.0901 1530.5903,-23755.0186 1537.5889,-23755.1577"/>
</g>
<!-- leaf_46 -->
<g id="node47" class="node">
<title>leaf_46</title>
<polygon fill="none" stroke="#c0c0c0" points="1858,-23745.0379 1583,-23745.0379 1583,-23709.0379 1858,-23709.0379 1858,-23745.0379"/>
<text text-anchor="middle" x="1720.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> uses its own path, distinct from the</text>
</g>
<!-- raw_39&#45;&gt;leaf_46 -->
<g id="edge46" class="edge">
<title>raw_39&#45;&gt;leaf_46</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1825.2419,-24517.4008C1827.9228,-24443.081 1834.6643,-24153.623 1788.5,-23922.2382 1776.2095,-23860.6357 1748.9345,-23792.0141 1732.9128,-23754.7732"/>
<polygon fill="#000000" stroke="#000000" points="1735.9163,-23752.9038 1728.7141,-23745.1334 1729.4986,-23755.6991 1735.9163,-23752.9038"/>
</g>
<!-- leaf_47 -->
<g id="node48" class="node">
<title>leaf_47</title>
<polygon fill="none" stroke="#c0c0c0" points="1930.5,-23745.0379 1876.5,-23745.0379 1876.5,-23709.0379 1930.5,-23709.0379 1930.5,-23745.0379"/>
<text text-anchor="middle" x="1903.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_40&#45;&gt;leaf_47 -->
<g id="edge47" class="edge">
<title>prespace_40&#45;&gt;leaf_47</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1915.2325,-24517.4213C1913.6801,-24412.8393 1905.8305,-23884.0356 1903.9197,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="1907.4162,-23755.0464 1903.7681,-23745.0994 1900.417,-23755.1503 1907.4162,-23755.0464"/>
</g>
<!-- leaf_48 -->
<g id="node49" class="node">
<title>leaf_48</title>
<polygon fill="none" stroke="#c0c0c0" points="2020.5,-23745.0379 1948.5,-23745.0379 1948.5,-23709.0379 2020.5,-23709.0379 2020.5,-23745.0379"/>
<text text-anchor="middle" x="1984.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">LUA_PATH</text>
</g>
<!-- literal_41&#45;&gt;leaf_48 -->
<g id="edge48" class="edge">
<title>literal_41&#45;&gt;leaf_48</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2010.8982,-24517.4213C2007.4052,-24412.8393 1989.7436,-23884.0356 1985.4444,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="1988.9352,-23754.977 1985.1032,-23745.0994 1981.9391,-23755.2107 1988.9352,-23754.977"/>
</g>
<!-- leaf_49 -->
<g id="node50" class="node">
<title>leaf_49</title>
<polygon fill="none" stroke="#c0c0c0" points="2208.5,-23745.0379 2038.5,-23745.0379 2038.5,-23709.0379 2208.5,-23709.0379 2208.5,-23745.0379"/>
<text text-anchor="middle" x="2123.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> environment variable.</text>
</g>
<!-- raw_42&#45;&gt;leaf_49 -->
<g id="edge49" class="edge">
<title>raw_42&#45;&gt;leaf_49</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2111.7675,-24517.4213C2113.3199,-24412.8393 2121.1695,-23884.0356 2123.0803,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2126.583,-23755.1503 2123.2319,-23745.0994 2119.5838,-23755.0464 2126.583,-23755.1503"/>
</g>
<!-- leaf_54 -->
<g id="node55" class="node">
<title>leaf_54</title>
<polygon fill="none" stroke="#c0c0c0" points="2438.5,-23746.94 2226.5,-23746.94 2226.5,-23707.1358 2438.5,-23707.1358 2438.5,-23746.94"/>
<text text-anchor="middle" x="2332.5" y="-23715.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">This is, predictably enough,</text>
</g>
<!-- raw_50&#45;&gt;leaf_54 -->
<g id="edge54" class="edge">
<title>raw_50&#45;&gt;leaf_54</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2346.188,-24517.4213C2344.3848,-24413.3007 2335.2996,-23888.6931 2333.0196,-23757.0414"/>
<polygon fill="#000000" stroke="#000000" points="2336.5165,-23756.8258 2332.8438,-23746.888 2329.5175,-23756.9471 2336.5165,-23756.8258"/>
</g>
<!-- leaf_55 -->
<g id="node56" class="node">
<title>leaf_55</title>
<polygon fill="none" stroke="#c0c0c0" points="2510.5,-23745.0379 2456.5,-23745.0379 2456.5,-23709.0379 2510.5,-23709.0379 2510.5,-23745.0379"/>
<text text-anchor="middle" x="2483.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_51&#45;&gt;leaf_55 -->
<g id="edge55" class="edge">
<title>prespace_51&#45;&gt;leaf_55</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2465.9012,-24517.4213C2468.2298,-24412.8393 2480.0043,-23884.0356 2482.8704,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2486.3743,-23755.1749 2483.0978,-23745.0994 2479.376,-23755.019 2486.3743,-23755.1749"/>
</g>
<!-- leaf_56 -->
<g id="node57" class="node">
<title>leaf_56</title>
<polygon fill="none" stroke="#c0c0c0" points="2622,-23745.0379 2529,-23745.0379 2529,-23709.0379 2622,-23709.0379 2622,-23745.0379"/>
<text text-anchor="middle" x="2575.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">BRIDGE_PATH</text>
</g>
<!-- literal_52&#45;&gt;leaf_56 -->
<g id="edge56" class="edge">
<title>literal_52&#45;&gt;leaf_56</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2561.812,-24517.4213C2563.6232,-24412.8393 2572.7811,-23884.0356 2575.0103,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2578.5134,-23755.1586 2575.1872,-23745.0994 2571.5145,-23755.0373 2578.5134,-23755.1586"/>
</g>
<!-- leaf_57 -->
<g id="node58" class="node">
<title>leaf_57</title>
<polygon fill="none" stroke="#c0c0c0" points="2694.5,-23745.0379 2640.5,-23745.0379 2640.5,-23709.0379 2694.5,-23709.0379 2694.5,-23745.0379"/>
<text text-anchor="middle" x="2667.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">.</text>
</g>
<!-- raw_53&#45;&gt;leaf_57 -->
<g id="edge57" class="edge">
<title>raw_53&#45;&gt;leaf_57</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2638.1687,-24517.4213C2642.0497,-24412.8393 2661.6738,-23884.0356 2666.4506,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2669.9564,-23755.2224 2666.8297,-23745.0994 2662.9612,-23754.9627 2669.9564,-23755.2224"/>
</g>
<!-- leaf_62 -->
<g id="node63" class="node">
<title>leaf_62</title>
<polygon fill="none" stroke="#c0c0c0" points="2870,-24553.4394 2777,-24553.4394 2777,-24517.4394 2870,-24517.4394 2870,-24553.4394"/>
<text text-anchor="middle" x="2823.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Argparse</text>
</g>
<!-- header_59&#45;&gt;leaf_62 -->
<g id="edge62" class="edge">
<title>header_59&#45;&gt;leaf_62</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2857.5457,-25184.4485C2852.7107,-25092.2805 2830.9176,-24676.8395 2824.9915,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2828.4726,-24563.418 2824.4535,-24553.6151 2821.4822,-24563.7848 2828.4726,-24563.418"/>
</g>
<!-- raw_63 -->
<g id="node64" class="node">
<title>raw_63</title>
<ellipse fill="none" stroke="#000000" cx="2915.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2915.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_60&#45;&gt;raw_63 -->
<g id="edge63" class="edge">
<title>prose_60&#45;&gt;raw_63</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3109.1127,-25198.1054C3060.6657,-25190.4113 2971.1862,-25173.2066 2951.5,-25148.6405 2878.3228,-25057.3241 2904.1546,-24671.9185 2913.0188,-24563.7661"/>
<polygon fill="#000000" stroke="#000000" points="2916.521,-24563.8844 2913.8673,-24553.6273 2909.5454,-24563.3005 2916.521,-24563.8844"/>
</g>
<!-- prespace_64 -->
<g id="node65" class="node">
<title>prespace_64</title>
<ellipse fill="none" stroke="#000000" cx="3006.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3006.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_60&#45;&gt;prespace_64 -->
<g id="edge64" class="edge">
<title>prose_60&#45;&gt;prespace_64</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3114.506,-25191.8829C3096.6766,-25183.0433 3074.2031,-25168.699 3062.5,-25148.6405 2947.1986,-24951.0206 2985.5483,-24655.233 3001.2237,-24563.5502"/>
<polygon fill="#000000" stroke="#000000" points="3004.6817,-24564.094 3002.968,-24553.6387 2997.7876,-24562.8806 3004.6817,-24564.094"/>
</g>
<!-- literal_65 -->
<g id="node66" class="node">
<title>literal_65</title>
<ellipse fill="none" stroke="#000000" cx="3102.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="3102.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_60&#45;&gt;literal_65 -->
<g id="edge65" class="edge">
<title>prose_60&#45;&gt;literal_65</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3139.4639,-25184.4485C3134.2145,-25092.2805 3110.5534,-24676.8395 3104.1193,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="3107.5982,-24563.3999 3103.5352,-24553.6151 3100.6096,-24563.798 3107.5982,-24563.3999"/>
</g>
<!-- raw_66 -->
<g id="node67" class="node">
<title>raw_66</title>
<ellipse fill="none" stroke="#000000" cx="3178.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="3178.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_60&#45;&gt;raw_66 -->
<g id="edge66" class="edge">
<title>prose_60&#45;&gt;raw_66</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3141.5361,-25184.4485C3146.7855,-25092.2805 3170.4466,-24676.8395 3176.8807,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="3180.3904,-24563.798 3177.4648,-24553.6151 3173.4018,-24563.3999 3180.3904,-24563.798"/>
</g>
<!-- prespace_67 -->
<g id="node68" class="node">
<title>prespace_67</title>
<ellipse fill="none" stroke="#000000" cx="3362.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3362.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_60&#45;&gt;prespace_67 -->
<g id="edge67" class="edge">
<title>prose_60&#45;&gt;prespace_67</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3165.051,-25190.634C3181.4647,-25181.3669 3202.2262,-25167.027 3214.5,-25148.6405 3344.6495,-24953.6734 3360.624,-24656.046 3362.3645,-24563.7362"/>
<polygon fill="#000000" stroke="#000000" points="3365.8672,-24563.5672 3362.5129,-24553.5174 3358.868,-24563.4655 3365.8672,-24563.5672"/>
</g>
<!-- literal_68 -->
<g id="node69" class="node">
<title>literal_68</title>
<ellipse fill="none" stroke="#000000" cx="3511.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="3511.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_60&#45;&gt;literal_68 -->
<g id="edge68" class="edge">
<title>prose_60&#45;&gt;literal_68</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3172.7805,-25200.8883C3238.4284,-25196.629 3384.1136,-25183.4045 3417.5,-25148.6405 3578.7507,-24980.7365 3534.7166,-24659.2218 3517.0987,-24563.1874"/>
<polygon fill="#000000" stroke="#000000" points="3520.5372,-24562.5338 3515.2409,-24553.3577 3513.659,-24563.8338 3520.5372,-24562.5338"/>
</g>
<!-- raw_69 -->
<g id="node70" class="node">
<title>raw_69</title>
<ellipse fill="none" stroke="#000000" cx="3654.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="3654.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_60&#45;&gt;raw_69 -->
<g id="edge69" class="edge">
<title>prose_60&#45;&gt;raw_69</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3172.5791,-25200.5996C3264.5441,-25194.4523 3524.2775,-25174.9061 3551.5,-25148.6405 3719.602,-24986.448 3677.113,-24660.3302 3659.9393,-24563.2907"/>
<polygon fill="#000000" stroke="#000000" points="3663.3661,-24562.5727 3658.127,-24553.3639 3656.48,-24563.83 3663.3661,-24562.5727"/>
</g>
<!-- header_77 -->
<g id="node78" class="node">
<title>header_77</title>
<ellipse fill="none" stroke="#000000" cx="3948.5" cy="-24535.4394" rx="52.7555" ry="18"/>
<text text-anchor="middle" x="3948.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">3 : License</text>
</g>
<!-- section_61&#45;&gt;header_77 -->
<g id="edge77" class="edge">
<title>section_61&#45;&gt;header_77</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4161.3476,-25184.7367C4152.9825,-25174.7065 4143.1552,-25161.6311 4136.5,-25148.6405 4028.3144,-24937.4675 3969.9754,-24652.9897 3953.457,-24563.5519"/>
<polygon fill="#000000" stroke="#000000" points="3956.8851,-24562.8405 3951.6493,-24553.6298 3949.9984,-24564.0952 3956.8851,-24562.8405"/>
</g>
<!-- prose_78 -->
<g id="node79" class="node">
<title>prose_78</title>
<ellipse fill="none" stroke="#000000" cx="4177.5" cy="-24535.4394" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="4177.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_61&#45;&gt;prose_78 -->
<g id="edge78" class="edge">
<title>section_61&#45;&gt;prose_78</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4177.5,-25184.4485C4177.5,-25092.2805 4177.5,-24676.8395 4177.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="4181.0001,-24563.6151 4177.5,-24553.6151 4174.0001,-24563.6151 4181.0001,-24563.6151"/>
</g>
<!-- codeblock_79 -->
<g id="node80" class="node">
<title>codeblock_79</title>
<ellipse fill="none" stroke="#000000" cx="4504.5" cy="-24535.4394" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="4504.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 47&#45;68</text>
</g>
<!-- section_61&#45;&gt;codeblock_79 -->
<g id="edge79" class="edge">
<title>section_61&#45;&gt;codeblock_79</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4192.5527,-25184.8319C4200.7857,-25174.6193 4210.8376,-25161.3394 4218.5,-25148.6405 4347.9487,-24934.1039 4460.2361,-24651.3611 4494.0899,-24563.0171"/>
<polygon fill="#000000" stroke="#000000" points="4497.4439,-24564.0447 4497.7385,-24553.454 4490.9037,-24561.5495 4497.4439,-24564.0447"/>
</g>
<!-- section_80 -->
<g id="node81" class="node">
<title>section_80</title>
<ellipse fill="none" stroke="#000000" cx="5179.5" cy="-24535.4394" rx="75.4916" ry="18"/>
<text text-anchor="middle" x="5179.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 71&#45;1587</text>
</g>
<!-- section_61&#45;&gt;section_80 -->
<g id="edge80" class="edge">
<title>section_61&#45;&gt;section_80</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4242.2203,-25199.3954C4342.7229,-25193.4903 4530.9584,-25178.7187 4590.5,-25148.6405 4878.0077,-25003.4022 5103.3255,-24660.2332 5163.5807,-24562.0851"/>
<polygon fill="#000000" stroke="#000000" points="5166.6785,-24563.7274 5168.8931,-24553.3666 5160.7007,-24560.085 5166.6785,-24563.7274"/>
</g>
<!-- leaf_70 -->
<g id="node71" class="node">
<title>leaf_70</title>
<polygon fill="none" stroke="#c0c0c0" points="2766.5,-23745.0379 2712.5,-23745.0379 2712.5,-23709.0379 2766.5,-23709.0379 2766.5,-23745.0379"/>
</g>
<!-- raw_63&#45;&gt;leaf_70 -->
<g id="edge70" class="edge">
<title>raw_63&#45;&gt;leaf_70</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2916.9938,-24517.3324C2924.1329,-24426.2558 2951.5081,-24018.7937 2878.5,-23922.2382 2849.2526,-23883.5575 2807.7835,-23922.4235 2775.5,-23886.2382 2742.9319,-23849.7338 2737.918,-23790.063 2738.1058,-23755.0733"/>
<polygon fill="#000000" stroke="#000000" points="2741.6053,-23755.1278 2738.3064,-23745.0597 2734.6067,-23754.9876 2741.6053,-23755.1278"/>
</g>
<!-- leaf_71 -->
<g id="node72" class="node">
<title>leaf_71</title>
<polygon fill="none" stroke="#c0c0c0" points="2838.5,-23745.0379 2784.5,-23745.0379 2784.5,-23709.0379 2838.5,-23709.0379 2838.5,-23745.0379"/>
</g>
<!-- prespace_64&#45;&gt;leaf_71 -->
<g id="edge71" class="edge">
<title>prespace_64&#45;&gt;leaf_71</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3011.1796,-24517.3997C3030.7782,-24437.4137 3098.6277,-24110.4452 2951.5,-23922.2382 2921.3754,-23883.7025 2880.1176,-23922.6879 2847.5,-23886.2382 2814.8773,-23849.7827 2809.8823,-23790.0948 2810.0884,-23755.0888"/>
<polygon fill="#000000" stroke="#000000" points="2813.588,-23755.1402 2810.2945,-23745.0703 2806.5895,-23754.9962 2813.588,-23755.1402"/>
</g>
<!-- leaf_72 -->
<g id="node73" class="node">
<title>leaf_72</title>
<polygon fill="none" stroke="#c0c0c0" points="2928.5,-23745.0379 2856.5,-23745.0379 2856.5,-23709.0379 2928.5,-23709.0379 2928.5,-23745.0379"/>
<text text-anchor="middle" x="2892.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse</text>
</g>
<!-- literal_65&#45;&gt;leaf_72 -->
<g id="edge72" class="edge">
<title>literal_65&#45;&gt;leaf_72</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3103.9632,-24517.2476C3110.9358,-24425.7571 3137.4115,-24016.5923 3061.5,-23922.2382 3025.5272,-23877.5258 2977.9347,-23926.9601 2937.5,-23886.2382 2902.4703,-23850.9596 2894.2382,-23790.6056 2892.5801,-23755.2141"/>
<polygon fill="#000000" stroke="#000000" points="2896.0742,-23754.9695 2892.2542,-23745.0873 2889.0778,-23755.1947 2896.0742,-23754.9695"/>
</g>
<!-- leaf_73 -->
<g id="node74" class="node">
<title>leaf_73</title>
<polygon fill="none" stroke="#c0c0c0" points="3410.5,-23745.0379 2946.5,-23745.0379 2946.5,-23709.0379 3410.5,-23709.0379 3410.5,-23745.0379"/>
<text text-anchor="middle" x="3178.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> is what it says on the label, and we&#39;re lifting it wholesale as</text>
</g>
<!-- raw_66&#45;&gt;leaf_73 -->
<g id="edge73" class="edge">
<title>raw_66&#45;&gt;leaf_73</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3178.5,-24517.4213C3178.5,-24412.8393 3178.5,-23884.0356 3178.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3182.0001,-23755.0994 3178.5,-23745.0994 3175.0001,-23755.0995 3182.0001,-23755.0994"/>
</g>
<!-- leaf_74 -->
<g id="node75" class="node">
<title>leaf_74</title>
<polygon fill="none" stroke="#c0c0c0" points="3482.5,-23745.0379 3428.5,-23745.0379 3428.5,-23709.0379 3482.5,-23709.0379 3482.5,-23745.0379"/>
</g>
<!-- prespace_67&#45;&gt;leaf_74 -->
<g id="edge74" class="edge">
<title>prespace_67&#45;&gt;leaf_74</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3364.5728,-24517.4213C3376.6041,-24412.8393 3437.4387,-23884.0356 3452.247,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3455.7563,-23755.434 3453.4222,-23745.0994 3448.8021,-23754.6339 3455.7563,-23755.434"/>
</g>
<!-- leaf_75 -->
<g id="node76" class="node">
<title>leaf_75</title>
<polygon fill="none" stroke="#c0c0c0" points="3628.5,-23745.0379 3500.5,-23745.0379 3500.5,-23709.0379 3628.5,-23709.0379 3628.5,-23745.0379"/>
<text text-anchor="middle" x="3564.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_68&#45;&gt;leaf_75 -->
<g id="edge75" class="edge">
<title>literal_68&#45;&gt;leaf_75</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3512.6813,-24517.4213C3519.5378,-24412.8393 3554.207,-23884.0356 3562.6461,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3566.1541,-23755.307 3563.3159,-23745.0994 3559.1691,-23754.849 3566.1541,-23755.307"/>
</g>
<!-- leaf_76 -->
<g id="node77" class="node">
<title>leaf_76</title>
<polygon fill="none" stroke="#c0c0c0" points="3796,-23746.94 3647,-23746.94 3647,-23707.1358 3796,-23707.1358 3796,-23746.94"/>
<text text-anchor="middle" x="3721.5" y="-23731.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">, at least for now.</text>
</g>
<!-- raw_69&#45;&gt;leaf_76 -->
<g id="edge76" class="edge">
<title>raw_69&#45;&gt;leaf_76</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3655.9933,-24517.4213C3664.6228,-24413.3007 3708.1021,-23888.6931 3719.0133,-23757.0414"/>
<polygon fill="#000000" stroke="#000000" points="3722.5168,-23757.1429 3719.8548,-23746.888 3715.5407,-23756.5647 3722.5168,-23757.1429"/>
</g>
<!-- leaf_81 -->
<g id="node82" class="node">
<title>leaf_81</title>
<polygon fill="none" stroke="#c0c0c0" points="3907,-23745.0379 3814,-23745.0379 3814,-23709.0379 3907,-23709.0379 3907,-23745.0379"/>
<text text-anchor="middle" x="3860.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">*** License</text>
</g>
<!-- header_77&#45;&gt;leaf_81 -->
<g id="edge81" class="edge">
<title>header_77&#45;&gt;leaf_81</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3946.5386,-24517.4213C3935.1541,-24412.8393 3877.5903,-23884.0356 3863.5781,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3867.0278,-23754.6619 3862.4661,-23745.0994 3860.0689,-23755.4195 3867.0278,-23754.6619"/>
</g>
<!-- raw_82 -->
<g id="node83" class="node">
<title>raw_82</title>
<ellipse fill="none" stroke="#000000" cx="3952.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="3952.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_78&#45;&gt;raw_82 -->
<g id="edge82" class="edge">
<title>prose_78&#45;&gt;raw_82</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4174.5358,-24517.5123C4161.733,-24442.4508 4107.4038,-24146.9002 4010.5,-23922.2382 4003.0734,-23905.0204 3995.5503,-23903.6134 3988.5,-23886.2382 3970.6954,-23842.3595 3960.7955,-23787.9294 3956.0671,-23755.4204"/>
<polygon fill="#000000" stroke="#000000" points="3959.5015,-23754.7057 3954.6578,-23745.2829 3952.5681,-23755.6696 3959.5015,-23754.7057"/>
</g>
<!-- prespace_83 -->
<g id="node84" class="node">
<title>prespace_83</title>
<ellipse fill="none" stroke="#000000" cx="4043.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="4043.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_78&#45;&gt;prespace_83 -->
<g id="edge83" class="edge">
<title>prose_78&#45;&gt;prespace_83</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4174.5133,-24517.4213C4157.1779,-24412.8393 4069.5238,-23884.0356 4048.1871,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4051.5821,-23754.3925 4046.4939,-23745.0994 4044.6763,-23755.5372 4051.5821,-23754.3925"/>
</g>
<!-- literal_84 -->
<g id="node85" class="node">
<title>literal_84</title>
<ellipse fill="none" stroke="#000000" cx="4139.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="4139.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_78&#45;&gt;literal_84 -->
<g id="edge84" class="edge">
<title>prose_78&#45;&gt;literal_84</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4176.653,-24517.4213C4171.737,-24412.8393 4146.8799,-23884.0356 4140.8292,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4144.3148,-23754.924 4140.349,-23745.0994 4137.3225,-23755.2528 4144.3148,-23754.924"/>
</g>
<!-- raw_85 -->
<g id="node86" class="node">
<title>raw_85</title>
<ellipse fill="none" stroke="#000000" cx="4215.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4215.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_78&#45;&gt;raw_85 -->
<g id="edge85" class="edge">
<title>prose_78&#45;&gt;raw_85</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4178.347,-24517.4213C4183.263,-24412.8393 4208.1201,-23884.0356 4214.1708,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4217.6775,-23755.2528 4214.651,-23745.0994 4210.6852,-23754.924 4217.6775,-23755.2528"/>
</g>
<!-- link_86 -->
<g id="node87" class="node">
<title>link_86</title>
<ellipse fill="none" stroke="#000000" cx="4287.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4287.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">link</text>
</g>
<!-- prose_78&#45;&gt;link_86 -->
<g id="edge86" class="edge">
<title>prose_78&#45;&gt;link_86</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4179.9517,-24517.4213C4194.1823,-24412.8393 4266.1372,-23884.0356 4283.6524,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4287.162,-23755.4801 4285.0424,-23745.0994 4280.2259,-23754.5362 4287.162,-23755.4801"/>
</g>
<!-- raw_87 -->
<g id="node88" class="node">
<title>raw_87</title>
<ellipse fill="none" stroke="#000000" cx="4359.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4359.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_78&#45;&gt;raw_87 -->
<g id="edge87" class="edge">
<title>prose_78&#45;&gt;raw_87</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4181.5565,-24517.4213C4205.1253,-24412.7342 4324.3936,-23882.9722 4353.221,-23754.9276"/>
<polygon fill="#000000" stroke="#000000" points="4356.6518,-23755.624 4355.4337,-23745.0994 4349.8227,-23754.0865 4356.6518,-23755.624"/>
</g>
<!-- leaf_97 -->
<g id="node98" class="node">
<title>leaf_97</title>
<polygon fill="none" stroke="#c0c0c0" points="5002,-23886.4387 4405,-23886.4387 4405,-23567.6372 5002,-23567.6372 5002,-23886.4387"/>
<text text-anchor="middle" x="4703.5" y="-23871.0382" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The MIT License (MIT)</text>
<text text-anchor="middle" x="4703.5" y="-23839.6381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Copyright (c) 2013 &#45; 2018 Peter Melnichenko</text>
<text text-anchor="middle" x="4703.5" y="-23808.2381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Permission is hereby granted, free of charge, to any person obtaining a copy of</text>
<text text-anchor="middle" x="4703.5" y="-23792.8381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; this software and associated documentation files (the &quot;Software&quot;), to deal in</text>
<text text-anchor="middle" x="4703.5" y="-23777.438" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software without restriction, including without limitation the rights to</text>
<text text-anchor="middle" x="4703.5" y="-23762.038" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of</text>
<text text-anchor="middle" x="4703.5" y="-23746.638" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software, and to permit persons to whom the Software is furnished to do so,</text>
<text text-anchor="middle" x="4703.5" y="-23731.238" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; subject to the following conditions:</text>
<text text-anchor="middle" x="4703.5" y="-23699.8379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The above copyright notice and this permission notice shall be included in all</text>
<text text-anchor="middle" x="4703.5" y="-23684.4379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; copies or substantial portions of the Software.</text>
<text text-anchor="middle" x="4703.5" y="-23653.0379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</text>
<text text-anchor="middle" x="4703.5" y="-23637.6378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS</text>
<text text-anchor="middle" x="4703.5" y="-23622.2378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR</text>
<text text-anchor="middle" x="4703.5" y="-23606.8378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER</text>
<text text-anchor="middle" x="4703.5" y="-23591.4377" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN</text>
<text text-anchor="middle" x="4703.5" y="-23576.0377" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</text>
</g>
<!-- codeblock_79&#45;&gt;leaf_97 -->
<g id="edge97" class="edge">
<title>codeblock_79&#45;&gt;leaf_97</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4508.9354,-24517.4213C4528.8065,-24436.6987 4610.8925,-24103.2389 4661.8837,-23896.0967"/>
<polygon fill="#000000" stroke="#000000" points="4665.2961,-23896.8765 4664.2879,-23886.3298 4658.499,-23895.2033 4665.2961,-23896.8765"/>
</g>
<!-- header_98 -->
<g id="node99" class="node">
<title>header_98</title>
<ellipse fill="none" stroke="#000000" cx="5109.5" cy="-23727.0379" rx="90.0004" ry="18"/>
<text text-anchor="middle" x="5109.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">4 : argparse, proper.</text>
</g>
<!-- section_80&#45;&gt;header_98 -->
<g id="edge98" class="edge">
<title>section_80&#45;&gt;header_98</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5177.9398,-24517.4213C5168.884,-24412.8393 5123.0945,-23884.0356 5111.9485,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="5115.4137,-23754.7602 5111.064,-23745.0994 5108.4398,-23755.3641 5115.4137,-23754.7602"/>
</g>
<!-- prose_99 -->
<g id="node100" class="node">
<title>prose_99</title>
<ellipse fill="none" stroke="#000000" cx="5249.5" cy="-23727.0379" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="5249.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_80&#45;&gt;prose_99 -->
<g id="edge99" class="edge">
<title>section_80&#45;&gt;prose_99</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5181.0602,-24517.4213C5190.116,-24412.8393 5235.9055,-23884.0356 5247.0515,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="5250.5602,-23755.3641 5247.936,-23745.0994 5243.5863,-23754.7602 5250.5602,-23755.3641"/>
</g>
<!-- codeblock_100 -->
<g id="node101" class="node">
<title>codeblock_100</title>
<ellipse fill="none" stroke="#000000" cx="5387.5" cy="-23727.0379" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="5387.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 73&#45;1585</text>
</g>
<!-- section_80&#45;&gt;codeblock_100 -->
<g id="edge100" class="edge">
<title>section_80&#45;&gt;codeblock_100</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5184.136,-24517.4213C5211.0718,-24412.7342 5347.3784,-23882.9722 5380.324,-23754.9276"/>
<polygon fill="#000000" stroke="#000000" points="5383.7505,-23755.6562 5382.8528,-23745.0994 5376.9713,-23753.9118 5383.7505,-23755.6562"/>
</g>
<!-- leaf_88 -->
<g id="node89" class="node">
<title>leaf_88</title>
<polygon fill="none" stroke="#c0c0c0" points="3869.5,-11837.2192 3307.5,-11837.2192 3307.5,-11766.6185 3869.5,-11766.6185 3869.5,-11837.2192"/>
<text text-anchor="middle" x="3588.5" y="-11790.1189" font-family="Inconsolata" font-size="14.00" fill="#000000">This is lightly modified by wrapping it in an anonymous function and assigning</text>
<text text-anchor="middle" x="3588.5" y="-11774.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">it to</text>
</g>
<!-- raw_82&#45;&gt;leaf_88 -->
<g id="edge88" class="edge">
<title>raw_82&#45;&gt;leaf_88</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3951.5682,-23708.6478C3949.2993,-23677.6962 3941.5762,-23614.0507 3915.5,-23567.8377 3904.2248,-23547.8554 3887.6857,-23552.8625 3878.5,-23531.8377 1889.5643,-18979.4592 3426.9167,-12455.5027 3577.005,-11847.7291"/>
<polygon fill="#000000" stroke="#000000" points="3580.5067,-11848.1489 3579.5133,-11837.6007 3573.712,-11846.4661 3580.5067,-11848.1489"/>
</g>
<!-- leaf_89 -->
<g id="node90" class="node">
<title>leaf_89</title>
<polygon fill="none" stroke="#c0c0c0" points="3941.5,-11819.9188 3887.5,-11819.9188 3887.5,-11783.9188 3941.5,-11783.9188 3941.5,-11819.9188"/>
<text text-anchor="middle" x="3914.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_83&#45;&gt;leaf_89 -->
<g id="edge89" class="edge">
<title>prespace_83&#45;&gt;leaf_89</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4040.1739,-23708.8414C4033.9005,-23677.9021 4018.2039,-23613.9229 3988.5,-23567.8377 3975.8963,-23548.2831 3959.7253,-23553.1948 3950.5,-23531.8377 3825.0616,-23241.4385 3909.2542,-12458.9936 3914.2701,-11830.5093"/>
<polygon fill="#000000" stroke="#000000" points="3917.7733,-11830.112 3914.3535,-11820.0843 3910.7736,-11830.056 3917.7733,-11830.112"/>
</g>
<!-- leaf_90 -->
<g id="node91" class="node">
<title>leaf_90</title>
<polygon fill="none" stroke="#c0c0c0" points="4087.5,-11819.9188 3959.5,-11819.9188 3959.5,-11783.9188 4087.5,-11783.9188 4087.5,-11819.9188"/>
<text text-anchor="middle" x="4023.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_84&#45;&gt;leaf_90 -->
<g id="edge90" class="edge">
<title>literal_84&#45;&gt;leaf_90</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4134.2477,-23709.2192C4124.5018,-23675.1438 4103.9344,-23598.223 4096.5,-23531.8377 3955.8514,-22275.9142 4019.3245,-12427.1721 4023.3088,-11830.2326"/>
<polygon fill="#000000" stroke="#000000" points="4026.8107,-11829.953 4023.3778,-11819.9298 4019.8108,-11829.9061 4026.8107,-11829.953"/>
</g>
<!-- leaf_91 -->
<g id="node92" class="node">
<title>leaf_91</title>
<polygon fill="none" stroke="#c0c0c0" points="4325,-11819.9188 4106,-11819.9188 4106,-11783.9188 4325,-11783.9188 4325,-11819.9188"/>
<text text-anchor="middle" x="4215.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">, but is otherwise exactly as</text>
</g>
<!-- raw_85&#45;&gt;leaf_91 -->
<g id="edge91" class="edge">
<title>raw_85&#45;&gt;leaf_91</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4215.5,-23708.8742C4215.5,-23206.7435 4215.5,-12456.82 4215.5,-11830.4121"/>
<polygon fill="#000000" stroke="#000000" points="4219.0001,-11830.0218 4215.5,-11820.0218 4212.0001,-11830.0218 4219.0001,-11830.0218"/>
</g>
<!-- anchortext_92 -->
<g id="node93" class="node">
<title>anchortext_92</title>
<ellipse fill="none" stroke="#000000" cx="4394.5" cy="-11801.9188" rx="51.3018" ry="18"/>
<text text-anchor="middle" x="4394.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">anchortext</text>
</g>
<!-- link_86&#45;&gt;anchortext_92 -->
<g id="edge92" class="edge">
<title>link_86&#45;&gt;anchortext_92</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4291.3175,-23708.8245C4297.5994,-23679.1754 4310.6996,-23618.6739 4323.5,-23567.8377 4327.5547,-23551.7345 4331.2145,-23548.2854 4333.5,-23531.8377 4507.439,-22280.0979 4401.4148,-12427.4262 4394.8158,-11830.2441"/>
<polygon fill="#000000" stroke="#000000" points="4398.3123,-11829.8977 4394.7016,-11819.9372 4391.3127,-11829.9754 4398.3123,-11829.8977"/>
</g>
<!-- url_93 -->
<g id="node94" class="node">
<title>url_93</title>
<ellipse fill="none" stroke="#000000" cx="4490.5" cy="-11801.9188" rx="27" ry="18"/>
<text text-anchor="middle" x="4490.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">url</text>
</g>
<!-- link_86&#45;&gt;url_93 -->
<g id="edge93" class="edge">
<title>link_86&#45;&gt;url_93</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4286.0537,-23709.029C4284.476,-23676.3318 4286.1154,-23606.9749 4323.5,-23567.8377 4365.2068,-23524.1757 4417.8221,-23579.8018 4454.5,-23531.8377 4550.6248,-23406.1339 4493.9777,-12457.7559 4490.65,-11829.9889"/>
<polygon fill="#000000" stroke="#000000" points="4494.1499,-11829.95 4490.5968,-11819.9688 4487.15,-11829.9873 4494.1499,-11829.95"/>
</g>
<!-- leaf_96 -->
<g id="node97" class="node">
<title>leaf_96</title>
<polygon fill="none" stroke="#c0c0c0" points="4589.5,-11819.9188 4535.5,-11819.9188 4535.5,-11783.9188 4589.5,-11783.9188 4589.5,-11819.9188"/>
<text text-anchor="middle" x="4562.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">.</text>
</g>
<!-- raw_87&#45;&gt;leaf_96 -->
<g id="edge96" class="edge">
<title>raw_87&#45;&gt;leaf_96</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4358.0537,-23709.029C4356.476,-23676.3318 4358.1154,-23606.9749 4395.5,-23567.8377 4437.2068,-23524.1757 4489.8221,-23579.8018 4526.5,-23531.8377 5294.541,-22527.459 4606.2837,-12432.4722 4564.4631,-11830.0268"/>
<polygon fill="#000000" stroke="#000000" points="4567.9516,-11829.7393 4563.7662,-11820.0062 4560.9685,-11830.225 4567.9516,-11829.7393"/>
</g>
<!-- leaf_94 -->
<g id="node95" class="node">
<title>leaf_94</title>
<polygon fill="none" stroke="#c0c0c0" points="4321.5,-36 4235.5,-36 4235.5,0 4321.5,0 4321.5,-36"/>
<text text-anchor="middle" x="4278.5" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">found here</text>
</g>
<!-- anchortext_92&#45;&gt;leaf_94 -->
<g id="edge94" class="edge">
<title>anchortext_92&#45;&gt;leaf_94</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4394.603,-11783.7549C4397.451,-11277.7154 4457.4101,-365.1678 4333.5,-72 4328.8663,-61.0367 4320.8131,-51.173 4312.2759,-42.9682"/>
<polygon fill="#000000" stroke="#000000" points="4314.5056,-40.2666 4304.7227,-36.199 4309.8338,-45.4795 4314.5056,-40.2666"/>
</g>
<!-- leaf_95 -->
<g id="node96" class="node">
<title>leaf_95</title>
<polygon fill="none" stroke="#c0c0c0" points="4873.5,-36 4339.5,-36 4339.5,0 4873.5,0 4873.5,-36"/>
<text text-anchor="middle" x="4606.5" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">https://raw.githubusercontent.com/mpeterv/argparse/master/src/argparse.lua</text>
</g>
<!-- url_93&#45;&gt;leaf_95 -->
<g id="edge95" class="edge">
<title>url_93&#45;&gt;leaf_95</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4490.4376,-11783.891C4488.6946,-11276.1578 4451.5788,-212.4432 4526.5,-72 4533.1005,-59.6271 4543.9348,-49.5729 4555.5295,-41.6437"/>
<polygon fill="#000000" stroke="#000000" points="4557.4816,-44.5503 4564.057,-36.2428 4553.7361,-38.6366 4557.4816,-44.5503"/>
</g>
<!-- leaf_101 -->
<g id="node102" class="node">
<title>leaf_101</title>
<polygon fill="none" stroke="#c0c0c0" points="5072.5,-11819.9188 4902.5,-11819.9188 4902.5,-11783.9188 5072.5,-11783.9188 5072.5,-11819.9188"/>
<text text-anchor="middle" x="4987.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">**** argparse, proper.</text>
</g>
<!-- header_98&#45;&gt;leaf_101 -->
<g id="edge101" class="edge">
<title>header_98&#45;&gt;leaf_101</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5106.0515,-23708.8279C5099.7206,-23674.4112 5086.4412,-23597.3844 5081.5,-23531.8377 4704.6192,-18532.3818 4965.6772,-12300.6219 4986.2427,-11830.2603"/>
<polygon fill="#000000" stroke="#000000" points="4989.7536,-11830.0873 4986.6957,-11819.9433 4982.7603,-11829.7801 4989.7536,-11830.0873"/>
</g>
<!-- raw_102 -->
<g id="node103" class="node">
<title>raw_102</title>
<ellipse fill="none" stroke="#000000" cx="5117.5" cy="-11801.9188" rx="27" ry="18"/>
<text text-anchor="middle" x="5117.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_99&#45;&gt;raw_102 -->
<g id="edge102" class="edge">
<title>prose_99&#45;&gt;raw_102</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5248.9727,-23708.5401C5247.2122,-23676.8678 5239.7483,-23611.4563 5208.5,-23567.8377 5191.4858,-23544.088 5167.4334,-23557.5163 5153.5,-23531.8377 5078.0294,-23392.7492 5115.2068,-12456.9883 5117.4009,-11829.9559"/>
<polygon fill="#000000" stroke="#000000" points="5120.9009,-11829.9598 5117.4361,-11819.9475 5113.9009,-11829.9351 5120.9009,-11829.9598"/>
</g>
<!-- leaf_104 -->
<g id="node105" class="node">
<title>leaf_104</title>
<polygon fill="none" stroke="#c0c0c0" points="5998,-23531.7565 5163,-23531.7565 5163,-72.0812 5998,-72.0812 5998,-23531.7565"/>
<text text-anchor="middle" x="5580.5" y="-23516.6377" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse = (function()</text>
<text text-anchor="middle" x="5580.5" y="-23501.2376" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; skipping a level of indentation</text>
<text text-anchor="middle" x="5580.5" y="-23469.8376" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deep_update(t1, t2)</text>
<text text-anchor="middle" x="5580.5" y="-23454.4376" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for k, v in pairs(t2) do</text>
<text text-anchor="middle" x="5580.5" y="-23439.0375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(v) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-23423.6375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;v = deep_update({}, v)</text>
<text text-anchor="middle" x="5580.5" y="-23408.2375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-23376.8375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;t1[k] = v</text>
<text text-anchor="middle" x="5580.5" y="-23361.4374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-23330.0374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return t1</text>
<text text-anchor="middle" x="5580.5" y="-23314.6374" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-23283.2373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; A property is a tuple {name, callback}.</text>
<text text-anchor="middle" x="5580.5" y="-23267.8373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; properties.args is number of properties that can be set as arguments</text>
<text text-anchor="middle" x="5580.5" y="-23252.4373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; when calling an object.</text>
<text text-anchor="middle" x="5580.5" y="-23237.0372" font-family="Inconsolata" font-size="14.00" fill="#000000">local function class(prototype, properties, parent)</text>
<text text-anchor="middle" x="5580.5" y="-23221.6372" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Class is the metatable of its instances.</text>
<text text-anchor="middle" x="5580.5" y="-23206.2372" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local cl = {}</text>
<text text-anchor="middle" x="5580.5" y="-23190.8371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;cl.__index = cl</text>
<text text-anchor="middle" x="5580.5" y="-23159.4371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parent then</text>
<text text-anchor="middle" x="5580.5" y="-23144.0371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = deep_update(deep_update({}, parent.__prototype), prototype)</text>
<text text-anchor="middle" x="5580.5" y="-23128.637" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-23113.237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = prototype</text>
<text text-anchor="middle" x="5580.5" y="-23097.837" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-23066.437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if properties then</text>
<text text-anchor="middle" x="5580.5" y="-23051.0369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local names = {}</text>
<text text-anchor="middle" x="5580.5" y="-23019.6369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Create setter methods and fill set of property names.</text>
<text text-anchor="middle" x="5580.5" y="-23004.2369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, property in ipairs(properties) do</text>
<text text-anchor="middle" x="5580.5" y="-22988.8368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name, callback = property[1], property[2]</text>
<text text-anchor="middle" x="5580.5" y="-22957.4368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cl[name] = function(self, value)</text>
<text text-anchor="middle" x="5580.5" y="-22942.0368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not callback(self, value) then</text>
<text text-anchor="middle" x="5580.5" y="-22926.6367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[&quot;_&quot; .. name] = value</text>
<text text-anchor="middle" x="5580.5" y="-22911.2367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22879.8367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-22864.4366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22833.0366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;names[name] = true</text>
<text text-anchor="middle" x="5580.5" y="-22817.6366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22786.2365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;function cl.__call(self, ...)</text>
<text text-anchor="middle" x="5580.5" y="-22770.8365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; When calling an object, if the first argument is a table,</text>
<text text-anchor="middle" x="5580.5" y="-22755.4365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; interpret keys as property names, else delegate arguments</text>
<text text-anchor="middle" x="5580.5" y="-22740.0365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; to corresponding setters in order.</text>
<text text-anchor="middle" x="5580.5" y="-22724.6364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if type((...)) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-22709.2364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name, value in pairs((...)) do</text>
<text text-anchor="middle" x="5580.5" y="-22693.8364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if names[name] then</text>
<text text-anchor="middle" x="5580.5" y="-22678.4363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[name](self, value)</text>
<text text-anchor="middle" x="5580.5" y="-22663.0363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22647.6363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22632.2362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-22616.8362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local nargs = select(&quot;#&quot;, ...)</text>
<text text-anchor="middle" x="5580.5" y="-22585.4362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i, property in ipairs(properties) do</text>
<text text-anchor="middle" x="5580.5" y="-22570.0361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i &gt; nargs or i &gt; properties.args then</text>
<text text-anchor="middle" x="5580.5" y="-22554.6361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-22539.2361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22507.836" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local arg = select(i, ...)</text>
<text text-anchor="middle" x="5580.5" y="-22476.436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg ~= nil then</text>
<text text-anchor="middle" x="5580.5" y="-22461.036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[property[1]](self, arg)</text>
<text text-anchor="middle" x="5580.5" y="-22445.636" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22430.2359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22414.8359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22383.4359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-22368.0358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22352.6358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22321.2358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If indexing class fails, fallback to its parent.</text>
<text text-anchor="middle" x="5580.5" y="-22305.8357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local class_metatable = {}</text>
<text text-anchor="middle" x="5580.5" y="-22290.4357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;class_metatable.__index = parent</text>
<text text-anchor="middle" x="5580.5" y="-22259.0357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;function class_metatable.__call(self, ...)</text>
<text text-anchor="middle" x="5580.5" y="-22243.6356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Calling a class returns its instance.</text>
<text text-anchor="middle" x="5580.5" y="-22228.2356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Arguments are delegated to the instance.</text>
<text text-anchor="middle" x="5580.5" y="-22212.8356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local object = deep_update({}, self.__prototype)</text>
<text text-anchor="middle" x="5580.5" y="-22197.4355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(object, self)</text>
<text text-anchor="middle" x="5580.5" y="-22182.0355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return object(...)</text>
<text text-anchor="middle" x="5580.5" y="-22166.6355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22135.2355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return setmetatable(cl, class_metatable)</text>
<text text-anchor="middle" x="5580.5" y="-22119.8354" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-22088.4354" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typecheck(name, types, value)</text>
<text text-anchor="middle" x="5580.5" y="-22073.0354" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, type_ in ipairs(types) do</text>
<text text-anchor="middle" x="5580.5" y="-22057.6353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(value) == type_ then</text>
<text text-anchor="middle" x="5580.5" y="-22042.2353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="5580.5" y="-22026.8353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-22011.4352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21980.0352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;error((&quot;bad property &#39;%s&#39; (%s expected, got %s)&quot;):format(name, table.concat(types, &quot; or &quot;), type(value)))</text>
<text text-anchor="middle" x="5580.5" y="-21964.6352" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-21933.2351" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typechecked(name, ...)</text>
<text text-anchor="middle" x="5580.5" y="-21917.8351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {...}</text>
<text text-anchor="middle" x="5580.5" y="-21902.4351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(_, value) typecheck(name, types, value) end}</text>
<text text-anchor="middle" x="5580.5" y="-21887.035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-21855.635" font-family="Inconsolata" font-size="14.00" fill="#000000">local multiname = {&quot;name&quot;, function(self, value)</text>
<text text-anchor="middle" x="5580.5" y="-21840.235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;name&quot;, {&quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5580.5" y="-21808.835" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for alias in value:gmatch(&quot;%S+&quot;) do</text>
<text text-anchor="middle" x="5580.5" y="-21793.4349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._name = self._name or alias</text>
<text text-anchor="middle" x="5580.5" y="-21778.0349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._aliases, alias)</text>
<text text-anchor="middle" x="5580.5" y="-21762.6349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21731.2348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Do not set _name as with other properties.</text>
<text text-anchor="middle" x="5580.5" y="-21715.8348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return true</text>
<text text-anchor="middle" x="5580.5" y="-21700.4348" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5580.5" y="-21669.0347" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse_boundaries(str)</text>
<text text-anchor="middle" x="5580.5" y="-21653.6347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if tonumber(str) then</text>
<text text-anchor="middle" x="5580.5" y="-21638.2347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(str), tonumber(str)</text>
<text text-anchor="middle" x="5580.5" y="-21622.8346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21591.4346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;*&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-21576.0346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, math.huge</text>
<text text-anchor="middle" x="5580.5" y="-21560.6345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21529.2345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;+&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-21513.8345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 1, math.huge</text>
<text text-anchor="middle" x="5580.5" y="-21498.4345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21467.0344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;?&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-21451.6344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, 1</text>
<text text-anchor="middle" x="5580.5" y="-21436.2344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21404.8343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%&#45;%d+$&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-21389.4343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = str:match &quot;^(%d+)%&#45;(%d+)$&quot;</text>
<text text-anchor="middle" x="5580.5" y="-21374.0343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), tonumber(max)</text>
<text text-anchor="middle" x="5580.5" y="-21358.6342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21327.2342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%+$&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-21311.8342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min = str:match &quot;^(%d+)%+$&quot;</text>
<text text-anchor="middle" x="5580.5" y="-21296.4341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), math.huge</text>
<text text-anchor="middle" x="5580.5" y="-21281.0341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21265.6341" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-21234.234" font-family="Inconsolata" font-size="14.00" fill="#000000">local function boundaries(name)</text>
<text text-anchor="middle" x="5580.5" y="-21218.834" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(self, value)</text>
<text text-anchor="middle" x="5580.5" y="-21203.434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;typecheck(name, {&quot;number&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5580.5" y="-21172.034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = parse_boundaries(value)</text>
<text text-anchor="middle" x="5580.5" y="-21140.6339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not min then</text>
<text text-anchor="middle" x="5580.5" y="-21125.2339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error((&quot;bad property &#39;%s&#39;&quot;):format(name))</text>
<text text-anchor="middle" x="5580.5" y="-21109.8339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-21078.4338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self[&quot;_min&quot; .. name], self[&quot;_max&quot; .. name] = min, max</text>
<text text-anchor="middle" x="5580.5" y="-21063.0338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end}</text>
<text text-anchor="middle" x="5580.5" y="-21047.6338" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-21016.2337" font-family="Inconsolata" font-size="14.00" fill="#000000">local actions = {}</text>
<text text-anchor="middle" x="5580.5" y="-20984.8337" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_action = {&quot;action&quot;, function(_, value)</text>
<text text-anchor="middle" x="5580.5" y="-20969.4337" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;action&quot;, {&quot;function&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5580.5" y="-20938.0336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) == &quot;string&quot; and not actions[value] then</text>
<text text-anchor="middle" x="5580.5" y="-20922.6336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error((&quot;unknown action &#39;%s&#39;&quot;):format(value))</text>
<text text-anchor="middle" x="5580.5" y="-20907.2336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20891.8335" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5580.5" y="-20860.4335" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_init = {&quot;init&quot;, function(self)</text>
<text text-anchor="middle" x="5580.5" y="-20845.0335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="5580.5" y="-20829.6335" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5580.5" y="-20798.2334" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_default = {&quot;default&quot;, function(self, value)</text>
<text text-anchor="middle" x="5580.5" y="-20782.8334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) ~= &quot;string&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-20767.4334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._init = value</text>
<text text-anchor="middle" x="5580.5" y="-20752.0333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="5580.5" y="-20736.6333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="5580.5" y="-20721.2333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20705.8332" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5580.5" y="-20674.4332" font-family="Inconsolata" font-size="14.00" fill="#000000">local add_help = {&quot;add_help&quot;, function(self, value)</text>
<text text-anchor="middle" x="5580.5" y="-20659.0332" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;add_help&quot;, {&quot;boolean&quot;, &quot;string&quot;, &quot;table&quot;}, value)</text>
<text text-anchor="middle" x="5580.5" y="-20627.6331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_help then</text>
<text text-anchor="middle" x="5580.5" y="-20612.2331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(self._options)</text>
<text text-anchor="middle" x="5580.5" y="-20596.8331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_help = false</text>
<text text-anchor="middle" x="5580.5" y="-20581.4331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20550.033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="5580.5" y="-20534.633" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local help = self:flag()</text>
<text text-anchor="middle" x="5580.5" y="-20519.233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:description &quot;Show this help message and exit.&quot;</text>
<text text-anchor="middle" x="5580.5" y="-20503.8329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:action(function()</text>
<text text-anchor="middle" x="5580.5" y="-20488.4329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;print(self:get_help())</text>
<text text-anchor="middle" x="5580.5" y="-20473.0329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="5580.5" y="-20457.6328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="5580.5" y="-20426.2328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= true then</text>
<text text-anchor="middle" x="5580.5" y="-20410.8328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help = help(value)</text>
<text text-anchor="middle" x="5580.5" y="-20395.4327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20364.0327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not help._name then</text>
<text text-anchor="middle" x="5580.5" y="-20348.6327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help &quot;&#45;h&quot; &quot;&#45;&#45;help&quot;</text>
<text text-anchor="middle" x="5580.5" y="-20333.2326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20301.8326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_help = true</text>
<text text-anchor="middle" x="5580.5" y="-20286.4326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-20271.0326" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5580.5" y="-20239.6325" font-family="Inconsolata" font-size="14.00" fill="#000000">local Parser = class({</text>
<text text-anchor="middle" x="5580.5" y="-20224.2325" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_arguments = {},</text>
<text text-anchor="middle" x="5580.5" y="-20208.8325" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_options = {},</text>
<text text-anchor="middle" x="5580.5" y="-20193.4324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_commands = {},</text>
<text text-anchor="middle" x="5580.5" y="-20178.0324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mutexes = {},</text>
<text text-anchor="middle" x="5580.5" y="-20162.6324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_groups = {},</text>
<text text-anchor="middle" x="5580.5" y="-20147.2323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_require_command = true,</text>
<text text-anchor="middle" x="5580.5" y="-20131.8323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_handle_options = true</text>
<text text-anchor="middle" x="5580.5" y="-20116.4323" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5580.5" y="-20101.0322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="5580.5" y="-20085.6322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-20070.2322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-20054.8321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-20039.4321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-20024.0321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-20008.6321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19993.232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19977.832" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19962.432" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19947.0319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19931.6319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19916.2319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19900.8318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19885.4318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19870.0318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19854.6317" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="5580.5" y="-19839.2317" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5580.5" y="-19807.8317" font-family="Inconsolata" font-size="14.00" fill="#000000">local Command = class({</text>
<text text-anchor="middle" x="5580.5" y="-19792.4316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {}</text>
<text text-anchor="middle" x="5580.5" y="-19777.0316" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5580.5" y="-19761.6316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="5580.5" y="-19746.2316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="5580.5" y="-19730.8315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19715.4315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19700.0315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19684.6314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19669.2314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19653.8314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19638.4313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19623.0313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19607.6313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19592.2312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19576.8312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19561.4312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19546.0311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19530.6311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19515.2311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19499.8311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19484.431" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="5580.5" y="-19469.031" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Parser)</text>
<text text-anchor="middle" x="5580.5" y="-19437.631" font-family="Inconsolata" font-size="14.00" fill="#000000">local Argument = class({</text>
<text text-anchor="middle" x="5580.5" y="-19422.2309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_minargs = 1,</text>
<text text-anchor="middle" x="5580.5" y="-19406.8309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxargs = 1,</text>
<text text-anchor="middle" x="5580.5" y="-19391.4309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 1,</text>
<text text-anchor="middle" x="5580.5" y="-19376.0308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxcount = 1,</text>
<text text-anchor="middle" x="5580.5" y="-19360.6308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_defmode = &quot;unused&quot;,</text>
<text text-anchor="middle" x="5580.5" y="-19345.2308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_show_default = true</text>
<text text-anchor="middle" x="5580.5" y="-19329.8307" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5580.5" y="-19314.4307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 5,</text>
<text text-anchor="middle" x="5580.5" y="-19299.0307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19283.6306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19268.2306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="5580.5" y="-19252.8306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19237.4306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19222.0305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19206.6305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19191.2305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19175.8304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19160.4304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-19145.0304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="5580.5" y="-19129.6303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="5580.5" y="-19114.2303" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5580.5" y="-19082.8303" font-family="Inconsolata" font-size="14.00" fill="#000000">local Option = class({</text>
<text text-anchor="middle" x="5580.5" y="-19067.4302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {},</text>
<text text-anchor="middle" x="5580.5" y="-19052.0302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 0,</text>
<text text-anchor="middle" x="5580.5" y="-19036.6302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_overwrite = true</text>
<text text-anchor="middle" x="5580.5" y="-19021.2301" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5580.5" y="-19005.8301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 6,</text>
<text text-anchor="middle" x="5580.5" y="-18990.4301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="5580.5" y="-18975.0301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18959.63" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="5580.5" y="-18944.23" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18928.83" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18913.4299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;count&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18898.0299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18882.6299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18867.2298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18851.8298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;overwrite&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18836.4298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18821.0297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5580.5" y="-18805.6297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="5580.5" y="-18790.2297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="5580.5" y="-18774.8296" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Argument)</text>
<text text-anchor="middle" x="5580.5" y="-18743.4296" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_inherit_property(name, default)</text>
<text text-anchor="middle" x="5580.5" y="-18728.0296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local element = self</text>
<text text-anchor="middle" x="5580.5" y="-18696.6296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="5580.5" y="-18681.2295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local value = element[&quot;_&quot; .. name]</text>
<text text-anchor="middle" x="5580.5" y="-18649.8295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= nil then</text>
<text text-anchor="middle" x="5580.5" y="-18634.4295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return value</text>
<text text-anchor="middle" x="5580.5" y="-18619.0294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18587.6294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._parent then</text>
<text text-anchor="middle" x="5580.5" y="-18572.2294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return default</text>
<text text-anchor="middle" x="5580.5" y="-18556.8293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18525.4293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;element = element._parent</text>
<text text-anchor="middle" x="5580.5" y="-18510.0293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18494.6292" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-18463.2292" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argument_list()</text>
<text text-anchor="middle" x="5580.5" y="-18447.8292" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="5580.5" y="-18432.4291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local i = 1</text>
<text text-anchor="middle" x="5580.5" y="-18401.0291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._minargs, 3) do</text>
<text text-anchor="middle" x="5580.5" y="-18385.6291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argname = self:_get_argname(i)</text>
<text text-anchor="middle" x="5580.5" y="-18354.2291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._default and self._defmode:find &quot;a&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-18338.829" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argname = &quot;[&quot; .. argname .. &quot;]&quot;</text>
<text text-anchor="middle" x="5580.5" y="-18323.429" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18292.029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, argname)</text>
<text text-anchor="middle" x="5580.5" y="-18276.6289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="5580.5" y="-18261.2289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18229.8289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._maxargs, 3) do</text>
<text text-anchor="middle" x="5580.5" y="-18214.4288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;[&quot; .. self:_get_argname(i) .. &quot;]&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-18199.0288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="5580.5" y="-18167.6288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == math.huge then</text>
<text text-anchor="middle" x="5580.5" y="-18152.2287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-18136.8287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18121.4287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18090.0286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if i &lt; self._maxargs then</text>
<text text-anchor="middle" x="5580.5" y="-18074.6286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;...&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-18059.2286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-18027.8286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return buf</text>
<text text-anchor="middle" x="5580.5" y="-18012.4285" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17981.0285" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_usage()</text>
<text text-anchor="middle" x="5580.5" y="-17965.6285" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = table.concat(self:_get_argument_list(), &quot; &quot;)</text>
<text text-anchor="middle" x="5580.5" y="-17934.2284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._defmode:find &quot;u&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-17918.8284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs &gt; 1 or (self._minargs == 1 and not self._defmode:find &quot;a&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-17903.4284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="5580.5" y="-17888.0283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17872.6283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17841.2283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="5580.5" y="-17825.8282" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17794.4282" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_true(result, target)</text>
<text text-anchor="middle" x="5580.5" y="-17779.0282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = true</text>
<text text-anchor="middle" x="5580.5" y="-17763.6282" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17732.2281" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_false(result, target)</text>
<text text-anchor="middle" x="5580.5" y="-17716.8281" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = false</text>
<text text-anchor="middle" x="5580.5" y="-17701.4281" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17670.028" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store(result, target, argument)</text>
<text text-anchor="middle" x="5580.5" y="-17654.628" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = argument</text>
<text text-anchor="middle" x="5580.5" y="-17639.228" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17607.8279" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.count(result, target, _, overwrite)</text>
<text text-anchor="middle" x="5580.5" y="-17592.4279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not overwrite then</text>
<text text-anchor="middle" x="5580.5" y="-17577.0279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result[target] = result[target] + 1</text>
<text text-anchor="middle" x="5580.5" y="-17561.6278" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17546.2278" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17514.8278" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.append(result, target, argument, overwrite)</text>
<text text-anchor="middle" x="5580.5" y="-17499.4277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="5580.5" y="-17484.0277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="5580.5" y="-17452.6277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="5580.5" y="-17437.2277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(result[target], 1)</text>
<text text-anchor="middle" x="5580.5" y="-17421.8276" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17406.4276" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17375.0276" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.concat(result, target, arguments, overwrite)</text>
<text text-anchor="middle" x="5580.5" y="-17359.6275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="5580.5" y="-17344.2275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(&quot;&#39;concat&#39; action can&#39;t handle too many invocations&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-17328.8275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17297.4274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="5580.5" y="-17266.0274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(arguments) do</text>
<text text-anchor="middle" x="5580.5" y="-17250.6274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="5580.5" y="-17235.2273" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17219.8273" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-17188.4273" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_action()</text>
<text text-anchor="middle" x="5580.5" y="-17173.0272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local action, init</text>
<text text-anchor="middle" x="5580.5" y="-17141.6272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._maxcount == 1 then</text>
<text text-anchor="middle" x="5580.5" y="-17126.2272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-17110.8272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store_true&quot;, nil</text>
<text text-anchor="middle" x="5580.5" y="-17095.4271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-17080.0271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store&quot;, nil</text>
<text text-anchor="middle" x="5580.5" y="-17064.6271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-17049.227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-17033.827" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-17018.427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;count&quot;, 0</text>
<text text-anchor="middle" x="5580.5" y="-17003.0269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-16987.6269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;append&quot;, {}</text>
<text text-anchor="middle" x="5580.5" y="-16972.2269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16956.8268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16925.4268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._action then</text>
<text text-anchor="middle" x="5580.5" y="-16910.0268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = self._action</text>
<text text-anchor="middle" x="5580.5" y="-16894.6267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16863.2267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_init then</text>
<text text-anchor="middle" x="5580.5" y="-16847.8267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;init = self._init</text>
<text text-anchor="middle" x="5580.5" y="-16832.4267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16801.0266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(action) == &quot;string&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-16785.6266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = actions[action]</text>
<text text-anchor="middle" x="5580.5" y="-16770.2266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16738.8265" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return action, init</text>
<text text-anchor="middle" x="5580.5" y="-16723.4265" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-16692.0265" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns placeholder for `narg`&#45;th argument.</text>
<text text-anchor="middle" x="5580.5" y="-16676.6264" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argname(narg)</text>
<text text-anchor="middle" x="5580.5" y="-16661.2264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argname = self._argname or self:_get_default_argname()</text>
<text text-anchor="middle" x="5580.5" y="-16629.8264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(argname) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-16614.4263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname[narg]</text>
<text text-anchor="middle" x="5580.5" y="-16599.0263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-16583.6263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname</text>
<text text-anchor="middle" x="5580.5" y="-16568.2262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16552.8262" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-16521.4262" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_argname()</text>
<text text-anchor="middle" x="5580.5" y="-16506.0262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return &quot;&lt;&quot; .. self._name .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-16490.6261" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-16459.2261" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_argname()</text>
<text text-anchor="middle" x="5580.5" y="-16443.8261" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return &quot;&lt;&quot; .. self:_get_default_target() .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-16428.426" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-16397.026" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns labels to be shown in the help message.</text>
<text text-anchor="middle" x="5580.5" y="-16381.626" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_label_lines()</text>
<text text-anchor="middle" x="5580.5" y="-16366.2259" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {self._name}</text>
<text text-anchor="middle" x="5580.5" y="-16350.8259" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-16319.4259" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_label_lines()</text>
<text text-anchor="middle" x="5580.5" y="-16304.0258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list = self:_get_argument_list()</text>
<text text-anchor="middle" x="5580.5" y="-16272.6258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #argument_list == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-16257.2258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Don&#39;t put aliases for simple flags like `&#45;h` on different lines.</text>
<text text-anchor="middle" x="5580.5" y="-16241.8257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="5580.5" y="-16226.4257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16195.0257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local longest_alias_length = &#45;1</text>
<text text-anchor="middle" x="5580.5" y="-16163.6257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-16148.2256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;longest_alias_length = math.max(longest_alias_length, #alias)</text>
<text text-anchor="middle" x="5580.5" y="-16132.8256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-16101.4256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list_repr = table.concat(argument_list, &quot; &quot;)</text>
<text text-anchor="middle" x="5580.5" y="-16086.0255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="5580.5" y="-16054.6255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-16039.2255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = (&quot; &quot;):rep(longest_alias_length &#45; #alias) .. alias .. &quot; &quot; .. argument_list_repr</text>
<text text-anchor="middle" x="5580.5" y="-16007.8254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if i ~= #self._aliases then</text>
<text text-anchor="middle" x="5580.5" y="-15992.4254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. &quot;,&quot;</text>
<text text-anchor="middle" x="5580.5" y="-15977.0254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15945.6253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="5580.5" y="-15930.2253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15898.8253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="5580.5" y="-15883.4252" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15852.0252" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_label_lines()</text>
<text text-anchor="middle" x="5580.5" y="-15836.6252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="5580.5" y="-15821.2252" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15789.8251" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_description()</text>
<text text-anchor="middle" x="5580.5" y="-15774.4251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._show_default then</text>
<text text-anchor="middle" x="5580.5" y="-15759.0251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._description then</text>
<text text-anchor="middle" x="5580.5" y="-15743.625" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;%s (default: %s)&quot;):format(self._description, self._default)</text>
<text text-anchor="middle" x="5580.5" y="-15728.225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-15712.825" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;default: %s&quot;):format(self._default)</text>
<text text-anchor="middle" x="5580.5" y="-15697.4249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15682.0249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-15666.6249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._description or &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-15651.2248" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15635.8248" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15604.4248" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_description()</text>
<text text-anchor="middle" x="5580.5" y="-15589.0247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._description or &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-15573.6247" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15542.2247" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_usage()</text>
<text text-anchor="middle" x="5580.5" y="-15526.8247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = self:_get_argument_list()</text>
<text text-anchor="middle" x="5580.5" y="-15511.4246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(usage, 1, self._name)</text>
<text text-anchor="middle" x="5580.5" y="-15496.0246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;usage = table.concat(usage, &quot; &quot;)</text>
<text text-anchor="middle" x="5580.5" y="-15464.6246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._mincount == 0 or self._default then</text>
<text text-anchor="middle" x="5580.5" y="-15449.2245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="5580.5" y="-15433.8245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15402.4245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="5580.5" y="-15387.0244" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15355.6244" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_target()</text>
<text text-anchor="middle" x="5580.5" y="-15340.2244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._name</text>
<text text-anchor="middle" x="5580.5" y="-15324.8243" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15293.4243" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_target()</text>
<text text-anchor="middle" x="5580.5" y="-15278.0243" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res</text>
<text text-anchor="middle" x="5580.5" y="-15246.6242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-15231.2242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if alias:sub(1, 1) == alias:sub(2, 2) then</text>
<text text-anchor="middle" x="5580.5" y="-15215.8242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res = alias:sub(3)</text>
<text text-anchor="middle" x="5580.5" y="-15200.4242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-15185.0241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15169.6241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-15138.2241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;res = res or self._name:sub(2)</text>
<text text-anchor="middle" x="5580.5" y="-15122.824" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return (res:gsub(&quot;&#45;&quot;, &quot;_&quot;))</text>
<text text-anchor="middle" x="5580.5" y="-15107.424" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15076.024" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_is_vararg()</text>
<text text-anchor="middle" x="5580.5" y="-15060.6239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._maxargs ~= self._minargs</text>
<text text-anchor="middle" x="5580.5" y="-15045.2239" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-15013.8239" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_fullname()</text>
<text text-anchor="middle" x="5580.5" y="-14998.4238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parent = self._parent</text>
<text text-anchor="middle" x="5580.5" y="-14983.0238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {self._name}</text>
<text text-anchor="middle" x="5580.5" y="-14951.6238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while parent do</text>
<text text-anchor="middle" x="5580.5" y="-14936.2238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, 1, parent._name)</text>
<text text-anchor="middle" x="5580.5" y="-14920.8237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;parent = parent._parent</text>
<text text-anchor="middle" x="5580.5" y="-14905.4237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14874.0237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(buf, &quot; &quot;)</text>
<text text-anchor="middle" x="5580.5" y="-14858.6236" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14827.2236" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_update_charset(charset)</text>
<text text-anchor="middle" x="5580.5" y="-14811.8236" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;charset = charset or {}</text>
<text text-anchor="middle" x="5580.5" y="-14780.4235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="5580.5" y="-14765.0235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_update_charset(charset)</text>
<text text-anchor="middle" x="5580.5" y="-14749.6235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14718.2234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5580.5" y="-14702.8234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-14687.4234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;charset[alias:sub(1, 1)] = true</text>
<text text-anchor="middle" x="5580.5" y="-14672.0233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14656.6233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14625.2233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return charset</text>
<text text-anchor="middle" x="5580.5" y="-14609.8233" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14578.4232" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:argument(...)</text>
<text text-anchor="middle" x="5580.5" y="-14563.0232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument = Argument(...)</text>
<text text-anchor="middle" x="5580.5" y="-14547.6232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._arguments, argument)</text>
<text text-anchor="middle" x="5580.5" y="-14532.2231" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="5580.5" y="-14516.8231" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14485.4231" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:option(...)</text>
<text text-anchor="middle" x="5580.5" y="-14470.023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = Option(...)</text>
<text text-anchor="middle" x="5580.5" y="-14438.623" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_help then</text>
<text text-anchor="middle" x="5580.5" y="-14423.223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._options, #self._options, option)</text>
<text text-anchor="middle" x="5580.5" y="-14407.8229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-14392.4229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._options, option)</text>
<text text-anchor="middle" x="5580.5" y="-14377.0229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14345.6228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return option</text>
<text text-anchor="middle" x="5580.5" y="-14330.2228" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14298.8228" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:flag(...)</text>
<text text-anchor="middle" x="5580.5" y="-14283.4228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:option():args(0)(...)</text>
<text text-anchor="middle" x="5580.5" y="-14268.0227" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14236.6227" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:command(...)</text>
<text text-anchor="middle" x="5580.5" y="-14221.2227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = Command():add_help(true)(...)</text>
<text text-anchor="middle" x="5580.5" y="-14205.8226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command._parent = self</text>
<text text-anchor="middle" x="5580.5" y="-14190.4226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._commands, command)</text>
<text text-anchor="middle" x="5580.5" y="-14175.0226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return command</text>
<text text-anchor="middle" x="5580.5" y="-14159.6225" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-14128.2225" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:mutex(...)</text>
<text text-anchor="middle" x="5580.5" y="-14112.8225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements = {...}</text>
<text text-anchor="middle" x="5580.5" y="-14081.4224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(elements) do</text>
<text text-anchor="middle" x="5580.5" y="-14066.0224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="5580.5" y="-14050.6224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument, (&quot;bad argument #%d to &#39;mutex&#39; (Option or Argument expected)&quot;):format(i))</text>
<text text-anchor="middle" x="5580.5" y="-14035.2223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-14003.8223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._mutexes, elements)</text>
<text text-anchor="middle" x="5580.5" y="-13988.4223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-13973.0223" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-13941.6222" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:group(name, ...)</text>
<text text-anchor="middle" x="5580.5" y="-13926.2222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(type(name) == &quot;string&quot;, (&quot;bad argument #1 to &#39;group&#39; (string expected, got %s)&quot;):format(type(name)))</text>
<text text-anchor="middle" x="5580.5" y="-13894.8222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local group = {name = name, ...}</text>
<text text-anchor="middle" x="5580.5" y="-13863.4221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(group) do</text>
<text text-anchor="middle" x="5580.5" y="-13848.0221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="5580.5" y="-13832.6221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument or mt == Command,</text>
<text text-anchor="middle" x="5580.5" y="-13817.222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #%d to &#39;group&#39; (Option or Argument or Command expected)&quot;):format(i + 1))</text>
<text text-anchor="middle" x="5580.5" y="-13801.822" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-13770.422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._groups, group)</text>
<text text-anchor="middle" x="5580.5" y="-13755.0219" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-13739.6219" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-13708.2219" font-family="Inconsolata" font-size="14.00" fill="#000000">local usage_welcome = &quot;Usage: &quot;</text>
<text text-anchor="middle" x="5580.5" y="-13676.8218" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_usage()</text>
<text text-anchor="middle" x="5580.5" y="-13661.4218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._usage then</text>
<text text-anchor="middle" x="5580.5" y="-13646.0218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._usage</text>
<text text-anchor="middle" x="5580.5" y="-13630.6218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-13599.2217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = self:_inherit_property(&quot;usage_margin&quot;, #usage_welcome)</text>
<text text-anchor="middle" x="5580.5" y="-13583.8217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local max_usage_width = self:_inherit_property(&quot;usage_max_width&quot;, 70)</text>
<text text-anchor="middle" x="5580.5" y="-13568.4217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {usage_welcome .. self:_get_fullname()}</text>
<text text-anchor="middle" x="5580.5" y="-13537.0216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add(s)</text>
<text text-anchor="middle" x="5580.5" y="-13521.6216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #lines[#lines]+1+#s &lt;= max_usage_width then</text>
<text text-anchor="middle" x="5580.5" y="-13506.2216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines] = lines[#lines] .. &quot; &quot; .. s</text>
<text text-anchor="middle" x="5580.5" y="-13490.8215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-13475.4215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines+1] = (&quot; &quot;):rep(usage_margin) .. s</text>
<text text-anchor="middle" x="5580.5" y="-13460.0215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-13444.6214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-13413.2214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Normally options are before positional arguments in usage messages.</text>
<text text-anchor="middle" x="5580.5" y="-13397.8214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; However, vararg options should be after, because they can&#39;t be reliable used</text>
<text text-anchor="middle" x="5580.5" y="-13382.4213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; before a positional argument.</text>
<text text-anchor="middle" x="5580.5" y="-13367.0213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Mutexes come into play, too, and are shown as soon as possible.</text>
<text text-anchor="middle" x="5580.5" y="-13351.6213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Overall, output usages in the following order:</text>
<text text-anchor="middle" x="5580.5" y="-13336.2213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Mutexes that don&#39;t have positional arguments or vararg options.</text>
<text text-anchor="middle" x="5580.5" y="-13320.8212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Options that are not in any mutexes and are not vararg.</text>
<text text-anchor="middle" x="5580.5" y="-13305.4212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Positional arguments &#45; on their own or as a part of a mutex.</text>
<text text-anchor="middle" x="5580.5" y="-13290.0212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 4. Remaining mutexes.</text>
<text text-anchor="middle" x="5580.5" y="-13274.6211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 5. Remaining options.</text>
<text text-anchor="middle" x="5580.5" y="-13243.2211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements_in_mutexes = {}</text>
<text text-anchor="middle" x="5580.5" y="-13227.8211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="5580.5" y="-13212.421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_mutexes = {}</text>
<text text-anchor="middle" x="5580.5" y="-13197.021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_to_mutexes = {}</text>
<text text-anchor="middle" x="5580.5" y="-13165.621" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_mutex(mutex, main_argument)</text>
<text text-anchor="middle" x="5580.5" y="-13150.2209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if added_mutexes[mutex] then</text>
<text text-anchor="middle" x="5580.5" y="-13134.8209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="5580.5" y="-13119.4209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-13088.0208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;added_mutexes[mutex] = true</text>
<text text-anchor="middle" x="5580.5" y="-13072.6208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="5580.5" y="-13041.2208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5580.5" y="-13025.8208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5580.5" y="-13010.4207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option or element == main_argument then</text>
<text text-anchor="middle" x="5580.5" y="-12995.0207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, element:_get_usage())</text>
<text text-anchor="middle" x="5580.5" y="-12979.6207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5580.5" y="-12964.2206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12948.8206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12933.4206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12902.0205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #buf == 1 then</text>
<text text-anchor="middle" x="5580.5" y="-12886.6205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(buf[1])</text>
<text text-anchor="middle" x="5580.5" y="-12871.2205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif #buf &gt; 1 then</text>
<text text-anchor="middle" x="5580.5" y="-12855.8204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;(&quot; .. table.concat(buf, &quot; | &quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-12840.4204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12825.0204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12793.6203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_element(element)</text>
<text text-anchor="middle" x="5580.5" y="-12778.2203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5580.5" y="-12762.8203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(element:_get_usage())</text>
<text text-anchor="middle" x="5580.5" y="-12747.4203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5580.5" y="-12732.0202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12716.6202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12685.2202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="5580.5" y="-12669.8201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local is_vararg = false</text>
<text text-anchor="middle" x="5580.5" y="-12654.4201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local has_argument = false</text>
<text text-anchor="middle" x="5580.5" y="-12623.0201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5580.5" y="-12607.62" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option then</text>
<text text-anchor="middle" x="5580.5" y="-12592.22" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if element:_is_vararg() then</text>
<text text-anchor="middle" x="5580.5" y="-12576.82" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;is_vararg = true</text>
<text text-anchor="middle" x="5580.5" y="-12561.4199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12546.0199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-12530.6199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;has_argument = true</text>
<text text-anchor="middle" x="5580.5" y="-12515.2198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument_to_mutexes[element] = argument_to_mutexes[element] or {}</text>
<text text-anchor="middle" x="5580.5" y="-12499.8198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(argument_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="5580.5" y="-12484.4198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12453.0198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elements_in_mutexes[element] = true</text>
<text text-anchor="middle" x="5580.5" y="-12437.6197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12406.2197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not is_vararg and not has_argument then</text>
<text text-anchor="middle" x="5580.5" y="-12390.8197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="5580.5" y="-12375.4196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12360.0196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12328.6196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5580.5" y="-12313.2195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not elements_in_mutexes[option] and not option:_is_vararg() then</text>
<text text-anchor="middle" x="5580.5" y="-12297.8195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="5580.5" y="-12282.4195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12267.0194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12235.6194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Add usages for positional arguments, together with one mutex containing them, if they are in a mutex.</text>
<text text-anchor="middle" x="5580.5" y="-12220.2194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(self._arguments) do</text>
<text text-anchor="middle" x="5580.5" y="-12204.8193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Pick a mutex as a part of which to show this argument, take the first one that&#39;s still available.</text>
<text text-anchor="middle" x="5580.5" y="-12189.4193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mutex</text>
<text text-anchor="middle" x="5580.5" y="-12158.0193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if elements_in_mutexes[argument] then</text>
<text text-anchor="middle" x="5580.5" y="-12142.6193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, argument_mutex in ipairs(argument_to_mutexes[argument]) do</text>
<text text-anchor="middle" x="5580.5" y="-12127.2192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not added_mutexes[argument_mutex] then</text>
<text text-anchor="middle" x="5580.5" y="-12111.8192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mutex = argument_mutex</text>
<text text-anchor="middle" x="5580.5" y="-12096.4192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12081.0191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12065.6191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-12034.2191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if mutex then</text>
<text text-anchor="middle" x="5580.5" y="-12018.819" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex, argument)</text>
<text text-anchor="middle" x="5580.5" y="-12003.419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-11988.019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(argument)</text>
<text text-anchor="middle" x="5580.5" y="-11972.6189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11957.2189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11925.8189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="5580.5" y="-11910.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="5580.5" y="-11895.0188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11863.6188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5580.5" y="-11848.2188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="5580.5" y="-11832.8187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11801.4187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-11786.0187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._require_command then</text>
<text text-anchor="middle" x="5580.5" y="-11770.6186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;&lt;command&gt;&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11755.2186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-11739.8186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;[&lt;command&gt;]&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11724.4185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11693.0185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add(&quot;...&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11677.6185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11646.2184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11630.8184" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-11599.4184" font-family="Inconsolata" font-size="14.00" fill="#000000">local function split_lines(s)</text>
<text text-anchor="middle" x="5580.5" y="-11584.0184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s == &quot;&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-11568.6183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {}</text>
<text text-anchor="middle" x="5580.5" y="-11553.2183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11521.8183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="5580.5" y="-11490.4182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s:sub(&#45;1) ~= &quot;\n&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-11475.0182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;s = s .. &quot;\n&quot;</text>
<text text-anchor="middle" x="5580.5" y="-11459.6182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11428.2181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for line in s:gmatch(&quot;([^\n]*)\n&quot;) do</text>
<text text-anchor="middle" x="5580.5" y="-11412.8181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="5580.5" y="-11397.4181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11366.018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="5580.5" y="-11350.618" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-11319.218" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="5580.5" y="-11303.8179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Algorithm for splitting lines is simple and greedy.</text>
<text text-anchor="middle" x="5580.5" y="-11288.4179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5580.5" y="-11257.0179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Preserve original indentation of the line, put this at the beginning of each result line.</text>
<text text-anchor="middle" x="5580.5" y="-11241.6179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If the first word looks like a list marker (&#39;*&#39;, &#39;+&#39;, or &#39;&#45;&#39;), add spaces so that starts</text>
<text text-anchor="middle" x="5580.5" y="-11226.2178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; of the second and the following lines vertically align with the start of the second word.</text>
<text text-anchor="middle" x="5580.5" y="-11210.8178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local indentation = line:match(&quot;^ *&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11179.4178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if line:find(&quot;^ *[%*%+%&#45;]&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-11164.0177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;indentation = indentation .. &quot; &quot; .. line:match(&quot;^ *[%*%+%&#45;]( *)&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-11148.6177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-11117.2177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Parts of the last line being assembled.</text>
<text text-anchor="middle" x="5580.5" y="-11101.8176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_parts = {}</text>
<text text-anchor="middle" x="5580.5" y="-11070.4176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Length of the current line.</text>
<text text-anchor="middle" x="5580.5" y="-11055.0176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_length = 0</text>
<text text-anchor="middle" x="5580.5" y="-11023.6175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Index of the next character to consider.</text>
<text text-anchor="middle" x="5580.5" y="-11008.2175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local index = 1</text>
<text text-anchor="middle" x="5580.5" y="-10976.8175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="5580.5" y="-10961.4174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local word_start, word_finish, word = line:find(&quot;([^ ]+)&quot;, index)</text>
<text text-anchor="middle" x="5580.5" y="-10930.0174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not word_start then</text>
<text text-anchor="middle" x="5580.5" y="-10914.6174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Ignore trailing spaces, if any.</text>
<text text-anchor="middle" x="5580.5" y="-10899.2174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-10883.8173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10852.4173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local preceding_spaces = line:sub(index, word_start &#45; 1)</text>
<text text-anchor="middle" x="5580.5" y="-10837.0173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;index = word_finish + 1</text>
<text text-anchor="middle" x="5580.5" y="-10805.6172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if (#line_parts == 0) or (line_length + #preceding_spaces + #word &lt;= max_length) then</text>
<text text-anchor="middle" x="5580.5" y="-10790.2172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Either this is the very first word or it fits as an addition to the current line, add it.</text>
<text text-anchor="middle" x="5580.5" y="-10774.8172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, preceding_spaces) &#45;&#45; For the very first word this adds the indentation.</text>
<text text-anchor="middle" x="5580.5" y="-10759.4171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, word)</text>
<text text-anchor="middle" x="5580.5" y="-10744.0171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = line_length + #preceding_spaces + #word</text>
<text text-anchor="middle" x="5580.5" y="-10728.6171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-10713.217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Does not fit, finish current line and put the word into a new one.</text>
<text text-anchor="middle" x="5580.5" y="-10697.817" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="5580.5" y="-10682.417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_parts = {indentation, word}</text>
<text text-anchor="middle" x="5580.5" y="-10667.0169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = #indentation + #word</text>
<text text-anchor="middle" x="5580.5" y="-10651.6169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10636.2169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10604.8169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #line_parts &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-10589.4168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="5580.5" y="-10574.0168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10542.6168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #result_lines == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-10527.2167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Preserve empty lines.</text>
<text text-anchor="middle" x="5580.5" y="-10511.8167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result_lines[1] = &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-10496.4167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10465.0166" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="5580.5" y="-10449.6166" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-10418.2166" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Automatically wraps lines within given array,</text>
<text text-anchor="middle" x="5580.5" y="-10402.8165" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; attempting to limit line length to `max_length`.</text>
<text text-anchor="middle" x="5580.5" y="-10387.4165" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Existing line splits are preserved.</text>
<text text-anchor="middle" x="5580.5" y="-10372.0165" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap(lines, max_length)</text>
<text text-anchor="middle" x="5580.5" y="-10356.6164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5580.5" y="-10325.2164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, line in ipairs(lines) do</text>
<text text-anchor="middle" x="5580.5" y="-10309.8164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local autowrapped_lines = autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="5580.5" y="-10278.4164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, autowrapped_line in ipairs(autowrapped_lines) do</text>
<text text-anchor="middle" x="5580.5" y="-10263.0163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, autowrapped_line)</text>
<text text-anchor="middle" x="5580.5" y="-10247.6163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10232.2163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-10200.8162" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="5580.5" y="-10185.4162" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-10154.0162" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_element_help(element)</text>
<text text-anchor="middle" x="5580.5" y="-10138.6161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local label_lines = element:_get_label_lines()</text>
<text text-anchor="middle" x="5580.5" y="-10123.2161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_lines = split_lines(element:_get_description())</text>
<text text-anchor="middle" x="5580.5" y="-10091.8161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5580.5" y="-10060.416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; All label lines should have the same length (except the last one, it has no comma).</text>
<text text-anchor="middle" x="5580.5" y="-10045.016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If too long, start description after all the label lines.</text>
<text text-anchor="middle" x="5580.5" y="-10029.616" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Otherwise, combine label and description lines.</text>
<text text-anchor="middle" x="5580.5" y="-9998.2159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin_len = self:_inherit_property(&quot;help_usage_margin&quot;, 3)</text>
<text text-anchor="middle" x="5580.5" y="-9982.8159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = (&quot; &quot;):rep(usage_margin_len)</text>
<text text-anchor="middle" x="5580.5" y="-9967.4159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin_len = self:_inherit_property(&quot;help_description_margin&quot;, 25)</text>
<text text-anchor="middle" x="5580.5" y="-9952.0159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin = (&quot; &quot;):rep(description_margin_len)</text>
<text text-anchor="middle" x="5580.5" y="-9920.6158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-9889.2158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5580.5" y="-9873.8158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description_max_width = math.max(help_max_width &#45; description_margin_len, 10)</text>
<text text-anchor="middle" x="5580.5" y="-9858.4157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;description_lines = autowrap(description_lines, description_max_width)</text>
<text text-anchor="middle" x="5580.5" y="-9843.0157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9811.6157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #label_lines[1] &gt;= (description_margin_len &#45; usage_margin_len) then</text>
<text text-anchor="middle" x="5580.5" y="-9796.2156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, label_line in ipairs(label_lines) do</text>
<text text-anchor="middle" x="5580.5" y="-9780.8156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, usage_margin .. label_line)</text>
<text text-anchor="middle" x="5580.5" y="-9765.4156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9734.0155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, description_line in ipairs(description_lines) do</text>
<text text-anchor="middle" x="5580.5" y="-9718.6155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, description_margin .. description_line)</text>
<text text-anchor="middle" x="5580.5" y="-9703.2155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9687.8154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-9672.4154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, math.max(#label_lines, #description_lines) do</text>
<text text-anchor="middle" x="5580.5" y="-9657.0154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local label_line = label_lines[i]</text>
<text text-anchor="middle" x="5580.5" y="-9641.6154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local description_line = description_lines[i]</text>
<text text-anchor="middle" x="5580.5" y="-9610.2153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local line = &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-9578.8153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if label_line then</text>
<text text-anchor="middle" x="5580.5" y="-9563.4153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = usage_margin .. label_line</text>
<text text-anchor="middle" x="5580.5" y="-9548.0152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9516.6152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if description_line and description_line ~= &quot;&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-9501.2152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. (&quot; &quot;):rep(description_margin_len &#45; #line) .. description_line</text>
<text text-anchor="middle" x="5580.5" y="-9485.8151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9454.4151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, line)</text>
<text text-anchor="middle" x="5580.5" y="-9439.0151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9423.615" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9392.215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(result_lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-9376.815" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-9345.4149" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_group_types(group)</text>
<text text-anchor="middle" x="5580.5" y="-9330.0149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {}</text>
<text text-anchor="middle" x="5580.5" y="-9298.6149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(group) do</text>
<text text-anchor="middle" x="5580.5" y="-9283.2149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;types[getmetatable(element)] = true</text>
<text text-anchor="middle" x="5580.5" y="-9267.8148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9236.4148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return types</text>
<text text-anchor="middle" x="5580.5" y="-9221.0148" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-9189.6147" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_add_group_help(blocks, added_elements, label, elements)</text>
<text text-anchor="middle" x="5580.5" y="-9174.2147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {label}</text>
<text text-anchor="middle" x="5580.5" y="-9142.8147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(elements) do</text>
<text text-anchor="middle" x="5580.5" y="-9127.4146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5580.5" y="-9112.0146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5580.5" y="-9096.6146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, self:_get_element_help(element))</text>
<text text-anchor="middle" x="5580.5" y="-9081.2145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9065.8145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-9034.4145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #buf &gt; 1 then</text>
<text text-anchor="middle" x="5580.5" y="-9019.0144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, table.concat(buf, (&quot;\n&quot;):rep(self:_inherit_property(&quot;help_vertical_space&quot;, 0) + 1)))</text>
<text text-anchor="middle" x="5580.5" y="-9003.6144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8988.2144" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-8956.8144" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_help()</text>
<text text-anchor="middle" x="5580.5" y="-8941.4143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._help then</text>
<text text-anchor="middle" x="5580.5" y="-8926.0143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._help</text>
<text text-anchor="middle" x="5580.5" y="-8910.6143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8879.2142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local blocks = {self:get_usage()}</text>
<text text-anchor="middle" x="5580.5" y="-8847.8142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-8816.4142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._description then</text>
<text text-anchor="middle" x="5580.5" y="-8801.0141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description = self._description</text>
<text text-anchor="middle" x="5580.5" y="-8769.6141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5580.5" y="-8754.2141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;description = table.concat(autowrap(split_lines(description), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-8738.814" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8707.414" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, description)</text>
<text text-anchor="middle" x="5580.5" y="-8692.014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8660.614" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Put groups containing arguments first, then other arguments.</text>
<text text-anchor="middle" x="5580.5" y="-8645.2139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Put remaining groups containing options, then other options.</text>
<text text-anchor="middle" x="5580.5" y="-8629.8139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Put remaining groups containing commands, then other commands.</text>
<text text-anchor="middle" x="5580.5" y="-8614.4139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Assume that an element can&#39;t be in several groups.</text>
<text text-anchor="middle" x="5580.5" y="-8599.0138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local groups_by_type = {</text>
<text text-anchor="middle" x="5580.5" y="-8583.6138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Argument] = {},</text>
<text text-anchor="middle" x="5580.5" y="-8568.2138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Option] = {},</text>
<text text-anchor="middle" x="5580.5" y="-8552.8137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Command] = {}</text>
<text text-anchor="middle" x="5580.5" y="-8537.4137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="5580.5" y="-8506.0137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, group in ipairs(self._groups) do</text>
<text text-anchor="middle" x="5580.5" y="-8490.6136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local group_types = get_group_types(group)</text>
<text text-anchor="middle" x="5580.5" y="-8459.2136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mt in ipairs({Argument, Option, Command}) do</text>
<text text-anchor="middle" x="5580.5" y="-8443.8136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if group_types[mt] then</text>
<text text-anchor="middle" x="5580.5" y="-8428.4135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(groups_by_type[mt], group)</text>
<text text-anchor="middle" x="5580.5" y="-8413.0135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-8397.6135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8382.2135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8366.8134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8335.4134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local default_groups = {</text>
<text text-anchor="middle" x="5580.5" y="-8320.0134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Arguments&quot;, type = Argument, elements = self._arguments},</text>
<text text-anchor="middle" x="5580.5" y="-8304.6133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Options&quot;, type = Option, elements = self._options},</text>
<text text-anchor="middle" x="5580.5" y="-8289.2133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Commands&quot;, type = Command, elements = self._commands}</text>
<text text-anchor="middle" x="5580.5" y="-8273.8133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="5580.5" y="-8242.4132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="5580.5" y="-8211.0132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, default_group in ipairs(default_groups) do</text>
<text text-anchor="middle" x="5580.5" y="-8195.6132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local type_groups = groups_by_type[default_group.type]</text>
<text text-anchor="middle" x="5580.5" y="-8164.2131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, group in ipairs(type_groups) do</text>
<text text-anchor="middle" x="5580.5" y="-8148.8131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, group.name .. &quot;:&quot;, group)</text>
<text text-anchor="middle" x="5580.5" y="-8133.4131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8102.013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local default_label = default_group.name .. &quot;:&quot;</text>
<text text-anchor="middle" x="5580.5" y="-8070.613" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #type_groups &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-8055.213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default_label = &quot;Other &quot; .. default_label:gsub(&quot;^.&quot;, string.lower)</text>
<text text-anchor="middle" x="5580.5" y="-8039.813" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-8008.4129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, default_label, default_group.elements)</text>
<text text-anchor="middle" x="5580.5" y="-7993.0129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7961.6129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._epilog then</text>
<text text-anchor="middle" x="5580.5" y="-7946.2128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local epilog = self._epilog</text>
<text text-anchor="middle" x="5580.5" y="-7914.8128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5580.5" y="-7899.4128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;epilog = table.concat(autowrap(split_lines(epilog), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-7884.0127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7852.6127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, epilog)</text>
<text text-anchor="middle" x="5580.5" y="-7837.2127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7805.8126" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(blocks, &quot;\n\n&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-7790.4126" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-7759.0126" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_tip(context, wrong_name)</text>
<text text-anchor="middle" x="5580.5" y="-7743.6125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local context_pool = {}</text>
<text text-anchor="middle" x="5580.5" y="-7728.2125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_name</text>
<text text-anchor="middle" x="5580.5" y="-7712.8125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_names = {}</text>
<text text-anchor="middle" x="5580.5" y="-7681.4125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for name in pairs(context) do</text>
<text text-anchor="middle" x="5580.5" y="-7666.0124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(name) == &quot;string&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-7650.6124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 1, #name do</text>
<text text-anchor="middle" x="5580.5" y="-7635.2124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_name = name:sub(1, i &#45; 1) .. name:sub(i + 1)</text>
<text text-anchor="middle" x="5580.5" y="-7603.8123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not context_pool[possible_name] then</text>
<text text-anchor="middle" x="5580.5" y="-7588.4123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context_pool[possible_name] = {}</text>
<text text-anchor="middle" x="5580.5" y="-7573.0123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7541.6122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(context_pool[possible_name], name)</text>
<text text-anchor="middle" x="5580.5" y="-7526.2122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7510.8122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7495.4121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7464.0121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #wrong_name + 1 do</text>
<text text-anchor="middle" x="5580.5" y="-7448.6121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;possible_name = wrong_name:sub(1, i &#45; 1) .. wrong_name:sub(i + 1)</text>
<text text-anchor="middle" x="5580.5" y="-7417.212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if context[possible_name] then</text>
<text text-anchor="middle" x="5580.5" y="-7401.812" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[possible_name] = true</text>
<text text-anchor="middle" x="5580.5" y="-7386.412" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif context_pool[possible_name] then</text>
<text text-anchor="middle" x="5580.5" y="-7371.012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, name in ipairs(context_pool[possible_name]) do</text>
<text text-anchor="middle" x="5580.5" y="-7355.6119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[name] = true</text>
<text text-anchor="middle" x="5580.5" y="-7340.2119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7324.8119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7309.4118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7278.0118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first = next(possible_names)</text>
<text text-anchor="middle" x="5580.5" y="-7246.6118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if first then</text>
<text text-anchor="middle" x="5580.5" y="-7231.2117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if next(possible_names, first) then</text>
<text text-anchor="middle" x="5580.5" y="-7215.8117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local possible_names_arr = {}</text>
<text text-anchor="middle" x="5580.5" y="-7184.4117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name in pairs(possible_names) do</text>
<text text-anchor="middle" x="5580.5" y="-7169.0116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(possible_names_arr, &quot;&#39;&quot; .. name .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-7153.6116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7122.2116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.sort(possible_names_arr)</text>
<text text-anchor="middle" x="5580.5" y="-7106.8115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean one of these: &quot; .. table.concat(possible_names_arr, &quot; &quot;) .. &quot;?&quot;</text>
<text text-anchor="middle" x="5580.5" y="-7091.4115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-7076.0115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean &#39;&quot; .. first .. &quot;&#39;?&quot;</text>
<text text-anchor="middle" x="5580.5" y="-7060.6115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-7045.2114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-7029.8114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-7014.4114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-6999.0113" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6967.6113" font-family="Inconsolata" font-size="14.00" fill="#000000">local ElementState = class({</text>
<text text-anchor="middle" x="5580.5" y="-6952.2113" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;invocations = 0</text>
<text text-anchor="middle" x="5580.5" y="-6936.8112" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5580.5" y="-6905.4112" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:__call(state, element)</text>
<text text-anchor="middle" x="5580.5" y="-6890.0112" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state = state</text>
<text text-anchor="middle" x="5580.5" y="-6874.6111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.result = state.result</text>
<text text-anchor="middle" x="5580.5" y="-6859.2111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.element = element</text>
<text text-anchor="middle" x="5580.5" y="-6843.8111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.target = element._target or element:_get_default_target()</text>
<text text-anchor="middle" x="5580.5" y="-6828.411" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.action, self.result[self.target] = element:_get_action()</text>
<text text-anchor="middle" x="5580.5" y="-6813.011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-6797.611" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6766.211" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:error(fmt, ...)</text>
<text text-anchor="middle" x="5580.5" y="-6750.8109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state:error(fmt, ...)</text>
<text text-anchor="middle" x="5580.5" y="-6735.4109" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6704.0109" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:convert(argument, index)</text>
<text text-anchor="middle" x="5580.5" y="-6688.6108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local converter = self.element._convert</text>
<text text-anchor="middle" x="5580.5" y="-6657.2108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if converter then</text>
<text text-anchor="middle" x="5580.5" y="-6641.8108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local ok, err</text>
<text text-anchor="middle" x="5580.5" y="-6610.4107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(converter) == &quot;function&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-6595.0107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter(argument)</text>
<text text-anchor="middle" x="5580.5" y="-6579.6107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif type(converter[index]) == &quot;function&quot; then</text>
<text text-anchor="middle" x="5580.5" y="-6564.2106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter[index](argument)</text>
<text text-anchor="middle" x="5580.5" y="-6548.8106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-6533.4106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok = converter[argument]</text>
<text text-anchor="middle" x="5580.5" y="-6518.0105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-6486.6105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ok == nil then</text>
<text text-anchor="middle" x="5580.5" y="-6471.2105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(err and &quot;%s&quot; or &quot;malformed argument &#39;%s&#39;&quot;, err or argument)</text>
<text text-anchor="middle" x="5580.5" y="-6455.8105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-6424.4104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ok</text>
<text text-anchor="middle" x="5580.5" y="-6409.0104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-6377.6104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="5580.5" y="-6362.2103" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6330.8103" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:default(mode)</text>
<text text-anchor="middle" x="5580.5" y="-6315.4103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.element._defmode:find(mode) and self.element._default</text>
<text text-anchor="middle" x="5580.5" y="-6300.0102" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6268.6102" font-family="Inconsolata" font-size="14.00" fill="#000000">local function bound(noun, min, max, is_max)</text>
<text text-anchor="middle" x="5580.5" y="-6253.2102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res = &quot;&quot;</text>
<text text-anchor="middle" x="5580.5" y="-6221.8101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if min ~= max then</text>
<text text-anchor="middle" x="5580.5" y="-6206.4101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;res = &quot;at &quot; .. (is_max and &quot;most&quot; or &quot;least&quot;) .. &quot; &quot;</text>
<text text-anchor="middle" x="5580.5" y="-6191.0101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-6159.61" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local number = is_max and max or min</text>
<text text-anchor="middle" x="5580.5" y="-6144.21" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return res .. tostring(number) .. &quot; &quot; .. noun .. &#160;(number == 1 and &quot;&quot; or &quot;s&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-6128.81" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6097.41" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:set_name(alias)</text>
<text text-anchor="middle" x="5580.5" y="-6082.0099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.name = (&quot;%s &#39;%s&#39;&quot;):format(alias and &quot;option&quot; or &quot;argument&quot;, alias or self.element._name)</text>
<text text-anchor="middle" x="5580.5" y="-6066.6099" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-6035.2099" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:invoke()</text>
<text text-anchor="middle" x="5580.5" y="-6019.8098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.open = true</text>
<text text-anchor="middle" x="5580.5" y="-6004.4098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.overwrite = false</text>
<text text-anchor="middle" x="5580.5" y="-5973.0098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.invocations &gt;= self.element._maxcount then</text>
<text text-anchor="middle" x="5580.5" y="-5957.6097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._overwrite then</text>
<text text-anchor="middle" x="5580.5" y="-5942.2097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.overwrite = true</text>
<text text-anchor="middle" x="5580.5" y="-5926.8097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-5911.4096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local num_times_repr = bound(&quot;time&quot;, self.element._mincount, self.element._maxcount, true)</text>
<text text-anchor="middle" x="5580.5" y="-5896.0096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, self.name, num_times_repr)</text>
<text text-anchor="middle" x="5580.5" y="-5880.6096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5865.2095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-5849.8095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.invocations = self.invocations + 1</text>
<text text-anchor="middle" x="5580.5" y="-5834.4095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5803.0095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.args = {}</text>
<text text-anchor="middle" x="5580.5" y="-5771.6094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="5580.5" y="-5756.2094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5580.5" y="-5740.8094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5709.4093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="5580.5" y="-5694.0093" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-5662.6093" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:pass(argument)</text>
<text text-anchor="middle" x="5580.5" y="-5647.2092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument = self:convert(argument, #self.args + 1)</text>
<text text-anchor="middle" x="5580.5" y="-5631.8092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self.args, argument)</text>
<text text-anchor="middle" x="5580.5" y="-5600.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self.args &gt;= self.element._maxargs then</text>
<text text-anchor="middle" x="5580.5" y="-5585.0091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5580.5" y="-5569.6091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5538.2091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="5580.5" y="-5522.8091" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-5491.409" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:complete_invocation()</text>
<text text-anchor="middle" x="5580.5" y="-5476.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while #self.args &lt; self.element._minargs do</text>
<text text-anchor="middle" x="5580.5" y="-5460.609" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:pass(self.element._default)</text>
<text text-anchor="middle" x="5580.5" y="-5445.2089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5429.8089" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-5398.4089" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:close()</text>
<text text-anchor="middle" x="5580.5" y="-5383.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.open then</text>
<text text-anchor="middle" x="5580.5" y="-5367.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.open = false</text>
<text text-anchor="middle" x="5580.5" y="-5336.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.args &lt; self.element._minargs then</text>
<text text-anchor="middle" x="5580.5" y="-5320.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-5305.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:complete_invocation()</text>
<text text-anchor="middle" x="5580.5" y="-5290.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-5274.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #self.args == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-5259.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(self.element) == Argument then</text>
<text text-anchor="middle" x="5580.5" y="-5243.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, self.name)</text>
<text text-anchor="middle" x="5580.5" y="-5228.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="5580.5" y="-5213.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires an argument&quot;, self.name)</text>
<text text-anchor="middle" x="5580.5" y="-5197.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5182.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5150.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires %s&quot;, self.name, bound(&quot;argument&quot;, self.element._minargs, self.element._maxargs))</text>
<text text-anchor="middle" x="5580.5" y="-5135.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5120.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-5088.6083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local args</text>
<text text-anchor="middle" x="5580.5" y="-5057.2083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._maxargs == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-5041.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="5580.5" y="-5026.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="5580.5" y="-5011.0082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.element._minargs == 0 and self.element._mincount ~= self.element._maxcount then</text>
<text text-anchor="middle" x="5580.5" y="-4995.6082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="5580.5" y="-4980.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-4964.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="5580.5" y="-4949.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4934.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-4918.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="5580.5" y="-4903.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4871.808" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.action(self.result, self.target, args, self.overwrite)</text>
<text text-anchor="middle" x="5580.5" y="-4856.4079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4841.0079" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-4809.6079" font-family="Inconsolata" font-size="14.00" fill="#000000">local ParseState = class({</text>
<text text-anchor="middle" x="5580.5" y="-4794.2078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result = {},</text>
<text text-anchor="middle" x="5580.5" y="-4778.8078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;options = {},</text>
<text text-anchor="middle" x="5580.5" y="-4763.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;arguments = {},</text>
<text text-anchor="middle" x="5580.5" y="-4748.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument_i = 1,</text>
<text text-anchor="middle" x="5580.5" y="-4732.6077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;element_to_mutexes = {},</text>
<text text-anchor="middle" x="5580.5" y="-4717.2077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;mutex_to_element_state = {},</text>
<text text-anchor="middle" x="5580.5" y="-4701.8076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command_actions = {}</text>
<text text-anchor="middle" x="5580.5" y="-4686.4076" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5580.5" y="-4655.0076" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:__call(parser, error_handler)</text>
<text text-anchor="middle" x="5580.5" y="-4639.6076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="5580.5" y="-4624.2075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler = error_handler</text>
<text text-anchor="middle" x="5580.5" y="-4608.8075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.charset = parser:_update_charset()</text>
<text text-anchor="middle" x="5580.5" y="-4593.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:switch(parser)</text>
<text text-anchor="middle" x="5580.5" y="-4578.0074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5580.5" y="-4562.6074" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-4531.2074" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:error(fmt, ...)</text>
<text text-anchor="middle" x="5580.5" y="-4515.8073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler(self.parser, fmt:format(...))</text>
<text text-anchor="middle" x="5580.5" y="-4500.4073" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-4469.0073" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:switch(parser)</text>
<text text-anchor="middle" x="5580.5" y="-4453.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="5580.5" y="-4422.2072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parser._action then</text>
<text text-anchor="middle" x="5580.5" y="-4406.8072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.command_actions, {action = parser._action, name = parser._name})</text>
<text text-anchor="middle" x="5580.5" y="-4391.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4360.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(parser._options) do</text>
<text text-anchor="middle" x="5580.5" y="-4344.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option = ElementState(self, option)</text>
<text text-anchor="middle" x="5580.5" y="-4329.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.options, option)</text>
<text text-anchor="middle" x="5580.5" y="-4297.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option.element._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-4282.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.options[alias] = option</text>
<text text-anchor="middle" x="5580.5" y="-4267.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4251.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4220.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(parser._mutexes) do</text>
<text text-anchor="middle" x="5580.5" y="-4204.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5580.5" y="-4189.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not self.element_to_mutexes[element] then</text>
<text text-anchor="middle" x="5580.5" y="-4174.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.element_to_mutexes[element] = {}</text>
<text text-anchor="middle" x="5580.5" y="-4158.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4127.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(self.element_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="5580.5" y="-4111.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4096.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-4065.0066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(parser._arguments) do</text>
<text text-anchor="middle" x="5580.5" y="-4049.6066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ElementState(self, argument)</text>
<text text-anchor="middle" x="5580.5" y="-4034.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.arguments, argument)</text>
<text text-anchor="middle" x="5580.5" y="-4018.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:set_name()</text>
<text text-anchor="middle" x="5580.5" y="-4003.4065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:invoke()</text>
<text text-anchor="middle" x="5580.5" y="-3988.0065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3956.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.handle_options = parser._handle_options</text>
<text text-anchor="middle" x="5580.5" y="-3941.2064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="5580.5" y="-3925.8064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.commands = parser._commands</text>
<text text-anchor="middle" x="5580.5" y="-3894.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self.commands) do</text>
<text text-anchor="middle" x="5580.5" y="-3879.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(command._aliases) do</text>
<text text-anchor="middle" x="5580.5" y="-3863.6063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.commands[alias] = command</text>
<text text-anchor="middle" x="5580.5" y="-3848.2063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3832.8062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3817.4062" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-3786.0062" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_option(name)</text>
<text text-anchor="middle" x="5580.5" y="-3770.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = self.options[name]</text>
<text text-anchor="middle" x="5580.5" y="-3739.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not option then</text>
<text text-anchor="middle" x="5580.5" y="-3723.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown option &#39;%s&#39;%s&quot;, name, get_tip(self.options, name))</text>
<text text-anchor="middle" x="5580.5" y="-3708.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-3693.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return option</text>
<text text-anchor="middle" x="5580.5" y="-3677.606" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3662.206" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-3630.8059" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_command(name)</text>
<text text-anchor="middle" x="5580.5" y="-3615.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = self.commands[name]</text>
<text text-anchor="middle" x="5580.5" y="-3584.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not command then</text>
<text text-anchor="middle" x="5580.5" y="-3568.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-3553.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown command &#39;%s&#39;%s&quot;, name, get_tip(self.commands, name))</text>
<text text-anchor="middle" x="5580.5" y="-3537.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-3522.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;too many arguments&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-3507.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3491.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-3476.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return command</text>
<text text-anchor="middle" x="5580.5" y="-3460.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3445.4056" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-3414.0056" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:check_mutexes(element_state)</text>
<text text-anchor="middle" x="5580.5" y="-3398.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element_to_mutexes[element_state.element] then</text>
<text text-anchor="middle" x="5580.5" y="-3383.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mutex in ipairs(self.element_to_mutexes[element_state.element]) do</text>
<text text-anchor="middle" x="5580.5" y="-3367.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local used_element_state = self.mutex_to_element_state[mutex]</text>
<text text-anchor="middle" x="5580.5" y="-3336.4054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if used_element_state and used_element_state ~= element_state then</text>
<text text-anchor="middle" x="5580.5" y="-3321.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s can not be used together with %s&quot;, element_state.name, used_element_state.name)</text>
<text text-anchor="middle" x="5580.5" y="-3305.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-3290.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.mutex_to_element_state[mutex] = element_state</text>
<text text-anchor="middle" x="5580.5" y="-3274.8053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3259.4053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3244.0052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3228.6052" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-3197.2052" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:invoke(option, name)</text>
<text text-anchor="middle" x="5580.5" y="-3181.8051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="5580.5" y="-3166.4051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option:set_name(name)</text>
<text text-anchor="middle" x="5580.5" y="-3151.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:check_mutexes(option, name)</text>
<text text-anchor="middle" x="5580.5" y="-3119.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if option:invoke() then</text>
<text text-anchor="middle" x="5580.5" y="-3104.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = option</text>
<text text-anchor="middle" x="5580.5" y="-3088.805" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-3073.405" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-3042.0049" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:pass(arg)</text>
<text text-anchor="middle" x="5580.5" y="-3026.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="5580.5" y="-3011.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.option:pass(arg) then</text>
<text text-anchor="middle" x="5580.5" y="-2995.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="5580.5" y="-2980.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2965.0048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif self.argument then</text>
<text text-anchor="middle" x="5580.5" y="-2949.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:check_mutexes(self.argument)</text>
<text text-anchor="middle" x="5580.5" y="-2918.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.argument:pass(arg) then</text>
<text text-anchor="middle" x="5580.5" y="-2902.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument_i = self.argument_i + 1</text>
<text text-anchor="middle" x="5580.5" y="-2887.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="5580.5" y="-2872.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2856.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-2841.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local command = self:get_command(arg)</text>
<text text-anchor="middle" x="5580.5" y="-2825.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.result[command._target or command._name] = true</text>
<text text-anchor="middle" x="5580.5" y="-2794.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.parser._command_target then</text>
<text text-anchor="middle" x="5580.5" y="-2779.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.result[self.parser._command_target] = command._name</text>
<text text-anchor="middle" x="5580.5" y="-2763.6044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2732.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:switch(command)</text>
<text text-anchor="middle" x="5580.5" y="-2716.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2701.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-2670.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:close()</text>
<text text-anchor="middle" x="5580.5" y="-2654.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="5580.5" y="-2639.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option:close()</text>
<text text-anchor="middle" x="5580.5" y="-2623.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="5580.5" y="-2608.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2593.0042" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-2561.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:finalize()</text>
<text text-anchor="middle" x="5580.5" y="-2546.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="5580.5" y="-2514.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = self.argument_i, #self.arguments do</text>
<text text-anchor="middle" x="5580.5" y="-2499.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argument = self.arguments[i]</text>
<text text-anchor="middle" x="5580.5" y="-2484.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #argument.args == 0 and argument:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-2468.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:complete_invocation()</text>
<text text-anchor="middle" x="5580.5" y="-2453.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-2437.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:close()</text>
<text text-anchor="middle" x="5580.5" y="-2422.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2407.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2375.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.parser._require_command and #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-2360.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;a command is required&quot;)</text>
<text text-anchor="middle" x="5580.5" y="-2344.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2313.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self.options) do</text>
<text text-anchor="middle" x="5580.5" y="-2298.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option.name = option.name or (&quot;option &#39;%s&#39;&quot;):format(option.element._name)</text>
<text text-anchor="middle" x="5580.5" y="-2266.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-2251.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-2235.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="5580.5" y="-2220.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:complete_invocation()</text>
<text text-anchor="middle" x="5580.5" y="-2205.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="5580.5" y="-2189.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2174.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2142.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mincount = option.element._mincount</text>
<text text-anchor="middle" x="5580.5" y="-2111.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations &lt; mincount then</text>
<text text-anchor="middle" x="5580.5" y="-2096.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="5580.5" y="-2080.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while option.invocations &lt; mincount do</text>
<text text-anchor="middle" x="5580.5" y="-2065.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="5580.5" y="-2049.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="5580.5" y="-2034.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-2019.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif option.invocations == 0 then</text>
<text text-anchor="middle" x="5580.5" y="-2003.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, option.name)</text>
<text text-anchor="middle" x="5580.5" y="-1988.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-1972.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, option.name, bound(&quot;time&quot;, mincount, option.element._maxcount))</text>
<text text-anchor="middle" x="5580.5" y="-1957.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1942.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1926.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1895.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = #self.command_actions, 1, &#45;1 do</text>
<text text-anchor="middle" x="5580.5" y="-1879.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.command_actions[i].action(self.result, self.command_actions[i].name)</text>
<text text-anchor="middle" x="5580.5" y="-1864.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1849.0029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-1817.6029" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:parse(args)</text>
<text text-anchor="middle" x="5580.5" y="-1802.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, arg in ipairs(args) do</text>
<text text-anchor="middle" x="5580.5" y="-1786.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local plain = true</text>
<text text-anchor="middle" x="5580.5" y="-1755.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.handle_options then</text>
<text text-anchor="middle" x="5580.5" y="-1740.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local first = arg:sub(1, 1)</text>
<text text-anchor="middle" x="5580.5" y="-1708.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.charset[first] then</text>
<text text-anchor="middle" x="5580.5" y="-1693.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg &gt; 1 then</text>
<text text-anchor="middle" x="5580.5" y="-1677.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;plain = false</text>
<text text-anchor="middle" x="5580.5" y="-1646.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg:sub(2, 2) == first then</text>
<text text-anchor="middle" x="5580.5" y="-1631.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg == 2 then</text>
<text text-anchor="middle" x="5580.5" y="-1615.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.options[arg] then</text>
<text text-anchor="middle" x="5580.5" y="-1600.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="5580.5" y="-1584.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="5580.5" y="-1569.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-1554.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5580.5" y="-1538.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1507.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.handle_options = false</text>
<text text-anchor="middle" x="5580.5" y="-1491.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-1476.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local equals = arg:find &quot;=&quot;</text>
<text text-anchor="middle" x="5580.5" y="-1461.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if equals then</text>
<text text-anchor="middle" x="5580.5" y="-1445.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = arg:sub(1, equals &#45; 1)</text>
<text text-anchor="middle" x="5580.5" y="-1430.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="5580.5" y="-1398.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="5580.5" y="-1383.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;option &#39;%s&#39; does not take arguments&quot;, name)</text>
<text text-anchor="middle" x="5580.5" y="-1368.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1336.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="5580.5" y="-1321.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(equals + 1))</text>
<text text-anchor="middle" x="5580.5" y="-1305.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-1290.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="5580.5" y="-1275.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="5580.5" y="-1259.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1244.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1228.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-1213.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 2, #arg do</text>
<text text-anchor="middle" x="5580.5" y="-1198.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = first .. arg:sub(i, i)</text>
<text text-anchor="middle" x="5580.5" y="-1182.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="5580.5" y="-1167.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="5580.5" y="-1135.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i ~= #arg and option.element._maxargs &gt; 0 then</text>
<text text-anchor="middle" x="5580.5" y="-1120.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(i + 1))</text>
<text text-anchor="middle" x="5580.5" y="-1105.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5580.5" y="-1089.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1074.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1058.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1043.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1028.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-1012.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-981.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if plain then</text>
<text text-anchor="middle" x="5580.5" y="-965.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg)</text>
<text text-anchor="middle" x="5580.5" y="-950.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-935.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-903.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:finalize()</text>
<text text-anchor="middle" x="5580.5" y="-888.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.result</text>
<text text-anchor="middle" x="5580.5" y="-872.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-841.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:error(msg)</text>
<text text-anchor="middle" x="5580.5" y="-826.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.stderr:write((&quot;%s\n\nError: %s\n&quot;):format(self:get_usage(), msg))</text>
<text text-anchor="middle" x="5580.5" y="-810.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;os.exit(1)</text>
<text text-anchor="middle" x="5580.5" y="-795.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-763.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Compatibility with strict.lua and other checkers:</text>
<text text-anchor="middle" x="5580.5" y="-748.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">local default_cmdline = rawget(_G, &quot;arg&quot;) or {}</text>
<text text-anchor="middle" x="5580.5" y="-717.001" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_parse(args, error_handler)</text>
<text text-anchor="middle" x="5580.5" y="-701.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ParseState(self, error_handler):parse(args or default_cmdline)</text>
<text text-anchor="middle" x="5580.5" y="-686.201" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-654.8009" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:parse(args)</text>
<text text-anchor="middle" x="5580.5" y="-639.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:_parse(args, self.error)</text>
<text text-anchor="middle" x="5580.5" y="-624.0009" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-592.6008" font-family="Inconsolata" font-size="14.00" fill="#000000">local function xpcall_error_handler(err)</text>
<text text-anchor="middle" x="5580.5" y="-577.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tostring(err) .. &quot;\noriginal &quot; .. debug.traceback(&quot;&quot;, 2):sub(2)</text>
<text text-anchor="middle" x="5580.5" y="-561.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-530.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:pparse(args)</text>
<text text-anchor="middle" x="5580.5" y="-515.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parse_error</text>
<text text-anchor="middle" x="5580.5" y="-483.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ok, result = xpcall(function()</text>
<text text-anchor="middle" x="5580.5" y="-468.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self:_parse(args, function(_, err)</text>
<text text-anchor="middle" x="5580.5" y="-452.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;parse_error = err</text>
<text text-anchor="middle" x="5580.5" y="-437.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(err, 0)</text>
<text text-anchor="middle" x="5580.5" y="-422.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="5580.5" y="-406.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end, xpcall_error_handler)</text>
<text text-anchor="middle" x="5580.5" y="-375.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ok then</text>
<text text-anchor="middle" x="5580.5" y="-359.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true, result</text>
<text text-anchor="middle" x="5580.5" y="-344.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif not parse_error then</text>
<text text-anchor="middle" x="5580.5" y="-329.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(result, 0)</text>
<text text-anchor="middle" x="5580.5" y="-313.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5580.5" y="-298.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return false, parse_error</text>
<text text-anchor="middle" x="5580.5" y="-282.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5580.5" y="-267.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5580.5" y="-236.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">local argparse = {}</text>
<text text-anchor="middle" x="5580.5" y="-204.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse.version = &quot;0.6.0&quot;</text>
<text text-anchor="middle" x="5580.5" y="-173.2002" font-family="Inconsolata" font-size="14.00" fill="#000000">setmetatable(argparse, {__call = function(_, ...)</text>
<text text-anchor="middle" x="5580.5" y="-157.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return Parser(default_cmdline[0]):add_help(true)(...)</text>
<text text-anchor="middle" x="5580.5" y="-142.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">end})</text>
<text text-anchor="middle" x="5580.5" y="-111.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">return argparse</text>
<text text-anchor="middle" x="5580.5" y="-95.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; finish anonymous function and call</text>
<text text-anchor="middle" x="5580.5" y="-80.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end) ( )</text>
</g>
<!-- codeblock_100&#45;&gt;leaf_104 -->
<g id="edge104" class="edge">
<title>codeblock_100&#45;&gt;leaf_104</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5387.794,-23708.8742C5388.2314,-23681.8487 5389.1492,-23625.1378 5390.496,-23541.9175"/>
<polygon fill="#000000" stroke="#000000" points="5393.9957,-23541.9633 5390.658,-23531.9079 5386.9966,-23541.85 5393.9957,-23541.9633"/>
</g>
<!-- leaf_103 -->
<g id="node104" class="node">
<title>leaf_103</title>
<polygon fill="none" stroke="#c0c0c0" points="5144.5,-36 5090.5,-36 5090.5,0 5144.5,0 5144.5,-36"/>
</g>
<!-- raw_102&#45;&gt;leaf_103 -->
<g id="edge103" class="edge">
<title>raw_102&#45;&gt;leaf_103</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5117.5,-11783.5851C5117.5,-11282.4404 5117.5,-670.1349 5117.5,-46.6077"/>
<polygon fill="#000000" stroke="#000000" points="5121.0001,-46.2552 5117.5,-36.2552 5114.0001,-46.2552 5121.0001,-46.2552"/>
</g>
<!-- leaf_109 -->
<g id="node110" class="node">
<title>leaf_109</title>
<polygon fill="none" stroke="#c0c0c0" points="5545.5,-24553.4394 5445.5,-24553.4394 5445.5,-24517.4394 5545.5,-24517.4394 5545.5,-24553.4394"/>
<text text-anchor="middle" x="5495.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Stricture</text>
</g>
<!-- header_105&#45;&gt;leaf_109 -->
<g id="edge109" class="edge">
<title>header_105&#45;&gt;leaf_109</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5495.5,-25184.4485C5495.5,-25092.2805 5495.5,-24676.8395 5495.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="5499.0001,-24563.6151 5495.5,-24553.6151 5492.0001,-24563.6151 5499.0001,-24563.6151"/>
</g>
<!-- raw_110 -->
<g id="node111" class="node">
<title>raw_110</title>
<ellipse fill="none" stroke="#000000" cx="5595.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="5595.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_106&#45;&gt;raw_110 -->
<g id="edge110" class="edge">
<title>prose_106&#45;&gt;raw_110</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5601.3364,-25184.4485C5600.5076,-25092.2805 5596.7716,-24676.8395 5595.7557,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="5599.2533,-24563.5832 5595.6635,-24553.6151 5592.2536,-24563.6462 5599.2533,-24563.5832"/>
</g>
<!-- leaf_112 -->
<g id="node113" class="node">
<title>leaf_112</title>
<polygon fill="none" stroke="#c0c0c0" points="6272.5,-25148.8418 5640.5,-25148.8418 5640.5,-23922.0369 6272.5,-23922.0369 6272.5,-25148.8418"/>
<text text-anchor="middle" x="5956.5" y="-25133.4405" font-family="Inconsolata" font-size="14.00" fill="#000000">do</text>
<text text-anchor="middle" x="5956.5" y="-25118.0405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local getinfo, error, rawset, rawget = debug.getinfo, error, rawset, rawget</text>
<text text-anchor="middle" x="5956.5" y="-25102.6405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local strict = {}</text>
<text text-anchor="middle" x="5956.5" y="-25071.2404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local function what ()</text>
<text text-anchor="middle" x="5956.5" y="-25055.8404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local d = getinfo(3, &quot;S&quot;)</text>
<text text-anchor="middle" x="5956.5" y="-25040.4404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return d and d.what or &quot;C&quot;</text>
<text text-anchor="middle" x="5956.5" y="-25025.0404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24993.6403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45;&#45; make an existing table strict.</text>
<text text-anchor="middle" x="5956.5" y="-24978.2403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @string name name of table (optional)</text>
<text text-anchor="middle" x="5956.5" y="-24962.8403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @tab[opt] mod table &#45; if `nil` then we&#39;ll return a new table</text>
<text text-anchor="middle" x="5956.5" y="-24947.4402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @tab[opt] predeclared &#45; table of variables that are to be considered predeclared.</text>
<text text-anchor="middle" x="5956.5" y="-24932.0402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @return the given table, or a new table</text>
<text text-anchor="middle" x="5956.5" y="-24916.6402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local function stricture(name,mod,predeclared)</text>
<text text-anchor="middle" x="5956.5" y="-24901.2401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local mt, old_newindex, old_index, old_index_type, global, closed</text>
<text text-anchor="middle" x="5956.5" y="-24885.8401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if predeclared then</text>
<text text-anchor="middle" x="5956.5" y="-24870.4401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;global = predeclared.__global</text>
<text text-anchor="middle" x="5956.5" y="-24855.04" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;closed = predeclared.__closed</text>
<text text-anchor="middle" x="5956.5" y="-24839.64" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24824.24" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if type(mod) == &#39;table&#39; then</text>
<text text-anchor="middle" x="5956.5" y="-24808.8399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt = getmetatable(mod)</text>
<text text-anchor="middle" x="5956.5" y="-24793.4399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if mt and rawget(mt,&#39;__declared&#39;) then return end &#45;&#45; already patched...</text>
<text text-anchor="middle" x="5956.5" y="-24778.0399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5956.5" y="-24762.6399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mod = {}</text>
<text text-anchor="middle" x="5956.5" y="-24747.2398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24731.8398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if mt == nil then</text>
<text text-anchor="middle" x="5956.5" y="-24716.4398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt = {}</text>
<text text-anchor="middle" x="5956.5" y="-24701.0397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;setmetatable(mod, mt)</text>
<text text-anchor="middle" x="5956.5" y="-24685.6397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5956.5" y="-24670.2397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_newindex = mt.__newindex</text>
<text text-anchor="middle" x="5956.5" y="-24654.8396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_index = mt.__index</text>
<text text-anchor="middle" x="5956.5" y="-24639.4396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_index_type = type(old_index)</text>
<text text-anchor="middle" x="5956.5" y="-24624.0396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24608.6395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__declared = predeclared or {}</text>
<text text-anchor="middle" x="5956.5" y="-24593.2395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__newindex = function(t, n, v)</text>
<text text-anchor="middle" x="5956.5" y="-24577.8395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_newindex then</text>
<text text-anchor="middle" x="5956.5" y="-24562.4394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_newindex(t, n, v)</text>
<text text-anchor="middle" x="5956.5" y="-24547.0394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if rawget(t,n)~=nil then return end</text>
<text text-anchor="middle" x="5956.5" y="-24531.6394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24516.2394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not mt.__declared[n] then</text>
<text text-anchor="middle" x="5956.5" y="-24500.8393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if global then</text>
<text text-anchor="middle" x="5956.5" y="-24485.4393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local w = what()</text>
<text text-anchor="middle" x="5956.5" y="-24470.0393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if w ~= &quot;main&quot; and w ~= &quot;C&quot; then</text>
<text text-anchor="middle" x="5956.5" y="-24454.6392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(&quot;assign to undeclared global &#39;&quot;..n..&quot;&#39;&quot;, 2)</text>
<text text-anchor="middle" x="5956.5" y="-24439.2392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24423.8392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24408.4391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__declared[n] = true</text>
<text text-anchor="middle" x="5956.5" y="-24393.0391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24377.6391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rawset(t, n, v)</text>
<text text-anchor="middle" x="5956.5" y="-24362.239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24346.839" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__index = function(t,n)</text>
<text text-anchor="middle" x="5956.5" y="-24331.439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not mt.__declared[n] and what() ~= &quot;C&quot; then</text>
<text text-anchor="middle" x="5956.5" y="-24316.0389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_index then</text>
<text text-anchor="middle" x="5956.5" y="-24300.6389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_index_type == &quot;table&quot; then</text>
<text text-anchor="middle" x="5956.5" y="-24285.2389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local fallback = old_index[n]</text>
<text text-anchor="middle" x="5956.5" y="-24269.8389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if fallback ~= nil then</text>
<text text-anchor="middle" x="5956.5" y="-24254.4388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return fallback</text>
<text text-anchor="middle" x="5956.5" y="-24239.0388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24223.6388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5956.5" y="-24208.2387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local res = old_index(t, n)</text>
<text text-anchor="middle" x="5956.5" y="-24192.8387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if res ~= nil then</text>
<text text-anchor="middle" x="5956.5" y="-24177.4387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return res</text>
<text text-anchor="middle" x="5956.5" y="-24162.0386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24146.6386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24131.2386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24115.8385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local msg = &quot;variable &#39;&quot;..n..&quot;&#39; is not declared&quot;</text>
<text text-anchor="middle" x="5956.5" y="-24100.4385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if name then</text>
<text text-anchor="middle" x="5956.5" y="-24085.0385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = msg .. &quot; in &#39;&quot;..name..&quot;&#39;&quot;</text>
<text text-anchor="middle" x="5956.5" y="-24069.6384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24054.2384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(msg, 2)</text>
<text text-anchor="middle" x="5956.5" y="-24038.8384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-24023.4384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rawget(t, n)</text>
<text text-anchor="middle" x="5956.5" y="-24008.0383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-23992.6383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return mod</text>
<text text-anchor="middle" x="5956.5" y="-23977.2383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5956.5" y="-23945.8382" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;stricture(nil,_G,{_PROMPT=true,__global=true})</text>
<text text-anchor="middle" x="5956.5" y="-23930.4382" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_107&#45;&gt;leaf_112 -->
<g id="edge112" class="edge">
<title>codeblock_107&#45;&gt;leaf_112</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5858.2539,-25184.4485C5859.2841,-25177.6428 5860.5812,-25169.0745 5862.1069,-25158.9956"/>
<polygon fill="#000000" stroke="#000000" points="5865.6023,-25159.2888 5863.6386,-25148.8776 5858.6812,-25158.2411 5865.6023,-25159.2888"/>
</g>
<!-- header_113 -->
<g id="node114" class="node">
<title>header_113</title>
<ellipse fill="none" stroke="#000000" cx="6322.5" cy="-24535.4394" rx="31.9741" ry="18"/>
<text text-anchor="middle" x="6322.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">4 : gc</text>
</g>
<!-- section_108&#45;&gt;header_113 -->
<g id="edge113" class="edge">
<title>section_108&#45;&gt;header_113</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6362.3821,-25184.4485C6356.7183,-25092.2805 6331.1891,-24676.8395 6324.2472,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="6327.7238,-24563.3816 6323.6169,-24553.6151 6320.7369,-24563.811 6327.7238,-24563.3816"/>
</g>
<!-- prose_114 -->
<g id="node115" class="node">
<title>prose_114</title>
<ellipse fill="none" stroke="#000000" cx="6404.5" cy="-24535.4394" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="6404.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_108&#45;&gt;prose_114 -->
<g id="edge114" class="edge">
<title>section_108&#45;&gt;prose_114</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6364.6179,-25184.4485C6370.2817,-25092.2805 6395.8109,-24676.8395 6402.7528,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="6406.2631,-24563.811 6403.3831,-24553.6151 6399.2762,-24563.3816 6406.2631,-24563.811"/>
</g>
<!-- codeblock_115 -->
<g id="node116" class="node">
<title>codeblock_115</title>
<ellipse fill="none" stroke="#000000" cx="6664.5" cy="-24535.4394" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="6664.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1682&#45;1684</text>
</g>
<!-- section_108&#45;&gt;codeblock_115 -->
<g id="edge115" class="edge">
<title>section_108&#45;&gt;codeblock_115</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6398.8777,-25186.041C6414.9956,-25176.9527 6433.1822,-25164.3254 6445.5,-25148.6405 6595.2691,-24957.9327 6647.8111,-24656.2878 6660.9088,-24563.515"/>
<polygon fill="#000000" stroke="#000000" points="6664.3914,-24563.8803 6662.2826,-24553.4975 6657.4563,-24562.9291 6664.3914,-24563.8803"/>
</g>
<!-- leaf_111 -->
<g id="node112" class="node">
<title>leaf_111</title>
<polygon fill="none" stroke="#c0c0c0" points="5908,-23762.3383 5493,-23762.3383 5493,-23691.7376 5908,-23691.7376 5908,-23762.3383"/>
<text text-anchor="middle" x="5700.5" y="-23715.238" font-family="Inconsolata" font-size="14.00" fill="#000000">Lifted straight from [[penlight]</text>
<text text-anchor="middle" x="5700.5" y="-23699.8379" font-family="Inconsolata" font-size="14.00" fill="#000000">[https://stevedonovan.github.io/Penlight/api/index.html].</text>
</g>
<!-- raw_110&#45;&gt;leaf_111 -->
<g id="edge111" class="edge">
<title>raw_110&#45;&gt;leaf_111</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5594.7289,-24517.395C5591.934,-24443.0522 5584.8082,-24153.5171 5631.5,-23922.2382 5642.2212,-23869.1327 5664.237,-23810.8941 5680.5308,-23771.9764"/>
<polygon fill="#000000" stroke="#000000" points="5683.8616,-23773.0863 5684.5396,-23762.5132 5677.4161,-23770.3558 5683.8616,-23773.0863"/>
</g>
<!-- leaf_116 -->
<g id="node117" class="node">
<title>leaf_116</title>
<polygon fill="none" stroke="#c0c0c0" points="6096,-23745.0379 6031,-23745.0379 6031,-23709.0379 6096,-23709.0379 6096,-23745.0379"/>
<text text-anchor="middle" x="6063.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">**** gc</text>
</g>
<!-- header_113&#45;&gt;leaf_116 -->
<g id="edge116" class="edge">
<title>header_113&#45;&gt;leaf_116</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6324.0823,-24517.4297C6331.7202,-24425.952 6361.2479,-24013.5501 6281.5,-23922.2382 6228.9798,-23862.1021 6163.5201,-23941.0869 6105.5,-23886.2382 6069.4507,-23852.1593 6062.9763,-23791.1217 6062.5453,-23755.3387"/>
<polygon fill="#000000" stroke="#000000" points="6066.046,-23755.114 6062.5796,-23745.1023 6059.046,-23755.0905 6066.046,-23755.114"/>
</g>
<!-- raw_117 -->
<g id="node118" class="node">
<title>raw_117</title>
<ellipse fill="none" stroke="#000000" cx="6141.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6141.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_114&#45;&gt;raw_117 -->
<g id="edge117" class="edge">
<title>prose_114&#45;&gt;raw_117</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6410.1522,-24517.4898C6434.4318,-24436.5148 6521.6646,-24101.4162 6363.5,-23922.2382 6307.7778,-23859.1128 6237.9607,-23944.841 6177.5,-23886.2382 6142.1879,-23852.0111 6138.2086,-23791.0263 6139.3084,-23755.2926"/>
<polygon fill="#000000" stroke="#000000" points="6142.8153,-23755.223 6139.7837,-23745.0711 6135.8229,-23754.8977 6142.8153,-23755.223"/>
</g>
<!-- prespace_118 -->
<g id="node119" class="node">
<title>prespace_118</title>
<ellipse fill="none" stroke="#000000" cx="6232.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="6232.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_114&#45;&gt;prespace_118 -->
<g id="edge118" class="edge">
<title>prose_114&#45;&gt;prespace_118</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6409.2141,-24517.5853C6428.8423,-24439.053 6497.0167,-24119.5 6363.5,-23922.2382 6342.7749,-23891.6182 6313.178,-23913.7719 6288.5,-23886.2382 6254.8284,-23848.6702 6241.1179,-23789.6169 6235.7496,-23754.9765"/>
<polygon fill="#000000" stroke="#000000" points="6239.2125,-23754.4677 6234.3385,-23745.0605 6232.2824,-23755.4539 6239.2125,-23754.4677"/>
</g>
<!-- literal_119 -->
<g id="node120" class="node">
<title>literal_119</title>
<ellipse fill="none" stroke="#000000" cx="6328.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="6328.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_114&#45;&gt;literal_119 -->
<g id="edge119" class="edge">
<title>prose_114&#45;&gt;literal_119</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6404.0208,-24517.3118C6401.9078,-24443.2254 6392.2173,-24156.2816 6363.5,-23922.2382 6356.1535,-23862.3652 6342.469,-23793.0146 6334.5629,-23755.2036"/>
<polygon fill="#000000" stroke="#000000" points="6337.8922,-23754.0292 6332.4022,-23744.9678 6331.0431,-23755.4751 6337.8922,-23754.0292"/>
</g>
<!-- raw_120 -->
<g id="node121" class="node">
<title>raw_120</title>
<ellipse fill="none" stroke="#000000" cx="6404.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6404.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_114&#45;&gt;raw_120 -->
<g id="edge120" class="edge">
<title>prose_114&#45;&gt;raw_120</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6404.5,-24517.4213C6404.5,-24412.8393 6404.5,-23884.0356 6404.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6408.0001,-23755.0994 6404.5,-23745.0994 6401.0001,-23755.0995 6408.0001,-23755.0994"/>
</g>
<!-- prespace_121 -->
<g id="node122" class="node">
<title>prespace_121</title>
<ellipse fill="none" stroke="#000000" cx="6495.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="6495.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_114&#45;&gt;prespace_121 -->
<g id="edge121" class="edge">
<title>prose_114&#45;&gt;prespace_121</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6406.5283,-24517.4213C6418.3008,-24412.8393 6477.8271,-23884.0356 6492.317,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6495.8262,-23755.4282 6493.4669,-23745.0994 6488.8701,-23754.6451 6495.8262,-23755.4282"/>
</g>
<!-- literal_122 -->
<g id="node123" class="node">
<title>literal_122</title>
<ellipse fill="none" stroke="#000000" cx="6591.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="6591.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_114&#45;&gt;literal_122 -->
<g id="edge122" class="edge">
<title>prose_114&#45;&gt;literal_122</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6408.6679,-24517.4213C6432.8842,-24412.7342 6555.4292,-23882.9722 6585.0485,-23754.9276"/>
<polygon fill="#000000" stroke="#000000" points="6588.4782,-23755.631 6587.322,-23745.0994 6581.6583,-23754.0534 6588.4782,-23755.631"/>
</g>
<!-- raw_123 -->
<g id="node124" class="node">
<title>raw_123</title>
<ellipse fill="none" stroke="#000000" cx="6667.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6667.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_114&#45;&gt;raw_123 -->
<g id="edge123" class="edge">
<title>prose_114&#45;&gt;raw_123</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6403.8571,-24517.2604C6401.9896,-24437.3598 6404.5391,-24112.8822 6558.5,-23922.2382 6581.2283,-23894.0945 6609.1062,-23914.6487 6631.5,-23886.2382 6661.495,-23848.1841 6667.4814,-23789.9387 6668.1497,-23755.4533"/>
<polygon fill="#000000" stroke="#000000" points="6671.6512,-23755.1655 6668.2036,-23745.1473 6664.6513,-23755.1288 6671.6512,-23755.1655"/>
</g>
<!-- leaf_131 -->
<g id="node132" class="node">
<title>leaf_131</title>
<polygon fill="none" stroke="#c0c0c0" points="6840.5,-23745.0379 6712.5,-23745.0379 6712.5,-23709.0379 6840.5,-23709.0379 6840.5,-23745.0379"/>
<text text-anchor="middle" x="6776.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">collectgarbage()</text>
</g>
<!-- codeblock_115&#45;&gt;leaf_131 -->
<g id="edge131" class="edge">
<title>codeblock_115&#45;&gt;leaf_131</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6666.9963,-24517.4213C6681.4856,-24412.8393 6754.7488,-23884.0356 6772.5824,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6776.0921,-23755.4852 6773.9977,-23745.0994 6769.1584,-23754.5245 6776.0921,-23755.4852"/>
</g>
<!-- leaf_124 -->
<g id="node125" class="node">
<title>leaf_124</title>
<polygon fill="none" stroke="#c0c0c0" points="6116.5,-11829.8203 6016.5,-11829.8203 6016.5,-11774.0173 6116.5,-11774.0173 6116.5,-11829.8203"/>
<text text-anchor="middle" x="6066.5" y="-11782.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">All of these</text>
</g>
<!-- raw_117&#45;&gt;leaf_124 -->
<g id="edge124" class="edge">
<title>raw_117&#45;&gt;leaf_124</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6139.5593,-23709.0361C6135.956,-23674.6516 6128.3403,-23597.231 6125.5,-23531.8377 5909.3779,-18556.0025 6052.3477,-12381.817 6065.5493,-11840.2451"/>
<polygon fill="#000000" stroke="#000000" points="6069.0575,-11839.9476 6065.8033,-11829.8649 6062.0596,-11839.7763 6069.0575,-11839.9476"/>
</g>
<!-- leaf_125 -->
<g id="node126" class="node">
<title>leaf_125</title>
<polygon fill="none" stroke="#c0c0c0" points="6188.5,-11819.9188 6134.5,-11819.9188 6134.5,-11783.9188 6188.5,-11783.9188 6188.5,-11819.9188"/>
<text text-anchor="middle" x="6161.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_118&#45;&gt;leaf_125 -->
<g id="edge125" class="edge">
<title>prespace_118&#45;&gt;leaf_125</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6228.1483,-23708.882C6220.1662,-23674.5555 6203.4574,-23597.6731 6197.5,-23531.8377 6083.6091,-22273.2242 6156.7366,-12427.0088 6161.2825,-11830.2251"/>
<polygon fill="#000000" stroke="#000000" points="6164.7846,-11829.9515 6161.3612,-11819.925 6157.7848,-11829.898 6164.7846,-11829.9515"/>
</g>
<!-- leaf_126 -->
<g id="node127" class="node">
<title>leaf_126</title>
<polygon fill="none" stroke="#c0c0c0" points="6260.5,-11819.9188 6206.5,-11819.9188 6206.5,-11783.9188 6260.5,-11783.9188 6260.5,-11819.9188"/>
<text text-anchor="middle" x="6233.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">do</text>
</g>
<!-- literal_119&#45;&gt;leaf_126 -->
<g id="edge126" class="edge">
<title>literal_119&#45;&gt;leaf_126</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6325.1507,-23708.9912C6319.3123,-23679.0706 6306.0941,-23617.5606 6287.5,-23567.8377 6281.2343,-23551.0824 6273.6367,-23549.2413 6269.5,-23531.8377 6196.3492,-23224.0789 6231.3031,-12457.9814 6233.4035,-11830.465"/>
<polygon fill="#000000" stroke="#000000" points="6236.9047,-11830.0679 6233.4384,-11820.0561 6229.9048,-11830.0443 6236.9047,-11830.0679"/>
</g>
<!-- leaf_127 -->
<g id="node128" class="node">
<title>leaf_127</title>
<polygon fill="none" stroke="#c0c0c0" points="6672.5,-11821.2194 6278.5,-11821.2194 6278.5,-11782.6183 6672.5,-11782.6183 6672.5,-11821.2194"/>
<text text-anchor="middle" x="6475.5" y="-11806.1189" font-family="Inconsolata" font-size="14.00" fill="#000000"> blocks are to emulate the per&#45;module behavior of Lua,</text>
<text text-anchor="middle" x="6475.5" y="-11790.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">creating closures so that all</text>
</g>
<!-- raw_120&#45;&gt;leaf_127 -->
<g id="edge127" class="edge">
<title>raw_120&#45;&gt;leaf_127</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6404.6081,-23708.8742C6407.5955,-23207.1223 6471.5043,-12473.0327 6475.3218,-11831.8469"/>
<polygon fill="#000000" stroke="#000000" points="6478.8233,-11831.5864 6475.383,-11821.5657 6471.8235,-11831.5446 6478.8233,-11831.5864"/>
</g>
<!-- leaf_128 -->
<g id="node129" class="node">
<title>leaf_128</title>
<polygon fill="none" stroke="#c0c0c0" points="6744.5,-11819.9188 6690.5,-11819.9188 6690.5,-11783.9188 6744.5,-11783.9188 6744.5,-11819.9188"/>
<text text-anchor="middle" x="6717.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_121&#45;&gt;leaf_128 -->
<g id="edge128" class="edge">
<title>prespace_121&#45;&gt;leaf_128</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6496.5882,-23708.8479C6499.5606,-23675.8562 6510.6056,-23606.0384 6551.5,-23567.8377 6595.311,-23526.9125 6645.1292,-23579.4973 6681.5,-23531.8377 6777.5013,-23406.0395 6720.9706,-12457.7505 6717.6497,-11829.9887"/>
<polygon fill="#000000" stroke="#000000" points="6721.1496,-11829.9499 6717.5966,-11819.9686 6714.1497,-11829.9871 6721.1496,-11829.9499"/>
</g>
<!-- leaf_129 -->
<g id="node130" class="node">
<title>leaf_129</title>
<polygon fill="none" stroke="#c0c0c0" points="6816.5,-11819.9188 6762.5,-11819.9188 6762.5,-11783.9188 6816.5,-11783.9188 6816.5,-11819.9188"/>
<text text-anchor="middle" x="6789.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">local</text>
</g>
<!-- literal_122&#45;&gt;leaf_129 -->
<g id="edge129" class="edge">
<title>literal_122&#45;&gt;leaf_129</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6590.6319,-23708.7965C6590.111,-23676.0343 6593.9027,-23607.0002 6631.5,-23567.8377 6670.652,-23527.0557 6719.5815,-23577.0658 6753.5,-23531.8377 6848.4421,-23405.2382 6792.9098,-12457.7045 6789.6471,-11829.9867"/>
<polygon fill="#000000" stroke="#000000" points="6793.147,-11829.9489 6789.5949,-11819.9674 6786.1471,-11829.9855 6793.147,-11829.9489"/>
</g>
<!-- leaf_130 -->
<g id="node131" class="node">
<title>leaf_130</title>
<polygon fill="none" stroke="#c0c0c0" points="7102.5,-11821.2194 6834.5,-11821.2194 6834.5,-11782.6183 7102.5,-11782.6183 7102.5,-11821.2194"/>
<text text-anchor="middle" x="6968.5" y="-11806.1189" font-family="Inconsolata" font-size="14.00" fill="#000000"> variables become garbage. &#160;So let&#39;s</text>
<text text-anchor="middle" x="6968.5" y="-11790.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">collect them.</text>
</g>
<!-- raw_123&#45;&gt;leaf_130 -->
<g id="edge130" class="edge">
<title>raw_123&#45;&gt;leaf_130</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6666.1135,-23708.8398C6664.673,-23676.1469 6666.5809,-23607.2202 6703.5,-23567.8377 6742.1645,-23526.5932 6791.3756,-23576.9107 6825.5,-23531.8377 9858.6992,-19525.4519 7177.7931,-12345.3665 6979.8602,-11831.13"/>
<polygon fill="#000000" stroke="#000000" points="6982.9947,-11829.5311 6976.1286,-11821.4622 6976.4643,-11832.0517 6982.9947,-11829.5311"/>
</g>
<!-- leaf_136 -->
<g id="node137" class="node">
<title>leaf_136</title>
<polygon fill="none" stroke="#c0c0c0" points="7188.5,-24553.4394 7116.5,-24553.4394 7116.5,-24517.4394 7188.5,-24517.4394 7188.5,-24553.4394"/>
<text text-anchor="middle" x="7152.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Parse</text>
</g>
<!-- header_132&#45;&gt;leaf_136 -->
<g id="edge136" class="edge">
<title>header_132&#45;&gt;leaf_136</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7221.5758,-25185.7408C7212.7573,-25175.8126 7202.7432,-25162.5144 7197.5,-25148.6405 7117.1708,-24936.084 7139.3189,-24653.0294 7149.0614,-24563.6891"/>
<polygon fill="#000000" stroke="#000000" points="7152.5632,-24563.87 7150.2074,-24553.5404 7145.6074,-24563.0845 7152.5632,-24563.87"/>
</g>
<!-- raw_137 -->
<g id="node138" class="node">
<title>raw_137</title>
<ellipse fill="none" stroke="#000000" cx="7233.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="7233.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_133&#45;&gt;raw_137 -->
<g id="edge137" class="edge">
<title>prose_133&#45;&gt;raw_137</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7342.5956,-25195.6198C7318.4656,-25188.2506 7285.9267,-25174.0843 7269.5,-25148.6405 7206.0995,-25050.4376 7224.8838,-24670.7594 7231.5898,-24563.6918"/>
<polygon fill="#000000" stroke="#000000" points="7235.0867,-24563.8512 7232.2342,-24553.6476 7228.1011,-24563.403 7235.0867,-24563.8512"/>
</g>
<!-- prespace_138 -->
<g id="node139" class="node">
<title>prespace_138</title>
<ellipse fill="none" stroke="#000000" cx="7324.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="7324.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_133&#45;&gt;prespace_138 -->
<g id="edge138" class="edge">
<title>prose_133&#45;&gt;prespace_138</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7371.1912,-25184.4485C7364.5604,-25092.2805 7334.6727,-24676.8395 7326.5455,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="7330.0162,-24563.3382 7325.8076,-24553.6151 7323.0343,-24563.8405 7330.0162,-24563.3382"/>
</g>
<!-- literal_139 -->
<g id="node140" class="node">
<title>literal_139</title>
<ellipse fill="none" stroke="#000000" cx="7420.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="7420.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_133&#45;&gt;literal_139 -->
<g id="edge139" class="edge">
<title>prose_133&#45;&gt;literal_139</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7375.1135,-25184.6724C7376.568,-25174.1831 7378.318,-25160.6831 7379.5,-25148.6405 7401.5883,-24923.5947 7415.2043,-24650.8955 7419.2372,-24563.6854"/>
<polygon fill="#000000" stroke="#000000" points="7422.741,-24563.6813 7419.702,-24553.5317 7415.7483,-24563.3612 7422.741,-24563.6813"/>
</g>
<!-- raw_140 -->
<g id="node141" class="node">
<title>raw_140</title>
<ellipse fill="none" stroke="#000000" cx="7496.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="7496.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_133&#45;&gt;raw_140 -->
<g id="edge140" class="edge">
<title>prose_133&#45;&gt;raw_140</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7400.6787,-25193.3929C7421.0535,-25185.1036 7447.2397,-25170.7859 7460.5,-25148.6405 7578.0176,-24952.3804 7523.8709,-24654.4879 7503.2312,-24563.0774"/>
<polygon fill="#000000" stroke="#000000" points="7506.6125,-24562.1643 7500.9499,-24553.2097 7499.7924,-24563.7411 7506.6125,-24562.1643"/>
</g>
<!-- raw_145 -->
<g id="node146" class="node">
<title>raw_145</title>
<ellipse fill="none" stroke="#000000" cx="7633.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="7633.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_134&#45;&gt;raw_145 -->
<g id="edge145" class="edge">
<title>prose_134&#45;&gt;raw_145</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7704.9965,-25188.6557C7692.6538,-25178.9891 7677.933,-25164.9587 7670.5,-25148.6405 7576.0818,-24941.3562 7613.4495,-24653.1534 7628.4308,-24563.3097"/>
<polygon fill="#000000" stroke="#000000" points="7631.8972,-24563.8027 7630.1364,-24553.3552 7624.9978,-24562.6204 7631.8972,-24563.8027"/>
</g>
<!-- prespace_146 -->
<g id="node147" class="node">
<title>prespace_146</title>
<ellipse fill="none" stroke="#000000" cx="7725.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="7725.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_134&#45;&gt;prespace_146 -->
<g id="edge146" class="edge">
<title>prose_134&#45;&gt;prespace_146</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7725.5,-25184.4485C7725.5,-25092.2805 7725.5,-24676.8395 7725.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="7729.0001,-24563.6151 7725.5,-24553.6151 7722.0001,-24563.6151 7729.0001,-24563.6151"/>
</g>
<!-- literal_147 -->
<g id="node148" class="node">
<title>literal_147</title>
<ellipse fill="none" stroke="#000000" cx="7821.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="7821.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_134&#45;&gt;literal_147 -->
<g id="edge147" class="edge">
<title>prose_134&#45;&gt;literal_147</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7745.9674,-25188.6392C7758.2957,-25178.966 7773.0141,-25164.9345 7780.5,-25148.6405 7875.6303,-24941.5785 7840.5704,-24653.2271 7826.3347,-24563.328"/>
<polygon fill="#000000" stroke="#000000" points="7829.7744,-24562.6743 7824.712,-24553.3673 7822.8655,-24563.7999 7829.7744,-24562.6743"/>
</g>
<!-- raw_148 -->
<g id="node149" class="node">
<title>raw_148</title>
<ellipse fill="none" stroke="#000000" cx="7897.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="7897.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_134&#45;&gt;raw_148 -->
<g id="edge148" class="edge">
<title>prose_134&#45;&gt;raw_148</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7757.2938,-25199.6377C7789.3371,-25194.7618 7837.3959,-25181.9979 7861.5,-25148.6405 7930.0376,-25053.7922 7907.521,-24670.9104 7899.6977,-24563.5503"/>
<polygon fill="#000000" stroke="#000000" points="7903.1813,-24563.1989 7898.9479,-24553.4866 7896.2006,-24563.7191 7903.1813,-24563.1989"/>
</g>
<!-- leaf_153 -->
<g id="node154" class="node">
<title>leaf_153</title>
<polygon fill="none" stroke="#c0c0c0" points="8392.5,-24925.2408 7942.5,-24925.2408 7942.5,-24145.6379 8392.5,-24145.6379 8392.5,-24925.2408"/>
<text text-anchor="middle" x="8167.5" y="-24910.1401" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; we&#39;re going to run in parallel while we build the parser:</text>
<text text-anchor="middle" x="8167.5" y="-24878.7401" font-family="Inconsolata" font-size="14.00" fill="#000000">rawset(_G, &quot;brParse&quot;, package.argparse())</text>
<text text-anchor="middle" x="8167.5" y="-24863.34" font-family="Inconsolata" font-size="14.00" fill="#000000">brParse</text>
<text text-anchor="middle" x="8167.5" y="-24847.94" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;: name &quot;bridge&quot;</text>
<text text-anchor="middle" x="8167.5" y="-24832.54" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;: description &quot;An lua, howth castle &amp; environs.&quot;</text>
<text text-anchor="middle" x="8167.5" y="-24817.1399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;: epilog &quot;For more info, see https://specialcircumstanc.es&quot;</text>
<text text-anchor="middle" x="8167.5" y="-24801.7399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;: argument (&quot;verb&quot;, &quot;the entry module&quot;)</text>
<text text-anchor="middle" x="8167.5" y="-24786.3399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;: args(&quot;?&quot;)</text>
<text text-anchor="middle" x="8167.5" y="-24770.9398" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; this will fetch us our REPL using the usual frippery,</text>
<text text-anchor="middle" x="8167.5" y="-24755.5398" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; we&#39;ve put a stub block around it as deprecation</text>
<text text-anchor="middle" x="8167.5" y="-24740.1398" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45;[[</text>
<text text-anchor="middle" x="8167.5" y="-24724.7397" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _strip(argument)</text>
<text text-anchor="middle" x="8167.5" y="-24709.3397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; a dimwitted thing which removes a magic argument</text>
<text text-anchor="middle" x="8167.5" y="-24693.9397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 0, #argument do</text>
<text text-anchor="middle" x="8167.5" y="-24678.5397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if i == 0 then</text>
<text text-anchor="middle" x="8167.5" y="-24663.1396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument[i] = nil</text>
<text text-anchor="middle" x="8167.5" y="-24647.7396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="8167.5" y="-24632.3396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument[i&#45;1] = argument[i]</text>
<text text-anchor="middle" x="8167.5" y="-24616.9395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="8167.5" y="-24601.5395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="8167.5" y="-24586.1395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument[#argument] = nil</text>
<text text-anchor="middle" x="8167.5" y="-24570.7394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="8167.5" y="-24555.3394" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="8167.5" y="-24523.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _makeParsyHappen()</text>
<text text-anchor="middle" x="8167.5" y="-24508.5393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; stop trying to make Parsy happen.</text>
<text text-anchor="middle" x="8167.5" y="-24493.1393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parsed, msg = brParse:pparse()</text>
<text text-anchor="middle" x="8167.5" y="-24477.7393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;rawset(_G, &quot;_isParsed&quot;, parsed)</text>
<text text-anchor="middle" x="8167.5" y="-24462.3392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;rawset(_G, &quot;_argResult&quot;, msg)</text>
<text text-anchor="middle" x="8167.5" y="-24446.9392" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="8167.5" y="-24415.5392" font-family="Inconsolata" font-size="14.00" fill="#000000">if rawget(_G, &quot;arg&quot;) ~= nil then</text>
<text text-anchor="middle" x="8167.5" y="-24400.1392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; time for an ugly hack:</text>
<text text-anchor="middle" x="8167.5" y="-24384.7391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if arg[0] == &quot;OLD&quot; then</text>
<text text-anchor="middle" x="8167.5" y="-24369.3391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;_strip(arg)</text>
<text text-anchor="middle" x="8167.5" y="-24353.9391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;_makeParsyHappen()</text>
<text text-anchor="middle" x="8167.5" y="-24338.539" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; do old boot sequence</text>
<text text-anchor="middle" x="8167.5" y="-24323.139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if string.sub(arg[0], &#45;4) == &quot;.lua&quot; then</text>
<text text-anchor="middle" x="8167.5" y="-24307.739" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0])()</text>
<text text-anchor="middle" x="8167.5" y="-24292.3389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif string.sub(arg[0], &#45;4) == &quot;.raw&quot; then</text>
<text text-anchor="middle" x="8167.5" y="-24276.9389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0])()</text>
<text text-anchor="middle" x="8167.5" y="-24261.5389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="8167.5" y="-24246.1388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0] .. &quot;.lua&quot;)()</text>
<text text-anchor="middle" x="8167.5" y="-24230.7388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="8167.5" y="-24215.3388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="8167.5" y="-24199.9387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;_makeParsyHappen()</text>
<text text-anchor="middle" x="8167.5" y="-24184.5387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="8167.5" y="-24169.1387" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="8167.5" y="-24153.7387" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;]]</text>
</g>
<!-- codeblock_135&#45;&gt;leaf_153 -->
<g id="edge153" class="edge">
<title>codeblock_135&#45;&gt;leaf_153</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M8023.5354,-25184.4485C8032.3385,-25144.7632 8054.4361,-25045.1445 8078.748,-24935.5437"/>
<polygon fill="#000000" stroke="#000000" points="8082.2063,-24936.1149 8080.955,-24925.5942 8075.3724,-24934.5989 8082.2063,-24936.1149"/>
</g>
<!-- leaf_141 -->
<g id="node142" class="node">
<title>leaf_141</title>
<polygon fill="none" stroke="#c0c0c0" points="7280.5,-23754.9394 6858.5,-23754.9394 6858.5,-23699.1364 7280.5,-23699.1364 7280.5,-23754.9394"/>
<text text-anchor="middle" x="7069.5" y="-23707.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">Currently we are doing the dumbest possible thing to parse</text>
</g>
<!-- raw_137&#45;&gt;leaf_141 -->
<g id="edge141" class="edge">
<title>raw_137&#45;&gt;leaf_141</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7235.7574,-24517.2493C7244.449,-24441.7433 7271.6965,-24146.4944 7197.5,-23922.2382 7177.145,-23860.7158 7132.2774,-23799.8906 7101.4619,-23762.8956"/>
<polygon fill="#000000" stroke="#000000" points="7103.8537,-23760.3031 7094.7279,-23754.9207 7098.5054,-23764.8193 7103.8537,-23760.3031"/>
</g>
<!-- leaf_142 -->
<g id="node143" class="node">
<title>leaf_142</title>
<polygon fill="none" stroke="#c0c0c0" points="7352.5,-23745.0379 7298.5,-23745.0379 7298.5,-23709.0379 7352.5,-23709.0379 7352.5,-23745.0379"/>
<text text-anchor="middle" x="7325.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_138&#45;&gt;leaf_142 -->
<g id="edge142" class="edge">
<title>prespace_138&#45;&gt;leaf_142</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7324.5223,-24517.4213C7324.6517,-24412.8393 7325.3058,-23884.0356 7325.465,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="7328.9652,-23755.1038 7325.4777,-23745.0994 7321.9652,-23755.0951 7328.9652,-23755.1038"/>
</g>
<!-- leaf_143 -->
<g id="node144" class="node">
<title>leaf_143</title>
<polygon fill="none" stroke="#c0c0c0" points="7424.5,-23745.0379 7370.5,-23745.0379 7370.5,-23709.0379 7424.5,-23709.0379 7424.5,-23745.0379"/>
<text text-anchor="middle" x="7397.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">br</text>
</g>
<!-- literal_139&#45;&gt;leaf_143 -->
<g id="edge143" class="edge">
<title>literal_139&#45;&gt;leaf_143</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7419.9874,-24517.4213C7417.0119,-24412.8393 7401.9668,-23884.0356 7398.3045,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="7401.7969,-23754.9958 7398.0139,-23745.0994 7394.7998,-23755.195 7401.7969,-23754.9958"/>
</g>
<!-- leaf_144 -->
<g id="node145" class="node">
<title>leaf_144</title>
<polygon fill="none" stroke="#c0c0c0" points="7550,-23745.0379 7443,-23745.0379 7443,-23709.0379 7550,-23709.0379 7550,-23745.0379"/>
<text text-anchor="middle" x="7496.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> invocations.</text>
</g>
<!-- raw_140&#45;&gt;leaf_144 -->
<g id="edge144" class="edge">
<title>raw_140&#45;&gt;leaf_144</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7496.5,-24517.4213C7496.5,-24412.8393 7496.5,-23884.0356 7496.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="7500.0001,-23755.0994 7496.5,-23745.0994 7493.0001,-23755.0995 7500.0001,-23755.0994"/>
</g>
<!-- leaf_149 -->
<g id="node150" class="node">
<title>leaf_149</title>
<polygon fill="none" stroke="#c0c0c0" points="7696.5,-23746.94 7568.5,-23746.94 7568.5,-23707.1358 7696.5,-23707.1358 7696.5,-23746.94"/>
<text text-anchor="middle" x="7632.5" y="-23715.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">Now that we have</text>
</g>
<!-- raw_145&#45;&gt;leaf_149 -->
<g id="edge149" class="edge">
<title>raw_145&#45;&gt;leaf_149</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7633.4777,-24517.4213C7633.3489,-24413.3007 7632.7,-23888.6931 7632.5371,-23757.0414"/>
<polygon fill="#000000" stroke="#000000" points="7636.037,-23756.8836 7632.5246,-23746.888 7629.037,-23756.8923 7636.037,-23756.8836"/>
</g>
<!-- leaf_150 -->
<g id="node151" class="node">
<title>leaf_150</title>
<polygon fill="none" stroke="#c0c0c0" points="7768.5,-23745.0379 7714.5,-23745.0379 7714.5,-23709.0379 7768.5,-23709.0379 7768.5,-23745.0379"/>
<text text-anchor="middle" x="7741.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_146&#45;&gt;leaf_150 -->
<g id="edge150" class="edge">
<title>prespace_146&#45;&gt;leaf_150</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7725.8566,-24517.4213C7727.9265,-24412.8393 7738.3927,-23884.0356 7740.9403,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="7744.4439,-23755.1668 7741.1425,-23745.0994 7737.4452,-23755.0282 7744.4439,-23755.1668"/>
</g>
<!-- leaf_151 -->
<g id="node152" class="node">
<title>leaf_151</title>
<polygon fill="none" stroke="#c0c0c0" points="7858.5,-23745.0379 7786.5,-23745.0379 7786.5,-23709.0379 7858.5,-23709.0379 7858.5,-23745.0379"/>
<text text-anchor="middle" x="7822.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse</text>
</g>
<!-- literal_147&#45;&gt;leaf_151 -->
<g id="edge151" class="edge">
<title>literal_147&#45;&gt;leaf_151</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7821.5223,-24517.4213C7821.6517,-24412.8393 7822.3058,-23884.0356 7822.465,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="7825.9652,-23755.1038 7822.4777,-23745.0994 7818.9652,-23755.0951 7825.9652,-23755.1038"/>
</g>
<!-- leaf_152 -->
<g id="node153" class="node">
<title>leaf_152</title>
<polygon fill="none" stroke="#c0c0c0" points="8074.5,-23745.0379 7876.5,-23745.0379 7876.5,-23709.0379 8074.5,-23709.0379 8074.5,-23745.0379"/>
<text text-anchor="middle" x="7975.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> it&#39;s time to do it right.</text>
</g>
<!-- raw_148&#45;&gt;leaf_152 -->
<g id="edge152" class="edge">
<title>raw_148&#45;&gt;leaf_152</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7897.5522,-24517.2827C7897.9791,-24443.0836 7901.713,-24155.7632 7933.5,-23922.2382 7941.7053,-23861.9578 7958.3993,-23792.5883 7968.0869,-23754.922"/>
<polygon fill="#000000" stroke="#000000" points="7971.4927,-23755.7316 7970.6206,-23745.1728 7964.7177,-23753.9709 7971.4927,-23755.7316"/>
</g>
</g>
</svg>
