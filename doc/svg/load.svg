<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="7412pt" height="25445pt"
 viewBox="0.00 0.00 7411.50 25444.64" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 25440.6405)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-25440.6405 7407.5,-25440.6405 7407.5,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1025.5" cy="-25418.6405" rx="51.795" ry="18"/>
<text text-anchor="middle" x="1025.5" y="-25414.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 1709</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1025.5" cy="-25346.6405" rx="70.655" ry="18"/>
<text text-anchor="middle" x="1025.5" y="-25342.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;1587</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1025.5,-25400.4719C1025.5,-25392.7715 1025.5,-25383.6149 1025.5,-25375.0572"/>
<polygon fill="#000000" stroke="#000000" points="1029.0001,-25375.0538 1025.5,-25365.0538 1022.0001,-25375.0538 1029.0001,-25375.0538"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="137.5" cy="-25274.6405" rx="39.232" ry="18"/>
<text text-anchor="middle" x="137.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : load</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M956.2448,-25343.1209C823.2872,-25336.0448 523.1334,-25318.5268 271.5,-25292.6405 242.6664,-25289.6743 210.4706,-25285.3815 184.8653,-25281.7321"/>
<polygon fill="#000000" stroke="#000000" points="185.0799,-25278.227 174.683,-25280.2654 184.0819,-25285.1555 185.0799,-25278.227"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="312.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="312.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M959.7007,-25339.996C815.3015,-25325.4143 474.0181,-25290.9509 354.6262,-25278.8945"/>
<polygon fill="#000000" stroke="#000000" points="354.735,-25275.3878 344.4339,-25277.8653 354.0317,-25282.3524 354.735,-25275.3878"/>
</g>
<!-- prose_4 -->
<g id="node5" class="node">
<title>prose_4</title>
<ellipse fill="none" stroke="#000000" cx="717.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="717.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;prose_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M972.9664,-25334.4739C925.9352,-25323.5671 855.0971,-25307.1035 793.5,-25292.6405 781.7588,-25289.8837 769.0019,-25286.8697 757.3526,-25284.1099"/>
<polygon fill="#000000" stroke="#000000" points="757.9914,-25280.6644 747.4537,-25281.763 756.3765,-25287.4756 757.9914,-25280.6644"/>
</g>
<!-- prose_5 -->
<g id="node6" class="node">
<title>prose_5</title>
<ellipse fill="none" stroke="#000000" cx="834.5" cy="-25274.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="834.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;prose_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M985.9247,-25331.7221C952.1575,-25318.9931 903.9878,-25300.8349 871.1031,-25288.4386"/>
<polygon fill="#000000" stroke="#000000" points="872.0129,-25285.0412 861.4211,-25284.7888 869.5438,-25291.5912 872.0129,-25285.0412"/>
</g>
<!-- section_6 -->
<g id="node7" class="node">
<title>section_6</title>
<ellipse fill="none" stroke="#000000" cx="1043.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1043.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 12&#45;21</text>
</g>
<!-- section_1&#45;&gt;section_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;section_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1030.0422,-25328.4719C1031.9884,-25320.6869 1034.3068,-25311.4135 1036.4663,-25302.7753"/>
<polygon fill="#000000" stroke="#000000" points="1039.8668,-25303.6041 1038.8967,-25293.0538 1033.0758,-25301.9063 1039.8668,-25303.6041"/>
</g>
<!-- section_7 -->
<g id="node8" class="node">
<title>section_7</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 22&#45;33</text>
</g>
<!-- section_1&#45;&gt;section_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;section_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1092.248,-25340.6257C1240.8278,-25327.2368 1597.8515,-25295.0644 1751.8147,-25281.1904"/>
<polygon fill="#000000" stroke="#000000" points="1752.4554,-25284.6469 1762.1009,-25280.2635 1751.8271,-25277.6752 1752.4554,-25284.6469"/>
</g>
<!-- section_8 -->
<g id="node9" class="node">
<title>section_8</title>
<ellipse fill="none" stroke="#000000" cx="3009.5" cy="-25274.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="3009.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 34&#45;39</text>
</g>
<!-- section_1&#45;&gt;section_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;section_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1095.5289,-25344.0992C1401.1735,-25333.0072 2617.1323,-25288.8797 2933.7901,-25277.3881"/>
<polygon fill="#000000" stroke="#000000" points="2934.3627,-25280.8697 2944.2292,-25277.0092 2934.1088,-25273.8743 2934.3627,-25280.8697"/>
</g>
<!-- section_9 -->
<g id="node10" class="node">
<title>section_9</title>
<ellipse fill="none" stroke="#000000" cx="5760.5" cy="-25274.6405" rx="85.1652" ry="18"/>
<text text-anchor="middle" x="5760.5" y="-25270.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1588&#45;1674</text>
</g>
<!-- section_1&#45;&gt;section_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;section_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1096.1091,-25345.5669C1631.4858,-25337.426 5047.1253,-25285.4881 5664.8108,-25276.0956"/>
<polygon fill="#000000" stroke="#000000" points="5665.0606,-25279.5923 5675.0062,-25275.9406 5664.9541,-25272.5931 5665.0606,-25279.5923"/>
</g>
<!-- leaf_10 -->
<g id="node11" class="node">
<title>leaf_10</title>
<polygon fill="none" stroke="#c0c0c0" points="80.5,-25220.6405 22.5,-25220.6405 22.5,-25184.6405 80.5,-25184.6405 80.5,-25220.6405"/>
<text text-anchor="middle" x="51.5" y="-25199.1406" font-family="Inconsolata" font-size="14.00" fill="#000000">* load</text>
</g>
<!-- header_2&#45;&gt;leaf_10 -->
<g id="edge10" class="edge">
<title>header_2&#45;&gt;leaf_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M118.4138,-25258.6614C107.4537,-25249.4855 93.4543,-25237.7651 81.0961,-25227.4187"/>
<polygon fill="#000000" stroke="#000000" points="83.1749,-25224.5944 73.2605,-25220.8586 78.6813,-25229.9617 83.1749,-25224.5944"/>
</g>
<!-- raw_11 -->
<g id="node12" class="node">
<title>raw_11</title>
<ellipse fill="none" stroke="#000000" cx="125.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="125.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_11 -->
<g id="edge11" class="edge">
<title>prose_3&#45;&gt;raw_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M284.2815,-25265.6777C253.6521,-25255.6891 203.4919,-25238.5702 161.5,-25220.6405 159.7167,-25219.8791 157.8969,-25219.0712 156.0697,-25218.2359"/>
<polygon fill="#000000" stroke="#000000" points="157.5375,-25215.0584 147.004,-25213.9191 154.528,-25221.3784 157.5375,-25215.0584"/>
</g>
<!-- prespace_12 -->
<g id="node13" class="node">
<title>prespace_12</title>
<ellipse fill="none" stroke="#000000" cx="216.5" cy="-25202.6405" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="216.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_3&#45;&gt;prespace_12 -->
<g id="edge12" class="edge">
<title>prose_3&#45;&gt;prespace_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M293.073,-25260.0703C279.5746,-25249.9465 261.3362,-25236.2677 246.0453,-25224.7995"/>
<polygon fill="#000000" stroke="#000000" points="248.0024,-25221.8924 237.9024,-25218.6923 243.8024,-25227.4924 248.0024,-25221.8924"/>
</g>
<!-- literal_13 -->
<g id="node14" class="node">
<title>literal_13</title>
<ellipse fill="none" stroke="#000000" cx="312.5" cy="-25202.6405" rx="31.481" ry="18"/>
<text text-anchor="middle" x="312.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_3&#45;&gt;literal_13 -->
<g id="edge13" class="edge">
<title>prose_3&#45;&gt;literal_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M312.5,-25256.4719C312.5,-25248.7715 312.5,-25239.6149 312.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="316.0001,-25231.0538 312.5,-25221.0538 309.0001,-25231.0538 316.0001,-25231.0538"/>
</g>
<!-- raw_14 -->
<g id="node15" class="node">
<title>raw_14</title>
<ellipse fill="none" stroke="#000000" cx="388.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="388.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_14 -->
<g id="edge14" class="edge">
<title>prose_3&#45;&gt;raw_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M328.9909,-25259.0176C339.6629,-25248.9073 353.7097,-25235.5998 365.476,-25224.4527"/>
<polygon fill="#000000" stroke="#000000" points="367.968,-25226.9132 372.8204,-25217.4949 363.1538,-25221.8315 367.968,-25226.9132"/>
</g>
<!-- raw_19 -->
<g id="node20" class="node">
<title>raw_19</title>
<ellipse fill="none" stroke="#000000" cx="561.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="561.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_19 -->
<g id="edge19" class="edge">
<title>prose_4&#45;&gt;raw_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M692.4359,-25263.0725C665.5074,-25250.644 622.6408,-25230.8594 593.3433,-25217.3374"/>
<polygon fill="#000000" stroke="#000000" points="594.5167,-25214.0243 583.9704,-25213.0115 591.5832,-25220.38 594.5167,-25214.0243"/>
</g>
<!-- raw_21 -->
<g id="node22" class="node">
<title>raw_21</title>
<ellipse fill="none" stroke="#000000" cx="738.5" cy="-25202.6405" rx="27" ry="18"/>
<text text-anchor="middle" x="738.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_5&#45;&gt;raw_21 -->
<g id="edge21" class="edge">
<title>prose_5&#45;&gt;raw_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M815.073,-25260.0703C800.65,-25249.253 780.8156,-25234.3772 764.9473,-25222.476"/>
<polygon fill="#000000" stroke="#000000" points="766.6992,-25219.4149 756.5992,-25216.2149 762.4992,-25225.015 766.6992,-25219.4149"/>
</g>
<!-- header_23 -->
<g id="node24" class="node">
<title>header_23</title>
<ellipse fill="none" stroke="#000000" cx="949.5" cy="-25202.6405" rx="92.3882" ry="18"/>
<text text-anchor="middle" x="949.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">3 : Check for lua&#45;utf8</text>
</g>
<!-- section_6&#45;&gt;header_23 -->
<g id="edge23" class="edge">
<title>section_6&#45;&gt;header_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1021.2233,-25257.5775C1009.0841,-25248.2795 993.8689,-25236.6253 980.5795,-25226.4461"/>
<polygon fill="#000000" stroke="#000000" points="982.6655,-25223.6352 972.5984,-25220.333 978.409,-25229.1923 982.6655,-25223.6352"/>
</g>
<!-- prose_24 -->
<g id="node25" class="node">
<title>prose_24</title>
<ellipse fill="none" stroke="#000000" cx="1091.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1091.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_6&#45;&gt;prose_24 -->
<g id="edge24" class="edge">
<title>section_6&#45;&gt;prose_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1055.3652,-25256.8428C1061.1466,-25248.1706 1068.203,-25237.586 1074.5407,-25228.0795"/>
<polygon fill="#000000" stroke="#000000" points="1077.467,-25229.9998 1080.1019,-25219.7378 1071.6426,-25226.1168 1077.467,-25229.9998"/>
</g>
<!-- codeblock_25 -->
<g id="node26" class="node">
<title>codeblock_25</title>
<ellipse fill="none" stroke="#000000" cx="1241.5" cy="-25202.6405" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="1241.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 16&#45;19</text>
</g>
<!-- section_6&#45;&gt;codeblock_25 -->
<g id="edge25" class="edge">
<title>section_6&#45;&gt;codeblock_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1083.0924,-25260.2433C1113.8042,-25249.0754 1156.6201,-25233.506 1189.9966,-25221.369"/>
<polygon fill="#000000" stroke="#000000" points="1191.3822,-25224.5895 1199.584,-25217.8827 1188.9899,-25218.0109 1191.3822,-25224.5895"/>
</g>
<!-- header_30 -->
<g id="node31" class="node">
<title>header_30</title>
<ellipse fill="none" stroke="#000000" cx="1582.5" cy="-25202.6405" rx="68.717" ry="18"/>
<text text-anchor="middle" x="1582.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Bridge Path</text>
</g>
<!-- section_7&#45;&gt;header_30 -->
<g id="edge30" class="edge">
<title>section_7&#45;&gt;header_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1779.8314,-25261.3507C1739.7936,-25249.4387 1680.91,-25231.9195 1637.8888,-25219.1198"/>
<polygon fill="#000000" stroke="#000000" points="1638.7234,-25215.7166 1628.1405,-25216.2195 1636.7272,-25222.426 1638.7234,-25215.7166"/>
</g>
<!-- prose_31 -->
<g id="node32" class="node">
<title>prose_31</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_7&#45;&gt;prose_31 -->
<g id="edge31" class="edge">
<title>section_7&#45;&gt;prose_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.5,-25256.4719C1824.5,-25248.7715 1824.5,-25239.6149 1824.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="1828.0001,-25231.0538 1824.5,-25221.0538 1821.0001,-25231.0538 1828.0001,-25231.0538"/>
</g>
<!-- prose_32 -->
<g id="node33" class="node">
<title>prose_32</title>
<ellipse fill="none" stroke="#000000" cx="2477.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2477.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_7&#45;&gt;prose_32 -->
<g id="edge32" class="edge">
<title>section_7&#45;&gt;prose_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1885.6392,-25267.8993C2016.9442,-25253.4216 2323.0679,-25219.6683 2435.291,-25207.2945"/>
<polygon fill="#000000" stroke="#000000" points="2435.9775,-25210.7401 2445.5336,-25206.1652 2435.2102,-25203.7823 2435.9775,-25210.7401"/>
</g>
<!-- codeblock_33 -->
<g id="node34" class="node">
<title>codeblock_33</title>
<ellipse fill="none" stroke="#000000" cx="2686.5" cy="-25202.6405" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="2686.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 28&#45;31</text>
</g>
<!-- section_7&#45;&gt;codeblock_33 -->
<g id="edge33" class="edge">
<title>section_7&#45;&gt;codeblock_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1888.6584,-25270.2747C2011.1696,-25261.799 2286.8512,-25242.058 2518.5,-25220.6405 2547.2458,-25217.9828 2578.7182,-25214.7083 2606.5726,-25211.6841"/>
<polygon fill="#000000" stroke="#000000" points="2607.0983,-25215.1476 2616.6593,-25210.5828 2606.3385,-25208.1889 2607.0983,-25215.1476"/>
</g>
<!-- header_58 -->
<g id="node59" class="node">
<title>header_58</title>
<ellipse fill="none" stroke="#000000" cx="2870.5" cy="-25202.6405" rx="57.5925" ry="18"/>
<text text-anchor="middle" x="2870.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Argparse</text>
</g>
<!-- section_8&#45;&gt;header_58 -->
<g id="edge58" class="edge">
<title>section_8&#45;&gt;header_58</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2978.6514,-25258.6614C2958.2161,-25248.0762 2931.2439,-25234.105 2909.3477,-25222.7631"/>
<polygon fill="#000000" stroke="#000000" points="2910.7976,-25219.5725 2900.3083,-25218.0808 2907.578,-25225.7881 2910.7976,-25219.5725"/>
</g>
<!-- prose_59 -->
<g id="node60" class="node">
<title>prose_59</title>
<ellipse fill="none" stroke="#000000" cx="3152.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3152.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_8&#45;&gt;prose_59 -->
<g id="edge59" class="edge">
<title>section_8&#45;&gt;prose_59</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3041.2363,-25258.6614C3064.3785,-25247.0094 3095.6695,-25231.2545 3119.1738,-25219.4202"/>
<polygon fill="#000000" stroke="#000000" points="3121.046,-25222.3962 3128.4037,-25214.7729 3117.8979,-25216.144 3121.046,-25222.3962"/>
</g>
<!-- section_60 -->
<g id="node61" class="node">
<title>section_60</title>
<ellipse fill="none" stroke="#000000" cx="4189.5" cy="-25202.6405" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="4189.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 40&#45;70</text>
</g>
<!-- section_8&#45;&gt;section_60 -->
<g id="edge60" class="edge">
<title>section_8&#45;&gt;section_60</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3073.7799,-25270.7184C3276.0675,-25258.3754 3898.9639,-25220.3682 4114.8844,-25207.1934"/>
<polygon fill="#000000" stroke="#000000" points="4115.3936,-25210.6689 4125.1618,-25206.5663 4114.9672,-25203.6819 4115.3936,-25210.6689"/>
</g>
<!-- header_104 -->
<g id="node105" class="node">
<title>header_104</title>
<ellipse fill="none" stroke="#000000" cx="5654.5" cy="-25202.6405" rx="55.1438" ry="18"/>
<text text-anchor="middle" x="5654.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">2 : Stricture</text>
</g>
<!-- section_9&#45;&gt;header_104 -->
<g id="edge104" class="edge">
<title>section_9&#45;&gt;header_104</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5735.1104,-25257.3947C5720.6404,-25247.5661 5702.361,-25235.1499 5686.8686,-25224.6268"/>
<polygon fill="#000000" stroke="#000000" points="5688.8291,-25221.7274 5678.5903,-25219.0038 5684.8959,-25227.5179 5688.8291,-25221.7274"/>
</g>
<!-- prose_105 -->
<g id="node106" class="node">
<title>prose_105</title>
<ellipse fill="none" stroke="#000000" cx="5760.5" cy="-25202.6405" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="5760.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_9&#45;&gt;prose_105 -->
<g id="edge105" class="edge">
<title>section_9&#45;&gt;prose_105</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5760.5,-25256.4719C5760.5,-25248.7715 5760.5,-25239.6149 5760.5,-25231.0572"/>
<polygon fill="#000000" stroke="#000000" points="5764.0001,-25231.0538 5760.5,-25221.0538 5757.0001,-25231.0538 5764.0001,-25231.0538"/>
</g>
<!-- codeblock_106 -->
<g id="node107" class="node">
<title>codeblock_106</title>
<ellipse fill="none" stroke="#000000" cx="6011.5" cy="-25202.6405" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="6011.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1592&#45;1672</text>
</g>
<!-- section_9&#45;&gt;codeblock_106 -->
<g id="edge106" class="edge">
<title>section_9&#45;&gt;codeblock_106</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5811.2936,-25260.0703C5851.0295,-25248.6719 5906.4752,-25232.7672 5948.9445,-25220.5847"/>
<polygon fill="#000000" stroke="#000000" points="5949.9719,-25223.9313 5958.6191,-25217.8096 5948.0417,-25217.2026 5949.9719,-25223.9313"/>
</g>
<!-- section_107 -->
<g id="node108" class="node">
<title>section_107</title>
<ellipse fill="none" stroke="#000000" cx="6597.5" cy="-25202.6405" rx="85.1652" ry="18"/>
<text text-anchor="middle" x="6597.5" y="-25198.4405" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1675&#45;1709</text>
</g>
<!-- section_9&#45;&gt;section_107 -->
<g id="edge107" class="edge">
<title>section_9&#45;&gt;section_107</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5839.6199,-25267.8345C5996.0877,-25254.3749 6344.0985,-25224.4385 6508.3718,-25210.3075"/>
<polygon fill="#000000" stroke="#000000" points="6508.7818,-25213.7852 6518.445,-25209.441 6508.1818,-25206.811 6508.7818,-25213.7852"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="177,-24563.3408 0,-24563.3408 0,-24507.5379 177,-24507.5379 177,-24563.3408"/>
<text text-anchor="middle" x="88.5" y="-24515.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">The responsibilities of</text>
</g>
<!-- raw_11&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>raw_11&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M124.4912,-25184.4485C119.5168,-25094.7496 97.5629,-24698.8663 90.6156,-24573.5895"/>
<polygon fill="#000000" stroke="#000000" points="94.0956,-24573.1303 90.0472,-24563.3395 87.1064,-24573.518 94.0956,-24573.1303"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="249.5,-24553.4394 195.5,-24553.4394 195.5,-24517.4394 249.5,-24517.4394 249.5,-24553.4394"/>
<text text-anchor="middle" x="222.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_12&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>prespace_12&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M216.6636,-25184.4485C217.4924,-25092.2805 221.2284,-24676.8395 222.2443,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="225.7464,-24563.6462 222.3365,-24553.6151 218.7467,-24563.5832 225.7464,-24563.6462"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="333.5,-24553.4394 279.5,-24553.4394 279.5,-24517.4394 333.5,-24517.4394 333.5,-24553.4394"/>
<text text-anchor="middle" x="306.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">load</text>
</g>
<!-- literal_13&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>literal_13&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M312.3364,-25184.4485C311.5076,-25092.2805 307.7716,-24676.8395 306.7557,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="310.2533,-24563.5832 306.6635,-24553.6151 303.2536,-24563.6462 310.2533,-24563.5832"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="405.5,-24553.4394 351.5,-24553.4394 351.5,-24517.4394 405.5,-24517.4394 405.5,-24553.4394"/>
<text text-anchor="middle" x="378.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">:</text>
</g>
<!-- raw_14&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>raw_14&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M388.2273,-25184.4485C386.8459,-25092.2805 380.6193,-24676.8395 378.9261,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="382.422,-24563.5615 378.7724,-24553.6151 375.4228,-24563.6665 382.422,-24563.5615"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="559,-24555.3414 424,-24555.3414 424,-24515.5373 559,-24515.5373 559,-24555.3414"/>
<text text-anchor="middle" x="491.5" y="-24523.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45; Parse arguments</text>
</g>
<!-- raw_19&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>raw_19&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M559.5914,-25184.4485C549.9648,-25092.6933 506.7249,-24680.5545 494.6441,-24565.4073"/>
<polygon fill="#000000" stroke="#000000" points="498.0989,-24564.7921 493.5745,-24555.2119 491.1371,-24565.5225 498.0989,-24564.7921"/>
</g>
<!-- leaf_22 -->
<g id="node23" class="node">
<title>leaf_22</title>
<polygon fill="none" stroke="#c0c0c0" points="852,-24578.0404 577,-24578.0404 577,-24492.8383 852,-24492.8383 852,-24578.0404"/>
<text text-anchor="middle" x="714.5" y="-24547.0394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45; If interactive and scripts:</text>
<text text-anchor="middle" x="714.5" y="-24531.6394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Clone the global namespace</text>
<text text-anchor="middle" x="714.5" y="-24516.2394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Run scripts into namespace clone</text>
<text text-anchor="middle" x="714.5" y="-24500.8393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; Launch REPL.</text>
</g>
<!-- raw_21&#45;&gt;leaf_22 -->
<g id="edge22" class="edge">
<title>raw_21&#45;&gt;leaf_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M737.8456,-25184.4485C734.7374,-25098.0413 721.409,-24727.5095 716.4067,-24588.4461"/>
<polygon fill="#000000" stroke="#000000" points="719.8903,-24587.9255 716.033,-24578.0578 712.8949,-24588.1772 719.8903,-24587.9255"/>
</g>
<!-- leaf_26 -->
<g id="node27" class="node">
<title>leaf_26</title>
<polygon fill="none" stroke="#c0c0c0" points="1040.5,-24553.4394 870.5,-24553.4394 870.5,-24517.4394 1040.5,-24517.4394 1040.5,-24553.4394"/>
<text text-anchor="middle" x="955.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">*** Check for lua&#45;utf8</text>
</g>
<!-- header_23&#45;&gt;leaf_26 -->
<g id="edge26" class="edge">
<title>header_23&#45;&gt;leaf_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M949.6636,-25184.4485C950.4924,-25092.2805 954.2284,-24676.8395 955.2443,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="958.7464,-24563.6462 955.3365,-24553.6151 951.7467,-24563.5832 958.7464,-24563.6462"/>
</g>
<!-- raw_27 -->
<g id="node28" class="node">
<title>raw_27</title>
<ellipse fill="none" stroke="#000000" cx="1085.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1085.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_24&#45;&gt;raw_27 -->
<g id="edge27" class="edge">
<title>prose_24&#45;&gt;raw_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1091.3364,-25184.4485C1090.5076,-25092.2805 1086.7716,-24676.8395 1085.7557,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="1089.2533,-24563.5832 1085.6635,-24553.6151 1082.2536,-24563.6462 1089.2533,-24563.5832"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="1384.5,-24554.7399 1130.5,-24554.7399 1130.5,-24516.1388 1384.5,-24516.1388 1384.5,-24554.7399"/>
<text text-anchor="middle" x="1257.5" y="-24539.6394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; local utf8 = require &quot;lua&#45;utf8&quot;</text>
<text text-anchor="middle" x="1257.5" y="-24524.2394" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; assert(utf8, &quot;no utf8&quot;)</text>
</g>
<!-- codeblock_25&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>codeblock_25&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1241.9363,-25184.4485C1244.139,-25092.5921 1254.0418,-24679.6453 1256.7905,-24565.0275"/>
<polygon fill="#000000" stroke="#000000" points="1260.2928,-24564.9686 1257.0336,-24554.8876 1253.2948,-24564.8008 1260.2928,-24564.9686"/>
</g>
<!-- leaf_28 -->
<g id="node29" class="node">
<title>leaf_28</title>
<polygon fill="none" stroke="#c0c0c0" points="1112.5,-23745.0379 1058.5,-23745.0379 1058.5,-23709.0379 1112.5,-23709.0379 1112.5,-23745.0379"/>
</g>
<!-- raw_27&#45;&gt;leaf_28 -->
<g id="edge28" class="edge">
<title>raw_27&#45;&gt;leaf_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1085.5,-24517.4213C1085.5,-24412.8393 1085.5,-23884.0356 1085.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="1089.0001,-23755.0994 1085.5,-23745.0994 1082.0001,-23755.0995 1089.0001,-23755.0994"/>
</g>
<!-- leaf_34 -->
<g id="node35" class="node">
<title>leaf_34</title>
<polygon fill="none" stroke="#c0c0c0" points="1516.5,-24553.4394 1402.5,-24553.4394 1402.5,-24517.4394 1516.5,-24517.4394 1516.5,-24553.4394"/>
<text text-anchor="middle" x="1459.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Bridge Path</text>
</g>
<!-- header_30&#45;&gt;leaf_34 -->
<g id="edge34" class="edge">
<title>header_30&#45;&gt;leaf_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1557.7712,-25185.7593C1545.9542,-25176.2936 1532.8199,-25163.4215 1525.5,-25148.6405 1424.0173,-24943.7174 1445.9244,-24653.9362 1455.9745,-24563.5043"/>
<polygon fill="#000000" stroke="#000000" points="1459.4614,-24563.819 1457.1323,-24553.4833 1452.5076,-24563.0155 1459.4614,-24563.819"/>
</g>
<!-- raw_35 -->
<g id="node36" class="node">
<title>raw_35</title>
<ellipse fill="none" stroke="#000000" cx="1561.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1561.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_31&#45;&gt;raw_35 -->
<g id="edge35" class="edge">
<title>prose_31&#45;&gt;raw_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1792.3932,-25199.6502C1735.8891,-25193.6705 1622.2967,-25178.2032 1597.5,-25148.6405 1522.2978,-25058.9844 1549.5766,-24672.3924 1558.895,-24563.8675"/>
<polygon fill="#000000" stroke="#000000" points="1562.4002,-24563.9608 1559.7867,-24553.6934 1555.4269,-24563.3496 1562.4002,-24563.9608"/>
</g>
<!-- prespace_36 -->
<g id="node37" class="node">
<title>prespace_36</title>
<ellipse fill="none" stroke="#000000" cx="1652.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="1652.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_31&#45;&gt;prespace_36 -->
<g id="edge36" class="edge">
<title>prose_31&#45;&gt;prespace_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1793.5676,-25197.1433C1766.4105,-25190.5677 1728.2481,-25176.7105 1708.5,-25148.6405 1576.4066,-24960.883 1626.5219,-24656.631 1646.1036,-24563.4502"/>
<polygon fill="#000000" stroke="#000000" points="1649.5852,-24563.9083 1648.2727,-24553.3951 1642.7426,-24562.4321 1649.5852,-24563.9083"/>
</g>
<!-- literal_37 -->
<g id="node38" class="node">
<title>literal_37</title>
<ellipse fill="none" stroke="#000000" cx="1748.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="1748.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_31&#45;&gt;literal_37 -->
<g id="edge37" class="edge">
<title>prose_31&#45;&gt;literal_37</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1810.3367,-25186.3557C1802.4089,-25176.2223 1793.1989,-25162.5139 1788.5,-25148.6405 1715.6466,-24933.542 1736.295,-24652.1729 1745.3201,-24563.4727"/>
<polygon fill="#000000" stroke="#000000" points="1748.8144,-24563.7098 1746.3811,-24553.3982 1741.8529,-24562.9766 1748.8144,-24563.7098"/>
</g>
<!-- raw_38 -->
<g id="node39" class="node">
<title>raw_38</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_31&#45;&gt;raw_38 -->
<g id="edge38" class="edge">
<title>prose_31&#45;&gt;raw_38</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.5,-25184.4485C1824.5,-25092.2805 1824.5,-24676.8395 1824.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="1828.0001,-24563.6151 1824.5,-24553.6151 1821.0001,-24563.6151 1828.0001,-24563.6151"/>
</g>
<!-- prespace_39 -->
<g id="node40" class="node">
<title>prespace_39</title>
<ellipse fill="none" stroke="#000000" cx="1915.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="1915.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_31&#45;&gt;prespace_39 -->
<g id="edge39" class="edge">
<title>prose_31&#45;&gt;prespace_39</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1838.5409,-25186.3135C1846.4254,-25176.1651 1855.6328,-25162.4558 1860.5,-25148.6405 1936.02,-24934.2817 1924.031,-24652.9757 1917.8015,-24563.8162"/>
<polygon fill="#000000" stroke="#000000" points="1921.2805,-24563.399 1917.0589,-24553.6815 1914.2992,-24563.9106 1921.2805,-24563.399"/>
</g>
<!-- literal_40 -->
<g id="node41" class="node">
<title>literal_40</title>
<ellipse fill="none" stroke="#000000" cx="2011.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="2011.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_31&#45;&gt;literal_40 -->
<g id="edge40" class="edge">
<title>prose_31&#45;&gt;literal_40</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1854.5201,-25195.6156C1892.9572,-25185.9672 1956.3063,-25167.6387 1970.5,-25148.6405 2107.9298,-24964.6924 2043.2735,-24656.6725 2019.1777,-24563.1767"/>
<polygon fill="#000000" stroke="#000000" points="2022.5189,-24562.1203 2016.5864,-24553.3422 2015.7499,-24563.9039 2022.5189,-24562.1203"/>
</g>
<!-- raw_41 -->
<g id="node42" class="node">
<title>raw_41</title>
<ellipse fill="none" stroke="#000000" cx="2111.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2111.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_31&#45;&gt;raw_41 -->
<g id="edge41" class="edge">
<title>prose_31&#45;&gt;raw_41</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1856.4948,-25199.5544C1912.8191,-25193.4209 2026.1331,-25177.7154 2051.5,-25148.6405 2203.3308,-24974.616 2141.7361,-24657.9627 2118.7184,-24563.0452"/>
<polygon fill="#000000" stroke="#000000" points="2122.1117,-24562.187 2116.3057,-24553.3246 2115.3178,-24563.8733 2122.1117,-24562.187"/>
</g>
<!-- raw_49 -->
<g id="node50" class="node">
<title>raw_49</title>
<ellipse fill="none" stroke="#000000" cx="2358.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2358.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_32&#45;&gt;raw_49 -->
<g id="edge49" class="edge">
<title>prose_32&#45;&gt;raw_49</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2457.2384,-25188.5424C2444.9921,-25178.8305 2430.2879,-25164.7923 2422.5,-25148.6405 2323.2159,-24942.73 2345.0452,-24653.6088 2355.0091,-24563.4229"/>
<polygon fill="#000000" stroke="#000000" points="2358.4929,-24563.7637 2356.1565,-24553.4297 2351.5386,-24562.9652 2358.4929,-24563.7637"/>
</g>
<!-- prespace_50 -->
<g id="node51" class="node">
<title>prespace_50</title>
<ellipse fill="none" stroke="#000000" cx="2477.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="2477.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_32&#45;&gt;prespace_50 -->
<g id="edge50" class="edge">
<title>prose_32&#45;&gt;prespace_50</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2477.5,-25184.4485C2477.5,-25092.2805 2477.5,-24676.8395 2477.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2481.0001,-24563.6151 2477.5,-24553.6151 2474.0001,-24563.6151 2481.0001,-24563.6151"/>
</g>
<!-- literal_51 -->
<g id="node52" class="node">
<title>literal_51</title>
<ellipse fill="none" stroke="#000000" cx="2573.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="2573.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_32&#45;&gt;literal_51 -->
<g id="edge51" class="edge">
<title>prose_32&#45;&gt;literal_51</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2497.9674,-25188.6392C2510.2957,-25178.966 2525.0141,-25164.9345 2532.5,-25148.6405 2627.6303,-24941.5785 2592.5704,-24653.2271 2578.3347,-24563.328"/>
<polygon fill="#000000" stroke="#000000" points="2581.7744,-24562.6743 2576.712,-24553.3673 2574.8655,-24563.7999 2581.7744,-24562.6743"/>
</g>
<!-- raw_52 -->
<g id="node53" class="node">
<title>raw_52</title>
<ellipse fill="none" stroke="#000000" cx="2649.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2649.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_32&#45;&gt;raw_52 -->
<g id="edge52" class="edge">
<title>prose_32&#45;&gt;raw_52</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2509.2938,-25199.6377C2541.3371,-25194.7618 2589.3959,-25181.9979 2613.5,-25148.6405 2682.0376,-25053.7922 2659.521,-24670.9104 2651.6977,-24563.5503"/>
<polygon fill="#000000" stroke="#000000" points="2655.1813,-24563.1989 2650.9479,-24553.4866 2648.2006,-24563.7191 2655.1813,-24563.1989"/>
</g>
<!-- leaf_57 -->
<g id="node58" class="node">
<title>leaf_57</title>
<polygon fill="none" stroke="#c0c0c0" points="2748.5,-24553.4394 2694.5,-24553.4394 2694.5,-24517.4394 2748.5,-24517.4394 2748.5,-24553.4394"/>
</g>
<!-- codeblock_33&#45;&gt;leaf_57 -->
<g id="edge57" class="edge">
<title>codeblock_33&#45;&gt;leaf_57</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2687.4543,-25184.4485C2692.2893,-25092.2805 2714.0824,-24676.8395 2720.0085,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2723.5178,-24563.7848 2720.5465,-24553.6151 2716.5274,-24563.418 2723.5178,-24563.7848"/>
</g>
<!-- leaf_42 -->
<g id="node43" class="node">
<title>leaf_42</title>
<polygon fill="none" stroke="#c0c0c0" points="1428.5,-23745.0379 1374.5,-23745.0379 1374.5,-23709.0379 1428.5,-23709.0379 1428.5,-23745.0379"/>
</g>
<!-- raw_35&#45;&gt;leaf_42 -->
<g id="edge42" class="edge">
<title>raw_35&#45;&gt;leaf_42</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1562.9283,-24517.4061C1569.7518,-24426.6898 1595.8827,-24020.7094 1525.5,-23922.2382 1500.9278,-23887.8596 1464.8015,-23918.492 1437.5,-23886.2382 1406.1122,-23849.1568 1400.6194,-23790.3401 1400.4151,-23755.532"/>
<polygon fill="#000000" stroke="#000000" points="1403.9185,-23755.1633 1400.5085,-23745.1323 1396.9188,-23755.1004 1403.9185,-23755.1633"/>
</g>
<!-- leaf_43 -->
<g id="node44" class="node">
<title>leaf_43</title>
<polygon fill="none" stroke="#c0c0c0" points="1500.5,-23745.0379 1446.5,-23745.0379 1446.5,-23709.0379 1500.5,-23709.0379 1500.5,-23745.0379"/>
</g>
<!-- prespace_36&#45;&gt;leaf_43 -->
<g id="edge43" class="edge">
<title>prespace_36&#45;&gt;leaf_43</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1656.9886,-24517.3255C1675.5911,-24437.6995 1739.2311,-24114.2098 1597.5,-23922.2382 1572.4011,-23888.2422 1536.8015,-23918.492 1509.5,-23886.2382 1478.1122,-23849.1568 1472.6194,-23790.3401 1472.4151,-23755.532"/>
<polygon fill="#000000" stroke="#000000" points="1475.9185,-23755.1633 1472.5085,-23745.1323 1468.9188,-23755.1004 1475.9185,-23755.1633"/>
</g>
<!-- leaf_44 -->
<g id="node45" class="node">
<title>leaf_44</title>
<polygon fill="none" stroke="#c0c0c0" points="1576.5,-23745.0379 1518.5,-23745.0379 1518.5,-23709.0379 1576.5,-23709.0379 1576.5,-23745.0379"/>
<text text-anchor="middle" x="1547.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">bridge</text>
</g>
<!-- literal_37&#45;&gt;leaf_44 -->
<g id="edge44" class="edge">
<title>literal_37&#45;&gt;leaf_44</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1749.9553,-24517.254C1756.8889,-24425.7947 1783.2045,-24016.7585 1707.5,-23922.2382 1672.1586,-23878.1129 1624.4096,-23927.2515 1585.5,-23886.2382 1551.7365,-23850.6493 1546.2299,-23790.6592 1546.2236,-23755.3645"/>
<polygon fill="#000000" stroke="#000000" points="1549.7248,-23755.3088 1546.3731,-23745.2581 1542.7255,-23755.2052 1549.7248,-23755.3088"/>
</g>
<!-- leaf_45 -->
<g id="node46" class="node">
<title>leaf_45</title>
<polygon fill="none" stroke="#c0c0c0" points="1870,-23745.0379 1595,-23745.0379 1595,-23709.0379 1870,-23709.0379 1870,-23745.0379"/>
<text text-anchor="middle" x="1732.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> uses its own path, distinct from the</text>
</g>
<!-- raw_38&#45;&gt;leaf_45 -->
<g id="edge45" class="edge">
<title>raw_38&#45;&gt;leaf_45</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.8883,-24517.2152C1826.169,-24442.7542 1828.143,-24154.5586 1788.5,-23922.2382 1778.1194,-23861.4044 1755.7528,-23792.5003 1742.6446,-23755.0038"/>
<polygon fill="#000000" stroke="#000000" points="1745.8445,-23753.5544 1739.2106,-23745.2935 1739.2451,-23755.8883 1745.8445,-23753.5544"/>
</g>
<!-- leaf_46 -->
<g id="node47" class="node">
<title>leaf_46</title>
<polygon fill="none" stroke="#c0c0c0" points="1942.5,-23745.0379 1888.5,-23745.0379 1888.5,-23709.0379 1942.5,-23709.0379 1942.5,-23745.0379"/>
<text text-anchor="middle" x="1915.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_39&#45;&gt;leaf_46 -->
<g id="edge46" class="edge">
<title>prespace_39&#45;&gt;leaf_46</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1915.5,-24517.4213C1915.5,-24412.8393 1915.5,-23884.0356 1915.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="1919.0001,-23755.0994 1915.5,-23745.0994 1912.0001,-23755.0995 1919.0001,-23755.0994"/>
</g>
<!-- leaf_47 -->
<g id="node48" class="node">
<title>leaf_47</title>
<polygon fill="none" stroke="#c0c0c0" points="2032.5,-23745.0379 1960.5,-23745.0379 1960.5,-23709.0379 2032.5,-23709.0379 2032.5,-23745.0379"/>
<text text-anchor="middle" x="1996.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">LUA_PATH</text>
</g>
<!-- literal_40&#45;&gt;leaf_47 -->
<g id="edge47" class="edge">
<title>literal_40&#45;&gt;leaf_47</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2011.1657,-24517.4213C2009.2251,-24412.8393 1999.4131,-23884.0356 1997.0247,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2000.5201,-23755.0328 1996.8351,-23745.0994 1993.5214,-23755.1627 2000.5201,-23755.0328"/>
</g>
<!-- leaf_48 -->
<g id="node49" class="node">
<title>leaf_48</title>
<polygon fill="none" stroke="#c0c0c0" points="2220.5,-23745.0379 2050.5,-23745.0379 2050.5,-23709.0379 2220.5,-23709.0379 2220.5,-23745.0379"/>
<text text-anchor="middle" x="2135.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> environment variable.</text>
</g>
<!-- raw_41&#45;&gt;leaf_48 -->
<g id="edge48" class="edge">
<title>raw_41&#45;&gt;leaf_48</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2112.0349,-24517.4213C2115.1398,-24412.8393 2130.839,-23884.0356 2134.6605,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2138.1654,-23755.1989 2134.9638,-23745.0994 2131.1685,-23754.9911 2138.1654,-23755.1989"/>
</g>
<!-- leaf_53 -->
<g id="node54" class="node">
<title>leaf_53</title>
<polygon fill="none" stroke="#c0c0c0" points="2450.5,-23746.94 2238.5,-23746.94 2238.5,-23707.1358 2450.5,-23707.1358 2450.5,-23746.94"/>
<text text-anchor="middle" x="2344.5" y="-23715.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">This is, predictably enough,</text>
</g>
<!-- raw_49&#45;&gt;leaf_53 -->
<g id="edge53" class="edge">
<title>raw_49&#45;&gt;leaf_53</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2358.188,-24517.4213C2356.3848,-24413.3007 2347.2996,-23888.6931 2345.0196,-23757.0414"/>
<polygon fill="#000000" stroke="#000000" points="2348.5165,-23756.8258 2344.8438,-23746.888 2341.5175,-23756.9471 2348.5165,-23756.8258"/>
</g>
<!-- leaf_54 -->
<g id="node55" class="node">
<title>leaf_54</title>
<polygon fill="none" stroke="#c0c0c0" points="2522.5,-23745.0379 2468.5,-23745.0379 2468.5,-23709.0379 2522.5,-23709.0379 2522.5,-23745.0379"/>
<text text-anchor="middle" x="2495.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_50&#45;&gt;leaf_54 -->
<g id="edge54" class="edge">
<title>prespace_50&#45;&gt;leaf_54</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2477.9012,-24517.4213C2480.2298,-24412.8393 2492.0043,-23884.0356 2494.8704,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2498.3743,-23755.1749 2495.0978,-23745.0994 2491.376,-23755.019 2498.3743,-23755.1749"/>
</g>
<!-- leaf_55 -->
<g id="node56" class="node">
<title>leaf_55</title>
<polygon fill="none" stroke="#c0c0c0" points="2634,-23745.0379 2541,-23745.0379 2541,-23709.0379 2634,-23709.0379 2634,-23745.0379"/>
<text text-anchor="middle" x="2587.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">BRIDGE_PATH</text>
</g>
<!-- literal_51&#45;&gt;leaf_55 -->
<g id="edge55" class="edge">
<title>literal_51&#45;&gt;leaf_55</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2573.812,-24517.4213C2575.6232,-24412.8393 2584.7811,-23884.0356 2587.0103,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2590.5134,-23755.1586 2587.1872,-23745.0994 2583.5145,-23755.0373 2590.5134,-23755.1586"/>
</g>
<!-- leaf_56 -->
<g id="node57" class="node">
<title>leaf_56</title>
<polygon fill="none" stroke="#c0c0c0" points="2706.5,-23745.0379 2652.5,-23745.0379 2652.5,-23709.0379 2706.5,-23709.0379 2706.5,-23745.0379"/>
<text text-anchor="middle" x="2679.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">.</text>
</g>
<!-- raw_52&#45;&gt;leaf_56 -->
<g id="edge56" class="edge">
<title>raw_52&#45;&gt;leaf_56</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2650.1687,-24517.4213C2654.0497,-24412.8393 2673.6738,-23884.0356 2678.4506,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="2681.9564,-23755.2224 2678.8297,-23745.0994 2674.9612,-23754.9627 2681.9564,-23755.2224"/>
</g>
<!-- leaf_61 -->
<g id="node62" class="node">
<title>leaf_61</title>
<polygon fill="none" stroke="#c0c0c0" points="2882,-24553.4394 2789,-24553.4394 2789,-24517.4394 2882,-24517.4394 2882,-24553.4394"/>
<text text-anchor="middle" x="2835.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Argparse</text>
</g>
<!-- header_58&#45;&gt;leaf_61 -->
<g id="edge61" class="edge">
<title>header_58&#45;&gt;leaf_61</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2869.5457,-25184.4485C2864.7107,-25092.2805 2842.9176,-24676.8395 2836.9915,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="2840.4726,-24563.418 2836.4535,-24553.6151 2833.4822,-24563.7848 2840.4726,-24563.418"/>
</g>
<!-- raw_62 -->
<g id="node63" class="node">
<title>raw_62</title>
<ellipse fill="none" stroke="#000000" cx="2927.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="2927.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_59&#45;&gt;raw_62 -->
<g id="edge62" class="edge">
<title>prose_59&#45;&gt;raw_62</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3121.1127,-25198.1054C3072.6657,-25190.4113 2983.1862,-25173.2066 2963.5,-25148.6405 2890.3228,-25057.3241 2916.1546,-24671.9185 2925.0188,-24563.7661"/>
<polygon fill="#000000" stroke="#000000" points="2928.521,-24563.8844 2925.8673,-24553.6273 2921.5454,-24563.3005 2928.521,-24563.8844"/>
</g>
<!-- prespace_63 -->
<g id="node64" class="node">
<title>prespace_63</title>
<ellipse fill="none" stroke="#000000" cx="3018.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3018.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_59&#45;&gt;prespace_63 -->
<g id="edge63" class="edge">
<title>prose_59&#45;&gt;prespace_63</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3126.506,-25191.8829C3108.6766,-25183.0433 3086.2031,-25168.699 3074.5,-25148.6405 2959.1986,-24951.0206 2997.5483,-24655.233 3013.2237,-24563.5502"/>
<polygon fill="#000000" stroke="#000000" points="3016.6817,-24564.094 3014.968,-24553.6387 3009.7876,-24562.8806 3016.6817,-24564.094"/>
</g>
<!-- literal_64 -->
<g id="node65" class="node">
<title>literal_64</title>
<ellipse fill="none" stroke="#000000" cx="3114.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="3114.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_59&#45;&gt;literal_64 -->
<g id="edge64" class="edge">
<title>prose_59&#45;&gt;literal_64</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3151.4639,-25184.4485C3146.2145,-25092.2805 3122.5534,-24676.8395 3116.1193,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="3119.5982,-24563.3999 3115.5352,-24553.6151 3112.6096,-24563.798 3119.5982,-24563.3999"/>
</g>
<!-- raw_65 -->
<g id="node66" class="node">
<title>raw_65</title>
<ellipse fill="none" stroke="#000000" cx="3190.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="3190.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_59&#45;&gt;raw_65 -->
<g id="edge65" class="edge">
<title>prose_59&#45;&gt;raw_65</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3153.5361,-25184.4485C3158.7855,-25092.2805 3182.4466,-24676.8395 3188.8807,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="3192.3904,-24563.798 3189.4648,-24553.6151 3185.4018,-24563.3999 3192.3904,-24563.798"/>
</g>
<!-- prespace_66 -->
<g id="node67" class="node">
<title>prespace_66</title>
<ellipse fill="none" stroke="#000000" cx="3374.5" cy="-24535.4394" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3374.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_59&#45;&gt;prespace_66 -->
<g id="edge66" class="edge">
<title>prose_59&#45;&gt;prespace_66</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3177.051,-25190.634C3193.4647,-25181.3669 3214.2262,-25167.027 3226.5,-25148.6405 3356.6495,-24953.6734 3372.624,-24656.046 3374.3645,-24563.7362"/>
<polygon fill="#000000" stroke="#000000" points="3377.8672,-24563.5672 3374.5129,-24553.5174 3370.868,-24563.4655 3377.8672,-24563.5672"/>
</g>
<!-- literal_67 -->
<g id="node68" class="node">
<title>literal_67</title>
<ellipse fill="none" stroke="#000000" cx="3523.5" cy="-24535.4394" rx="31.481" ry="18"/>
<text text-anchor="middle" x="3523.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_59&#45;&gt;literal_67 -->
<g id="edge67" class="edge">
<title>prose_59&#45;&gt;literal_67</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3184.7805,-25200.8883C3250.4284,-25196.629 3396.1136,-25183.4045 3429.5,-25148.6405 3590.7507,-24980.7365 3546.7166,-24659.2218 3529.0987,-24563.1874"/>
<polygon fill="#000000" stroke="#000000" points="3532.5372,-24562.5338 3527.2409,-24553.3577 3525.659,-24563.8338 3532.5372,-24562.5338"/>
</g>
<!-- raw_68 -->
<g id="node69" class="node">
<title>raw_68</title>
<ellipse fill="none" stroke="#000000" cx="3666.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="3666.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_59&#45;&gt;raw_68 -->
<g id="edge68" class="edge">
<title>prose_59&#45;&gt;raw_68</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3184.5791,-25200.5996C3276.5441,-25194.4523 3536.2775,-25174.9061 3563.5,-25148.6405 3731.602,-24986.448 3689.113,-24660.3302 3671.9393,-24563.2907"/>
<polygon fill="#000000" stroke="#000000" points="3675.3661,-24562.5727 3670.127,-24553.3639 3668.48,-24563.83 3675.3661,-24562.5727"/>
</g>
<!-- header_76 -->
<g id="node77" class="node">
<title>header_76</title>
<ellipse fill="none" stroke="#000000" cx="3960.5" cy="-24535.4394" rx="52.7555" ry="18"/>
<text text-anchor="middle" x="3960.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">3 : License</text>
</g>
<!-- section_60&#45;&gt;header_76 -->
<g id="edge76" class="edge">
<title>section_60&#45;&gt;header_76</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4173.3476,-25184.7367C4164.9825,-25174.7065 4155.1552,-25161.6311 4148.5,-25148.6405 4040.3144,-24937.4675 3981.9754,-24652.9897 3965.457,-24563.5519"/>
<polygon fill="#000000" stroke="#000000" points="3968.8851,-24562.8405 3963.6493,-24553.6298 3961.9984,-24564.0952 3968.8851,-24562.8405"/>
</g>
<!-- prose_77 -->
<g id="node78" class="node">
<title>prose_77</title>
<ellipse fill="none" stroke="#000000" cx="4189.5" cy="-24535.4394" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="4189.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_60&#45;&gt;prose_77 -->
<g id="edge77" class="edge">
<title>section_60&#45;&gt;prose_77</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4189.5,-25184.4485C4189.5,-25092.2805 4189.5,-24676.8395 4189.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="4193.0001,-24563.6151 4189.5,-24553.6151 4186.0001,-24563.6151 4193.0001,-24563.6151"/>
</g>
<!-- codeblock_78 -->
<g id="node79" class="node">
<title>codeblock_78</title>
<ellipse fill="none" stroke="#000000" cx="4516.5" cy="-24535.4394" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="4516.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 47&#45;68</text>
</g>
<!-- section_60&#45;&gt;codeblock_78 -->
<g id="edge78" class="edge">
<title>section_60&#45;&gt;codeblock_78</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4204.5527,-25184.8319C4212.7857,-25174.6193 4222.8376,-25161.3394 4230.5,-25148.6405 4359.9487,-24934.1039 4472.2361,-24651.3611 4506.0899,-24563.0171"/>
<polygon fill="#000000" stroke="#000000" points="4509.4439,-24564.0447 4509.7385,-24553.454 4502.9037,-24561.5495 4509.4439,-24564.0447"/>
</g>
<!-- section_79 -->
<g id="node80" class="node">
<title>section_79</title>
<ellipse fill="none" stroke="#000000" cx="5191.5" cy="-24535.4394" rx="75.4916" ry="18"/>
<text text-anchor="middle" x="5191.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 71&#45;1587</text>
</g>
<!-- section_60&#45;&gt;section_79 -->
<g id="edge79" class="edge">
<title>section_60&#45;&gt;section_79</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4254.2203,-25199.3954C4354.7229,-25193.4903 4542.9584,-25178.7187 4602.5,-25148.6405 4890.0077,-25003.4022 5115.3255,-24660.2332 5175.5807,-24562.0851"/>
<polygon fill="#000000" stroke="#000000" points="5178.6785,-24563.7274 5180.8931,-24553.3666 5172.7007,-24560.085 5178.6785,-24563.7274"/>
</g>
<!-- leaf_69 -->
<g id="node70" class="node">
<title>leaf_69</title>
<polygon fill="none" stroke="#c0c0c0" points="2778.5,-23745.0379 2724.5,-23745.0379 2724.5,-23709.0379 2778.5,-23709.0379 2778.5,-23745.0379"/>
</g>
<!-- raw_62&#45;&gt;leaf_69 -->
<g id="edge69" class="edge">
<title>raw_62&#45;&gt;leaf_69</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2928.9938,-24517.3324C2936.1329,-24426.2558 2963.5081,-24018.7937 2890.5,-23922.2382 2861.2526,-23883.5575 2819.7835,-23922.4235 2787.5,-23886.2382 2754.9319,-23849.7338 2749.918,-23790.063 2750.1058,-23755.0733"/>
<polygon fill="#000000" stroke="#000000" points="2753.6053,-23755.1278 2750.3064,-23745.0597 2746.6067,-23754.9876 2753.6053,-23755.1278"/>
</g>
<!-- leaf_70 -->
<g id="node71" class="node">
<title>leaf_70</title>
<polygon fill="none" stroke="#c0c0c0" points="2850.5,-23745.0379 2796.5,-23745.0379 2796.5,-23709.0379 2850.5,-23709.0379 2850.5,-23745.0379"/>
</g>
<!-- prespace_63&#45;&gt;leaf_70 -->
<g id="edge70" class="edge">
<title>prespace_63&#45;&gt;leaf_70</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3023.1796,-24517.3997C3042.7782,-24437.4137 3110.6277,-24110.4452 2963.5,-23922.2382 2933.3754,-23883.7025 2892.1176,-23922.6879 2859.5,-23886.2382 2826.8773,-23849.7827 2821.8823,-23790.0948 2822.0884,-23755.0888"/>
<polygon fill="#000000" stroke="#000000" points="2825.588,-23755.1402 2822.2945,-23745.0703 2818.5895,-23754.9962 2825.588,-23755.1402"/>
</g>
<!-- leaf_71 -->
<g id="node72" class="node">
<title>leaf_71</title>
<polygon fill="none" stroke="#c0c0c0" points="2940.5,-23745.0379 2868.5,-23745.0379 2868.5,-23709.0379 2940.5,-23709.0379 2940.5,-23745.0379"/>
<text text-anchor="middle" x="2904.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse</text>
</g>
<!-- literal_64&#45;&gt;leaf_71 -->
<g id="edge71" class="edge">
<title>literal_64&#45;&gt;leaf_71</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3115.9632,-24517.2476C3122.9358,-24425.7571 3149.4115,-24016.5923 3073.5,-23922.2382 3037.5272,-23877.5258 2989.9347,-23926.9601 2949.5,-23886.2382 2914.4703,-23850.9596 2906.2382,-23790.6056 2904.5801,-23755.2141"/>
<polygon fill="#000000" stroke="#000000" points="2908.0742,-23754.9695 2904.2542,-23745.0873 2901.0778,-23755.1947 2908.0742,-23754.9695"/>
</g>
<!-- leaf_72 -->
<g id="node73" class="node">
<title>leaf_72</title>
<polygon fill="none" stroke="#c0c0c0" points="3422.5,-23745.0379 2958.5,-23745.0379 2958.5,-23709.0379 3422.5,-23709.0379 3422.5,-23745.0379"/>
<text text-anchor="middle" x="3190.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> is what it says on the label, and we&#39;re lifting it wholesale as</text>
</g>
<!-- raw_65&#45;&gt;leaf_72 -->
<g id="edge72" class="edge">
<title>raw_65&#45;&gt;leaf_72</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3190.5,-24517.4213C3190.5,-24412.8393 3190.5,-23884.0356 3190.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3194.0001,-23755.0994 3190.5,-23745.0994 3187.0001,-23755.0995 3194.0001,-23755.0994"/>
</g>
<!-- leaf_73 -->
<g id="node74" class="node">
<title>leaf_73</title>
<polygon fill="none" stroke="#c0c0c0" points="3494.5,-23745.0379 3440.5,-23745.0379 3440.5,-23709.0379 3494.5,-23709.0379 3494.5,-23745.0379"/>
</g>
<!-- prespace_66&#45;&gt;leaf_73 -->
<g id="edge73" class="edge">
<title>prespace_66&#45;&gt;leaf_73</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3376.5728,-24517.4213C3388.6041,-24412.8393 3449.4387,-23884.0356 3464.247,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3467.7563,-23755.434 3465.4222,-23745.0994 3460.8021,-23754.6339 3467.7563,-23755.434"/>
</g>
<!-- leaf_74 -->
<g id="node75" class="node">
<title>leaf_74</title>
<polygon fill="none" stroke="#c0c0c0" points="3640.5,-23745.0379 3512.5,-23745.0379 3512.5,-23709.0379 3640.5,-23709.0379 3640.5,-23745.0379"/>
<text text-anchor="middle" x="3576.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_67&#45;&gt;leaf_74 -->
<g id="edge74" class="edge">
<title>literal_67&#45;&gt;leaf_74</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3524.6813,-24517.4213C3531.5378,-24412.8393 3566.207,-23884.0356 3574.6461,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3578.1541,-23755.307 3575.3159,-23745.0994 3571.1691,-23754.849 3578.1541,-23755.307"/>
</g>
<!-- leaf_75 -->
<g id="node76" class="node">
<title>leaf_75</title>
<polygon fill="none" stroke="#c0c0c0" points="3808,-23746.94 3659,-23746.94 3659,-23707.1358 3808,-23707.1358 3808,-23746.94"/>
<text text-anchor="middle" x="3733.5" y="-23731.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">, at least for now.</text>
</g>
<!-- raw_68&#45;&gt;leaf_75 -->
<g id="edge75" class="edge">
<title>raw_68&#45;&gt;leaf_75</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3667.9933,-24517.4213C3676.6228,-24413.3007 3720.1021,-23888.6931 3731.0133,-23757.0414"/>
<polygon fill="#000000" stroke="#000000" points="3734.5168,-23757.1429 3731.8548,-23746.888 3727.5407,-23756.5647 3734.5168,-23757.1429"/>
</g>
<!-- leaf_80 -->
<g id="node81" class="node">
<title>leaf_80</title>
<polygon fill="none" stroke="#c0c0c0" points="3919,-23745.0379 3826,-23745.0379 3826,-23709.0379 3919,-23709.0379 3919,-23745.0379"/>
<text text-anchor="middle" x="3872.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">*** License</text>
</g>
<!-- header_76&#45;&gt;leaf_80 -->
<g id="edge80" class="edge">
<title>header_76&#45;&gt;leaf_80</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3958.5386,-24517.4213C3947.1541,-24412.8393 3889.5903,-23884.0356 3875.5781,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="3879.0278,-23754.6619 3874.4661,-23745.0994 3872.0689,-23755.4195 3879.0278,-23754.6619"/>
</g>
<!-- raw_81 -->
<g id="node82" class="node">
<title>raw_81</title>
<ellipse fill="none" stroke="#000000" cx="3964.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="3964.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_77&#45;&gt;raw_81 -->
<g id="edge81" class="edge">
<title>prose_77&#45;&gt;raw_81</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4186.5358,-24517.5123C4173.733,-24442.4508 4119.4038,-24146.9002 4022.5,-23922.2382 4015.0734,-23905.0204 4007.5503,-23903.6134 4000.5,-23886.2382 3982.6954,-23842.3595 3972.7955,-23787.9294 3968.0671,-23755.4204"/>
<polygon fill="#000000" stroke="#000000" points="3971.5015,-23754.7057 3966.6578,-23745.2829 3964.5681,-23755.6696 3971.5015,-23754.7057"/>
</g>
<!-- prespace_82 -->
<g id="node83" class="node">
<title>prespace_82</title>
<ellipse fill="none" stroke="#000000" cx="4055.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="4055.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_77&#45;&gt;prespace_82 -->
<g id="edge82" class="edge">
<title>prose_77&#45;&gt;prespace_82</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4186.5133,-24517.4213C4169.1779,-24412.8393 4081.5238,-23884.0356 4060.1871,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4063.5821,-23754.3925 4058.4939,-23745.0994 4056.6763,-23755.5372 4063.5821,-23754.3925"/>
</g>
<!-- literal_83 -->
<g id="node84" class="node">
<title>literal_83</title>
<ellipse fill="none" stroke="#000000" cx="4151.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="4151.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_77&#45;&gt;literal_83 -->
<g id="edge83" class="edge">
<title>prose_77&#45;&gt;literal_83</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4188.653,-24517.4213C4183.737,-24412.8393 4158.8799,-23884.0356 4152.8292,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4156.3148,-23754.924 4152.349,-23745.0994 4149.3225,-23755.2528 4156.3148,-23754.924"/>
</g>
<!-- raw_84 -->
<g id="node85" class="node">
<title>raw_84</title>
<ellipse fill="none" stroke="#000000" cx="4227.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4227.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_77&#45;&gt;raw_84 -->
<g id="edge84" class="edge">
<title>prose_77&#45;&gt;raw_84</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4190.347,-24517.4213C4195.263,-24412.8393 4220.1201,-23884.0356 4226.1708,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4229.6775,-23755.2528 4226.651,-23745.0994 4222.6852,-23754.924 4229.6775,-23755.2528"/>
</g>
<!-- link_85 -->
<g id="node86" class="node">
<title>link_85</title>
<ellipse fill="none" stroke="#000000" cx="4299.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4299.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">link</text>
</g>
<!-- prose_77&#45;&gt;link_85 -->
<g id="edge85" class="edge">
<title>prose_77&#45;&gt;link_85</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4191.9517,-24517.4213C4206.1823,-24412.8393 4278.1372,-23884.0356 4295.6524,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="4299.162,-23755.4801 4297.0424,-23745.0994 4292.2259,-23754.5362 4299.162,-23755.4801"/>
</g>
<!-- raw_86 -->
<g id="node87" class="node">
<title>raw_86</title>
<ellipse fill="none" stroke="#000000" cx="4371.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="4371.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_77&#45;&gt;raw_86 -->
<g id="edge86" class="edge">
<title>prose_77&#45;&gt;raw_86</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4193.5565,-24517.4213C4217.1253,-24412.7342 4336.3936,-23882.9722 4365.221,-23754.9276"/>
<polygon fill="#000000" stroke="#000000" points="4368.6518,-23755.624 4367.4337,-23745.0994 4361.8227,-23754.0865 4368.6518,-23755.624"/>
</g>
<!-- leaf_96 -->
<g id="node97" class="node">
<title>leaf_96</title>
<polygon fill="none" stroke="#c0c0c0" points="5014,-23886.4387 4417,-23886.4387 4417,-23567.6372 5014,-23567.6372 5014,-23886.4387"/>
<text text-anchor="middle" x="4715.5" y="-23871.0382" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The MIT License (MIT)</text>
<text text-anchor="middle" x="4715.5" y="-23839.6381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Copyright (c) 2013 &#45; 2018 Peter Melnichenko</text>
<text text-anchor="middle" x="4715.5" y="-23808.2381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Permission is hereby granted, free of charge, to any person obtaining a copy of</text>
<text text-anchor="middle" x="4715.5" y="-23792.8381" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; this software and associated documentation files (the &quot;Software&quot;), to deal in</text>
<text text-anchor="middle" x="4715.5" y="-23777.438" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software without restriction, including without limitation the rights to</text>
<text text-anchor="middle" x="4715.5" y="-23762.038" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of</text>
<text text-anchor="middle" x="4715.5" y="-23746.638" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; the Software, and to permit persons to whom the Software is furnished to do so,</text>
<text text-anchor="middle" x="4715.5" y="-23731.238" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; subject to the following conditions:</text>
<text text-anchor="middle" x="4715.5" y="-23699.8379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; The above copyright notice and this permission notice shall be included in all</text>
<text text-anchor="middle" x="4715.5" y="-23684.4379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; copies or substantial portions of the Software.</text>
<text text-anchor="middle" x="4715.5" y="-23653.0379" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</text>
<text text-anchor="middle" x="4715.5" y="-23637.6378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS</text>
<text text-anchor="middle" x="4715.5" y="-23622.2378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR</text>
<text text-anchor="middle" x="4715.5" y="-23606.8378" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER</text>
<text text-anchor="middle" x="4715.5" y="-23591.4377" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN</text>
<text text-anchor="middle" x="4715.5" y="-23576.0377" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</text>
</g>
<!-- codeblock_78&#45;&gt;leaf_96 -->
<g id="edge96" class="edge">
<title>codeblock_78&#45;&gt;leaf_96</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4520.9354,-24517.4213C4540.8065,-24436.6987 4622.8925,-24103.2389 4673.8837,-23896.0967"/>
<polygon fill="#000000" stroke="#000000" points="4677.2961,-23896.8765 4676.2879,-23886.3298 4670.499,-23895.2033 4677.2961,-23896.8765"/>
</g>
<!-- header_97 -->
<g id="node98" class="node">
<title>header_97</title>
<ellipse fill="none" stroke="#000000" cx="5121.5" cy="-23727.0379" rx="90.0004" ry="18"/>
<text text-anchor="middle" x="5121.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">4 : argparse, proper.</text>
</g>
<!-- section_79&#45;&gt;header_97 -->
<g id="edge97" class="edge">
<title>section_79&#45;&gt;header_97</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5189.9398,-24517.4213C5180.884,-24412.8393 5135.0945,-23884.0356 5123.9485,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="5127.4137,-23754.7602 5123.064,-23745.0994 5120.4398,-23755.3641 5127.4137,-23754.7602"/>
</g>
<!-- prose_98 -->
<g id="node99" class="node">
<title>prose_98</title>
<ellipse fill="none" stroke="#000000" cx="5261.5" cy="-23727.0379" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="5261.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_79&#45;&gt;prose_98 -->
<g id="edge98" class="edge">
<title>section_79&#45;&gt;prose_98</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5193.0602,-24517.4213C5202.116,-24412.8393 5247.9055,-23884.0356 5259.0515,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="5262.5602,-23755.3641 5259.936,-23745.0994 5255.5863,-23754.7602 5262.5602,-23755.3641"/>
</g>
<!-- codeblock_99 -->
<g id="node100" class="node">
<title>codeblock_99</title>
<ellipse fill="none" stroke="#000000" cx="5490.5" cy="-23727.0379" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="5490.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 73&#45;1585</text>
</g>
<!-- section_79&#45;&gt;codeblock_99 -->
<g id="edge99" class="edge">
<title>section_79&#45;&gt;codeblock_99</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5198.1643,-24517.4213C5236.9233,-24412.6291 5433.2189,-23881.908 5480.3268,-23754.5431"/>
<polygon fill="#000000" stroke="#000000" points="5483.6333,-23755.6926 5483.8197,-23745.0994 5477.068,-23753.2643 5483.6333,-23755.6926"/>
</g>
<!-- leaf_87 -->
<g id="node88" class="node">
<title>leaf_87</title>
<polygon fill="none" stroke="#c0c0c0" points="3881.5,-11837.2192 3319.5,-11837.2192 3319.5,-11766.6185 3881.5,-11766.6185 3881.5,-11837.2192"/>
<text text-anchor="middle" x="3600.5" y="-11790.1189" font-family="Inconsolata" font-size="14.00" fill="#000000">This is lightly modified by wrapping it in an anonymous function and assigning</text>
<text text-anchor="middle" x="3600.5" y="-11774.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">it to</text>
</g>
<!-- raw_81&#45;&gt;leaf_87 -->
<g id="edge87" class="edge">
<title>raw_81&#45;&gt;leaf_87</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3963.5682,-23708.6478C3961.2993,-23677.6962 3953.5762,-23614.0507 3927.5,-23567.8377 3916.2248,-23547.8554 3899.6857,-23552.8625 3890.5,-23531.8377 1901.5643,-18979.4592 3438.9167,-12455.5027 3589.005,-11847.7291"/>
<polygon fill="#000000" stroke="#000000" points="3592.5067,-11848.1489 3591.5133,-11837.6007 3585.712,-11846.4661 3592.5067,-11848.1489"/>
</g>
<!-- leaf_88 -->
<g id="node89" class="node">
<title>leaf_88</title>
<polygon fill="none" stroke="#c0c0c0" points="3953.5,-11819.9188 3899.5,-11819.9188 3899.5,-11783.9188 3953.5,-11783.9188 3953.5,-11819.9188"/>
<text text-anchor="middle" x="3926.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_82&#45;&gt;leaf_88 -->
<g id="edge88" class="edge">
<title>prespace_82&#45;&gt;leaf_88</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4052.1739,-23708.8414C4045.9005,-23677.9021 4030.2039,-23613.9229 4000.5,-23567.8377 3987.8963,-23548.2831 3971.7253,-23553.1948 3962.5,-23531.8377 3837.0616,-23241.4385 3921.2542,-12458.9936 3926.2701,-11830.5093"/>
<polygon fill="#000000" stroke="#000000" points="3929.7733,-11830.112 3926.3535,-11820.0843 3922.7736,-11830.056 3929.7733,-11830.112"/>
</g>
<!-- leaf_89 -->
<g id="node90" class="node">
<title>leaf_89</title>
<polygon fill="none" stroke="#c0c0c0" points="4099.5,-11819.9188 3971.5,-11819.9188 3971.5,-11783.9188 4099.5,-11783.9188 4099.5,-11819.9188"/>
<text text-anchor="middle" x="4035.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse</text>
</g>
<!-- literal_83&#45;&gt;leaf_89 -->
<g id="edge89" class="edge">
<title>literal_83&#45;&gt;leaf_89</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4146.2477,-23709.2192C4136.5018,-23675.1438 4115.9344,-23598.223 4108.5,-23531.8377 3967.8514,-22275.9142 4031.3245,-12427.1721 4035.3088,-11830.2326"/>
<polygon fill="#000000" stroke="#000000" points="4038.8107,-11829.953 4035.3778,-11819.9298 4031.8108,-11829.9061 4038.8107,-11829.953"/>
</g>
<!-- leaf_90 -->
<g id="node91" class="node">
<title>leaf_90</title>
<polygon fill="none" stroke="#c0c0c0" points="4337,-11819.9188 4118,-11819.9188 4118,-11783.9188 4337,-11783.9188 4337,-11819.9188"/>
<text text-anchor="middle" x="4227.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">, but is otherwise exactly as</text>
</g>
<!-- raw_84&#45;&gt;leaf_90 -->
<g id="edge90" class="edge">
<title>raw_84&#45;&gt;leaf_90</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4227.5,-23708.8742C4227.5,-23206.7435 4227.5,-12456.82 4227.5,-11830.4121"/>
<polygon fill="#000000" stroke="#000000" points="4231.0001,-11830.0218 4227.5,-11820.0218 4224.0001,-11830.0218 4231.0001,-11830.0218"/>
</g>
<!-- anchortext_91 -->
<g id="node92" class="node">
<title>anchortext_91</title>
<ellipse fill="none" stroke="#000000" cx="4406.5" cy="-11801.9188" rx="51.3018" ry="18"/>
<text text-anchor="middle" x="4406.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">anchortext</text>
</g>
<!-- link_85&#45;&gt;anchortext_91 -->
<g id="edge91" class="edge">
<title>link_85&#45;&gt;anchortext_91</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4303.3175,-23708.8245C4309.5994,-23679.1754 4322.6996,-23618.6739 4335.5,-23567.8377 4339.5547,-23551.7345 4343.2145,-23548.2854 4345.5,-23531.8377 4519.439,-22280.0979 4413.4148,-12427.4262 4406.8158,-11830.2441"/>
<polygon fill="#000000" stroke="#000000" points="4410.3123,-11829.8977 4406.7016,-11819.9372 4403.3127,-11829.9754 4410.3123,-11829.8977"/>
</g>
<!-- url_92 -->
<g id="node93" class="node">
<title>url_92</title>
<ellipse fill="none" stroke="#000000" cx="4502.5" cy="-11801.9188" rx="27" ry="18"/>
<text text-anchor="middle" x="4502.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">url</text>
</g>
<!-- link_85&#45;&gt;url_92 -->
<g id="edge92" class="edge">
<title>link_85&#45;&gt;url_92</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4298.0537,-23709.029C4296.476,-23676.3318 4298.1154,-23606.9749 4335.5,-23567.8377 4377.2068,-23524.1757 4429.8221,-23579.8018 4466.5,-23531.8377 4562.6248,-23406.1339 4505.9777,-12457.7559 4502.65,-11829.9889"/>
<polygon fill="#000000" stroke="#000000" points="4506.1499,-11829.95 4502.5968,-11819.9688 4499.15,-11829.9873 4506.1499,-11829.95"/>
</g>
<!-- leaf_95 -->
<g id="node96" class="node">
<title>leaf_95</title>
<polygon fill="none" stroke="#c0c0c0" points="4601.5,-11819.9188 4547.5,-11819.9188 4547.5,-11783.9188 4601.5,-11783.9188 4601.5,-11819.9188"/>
<text text-anchor="middle" x="4574.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">.</text>
</g>
<!-- raw_86&#45;&gt;leaf_95 -->
<g id="edge95" class="edge">
<title>raw_86&#45;&gt;leaf_95</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4370.0537,-23709.029C4368.476,-23676.3318 4370.1154,-23606.9749 4407.5,-23567.8377 4449.2068,-23524.1757 4501.8221,-23579.8018 4538.5,-23531.8377 5306.541,-22527.459 4618.2837,-12432.4722 4576.4631,-11830.0268"/>
<polygon fill="#000000" stroke="#000000" points="4579.9516,-11829.7393 4575.7662,-11820.0062 4572.9685,-11830.225 4579.9516,-11829.7393"/>
</g>
<!-- leaf_93 -->
<g id="node94" class="node">
<title>leaf_93</title>
<polygon fill="none" stroke="#c0c0c0" points="4333.5,-36 4247.5,-36 4247.5,0 4333.5,0 4333.5,-36"/>
<text text-anchor="middle" x="4290.5" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">found here</text>
</g>
<!-- anchortext_91&#45;&gt;leaf_93 -->
<g id="edge93" class="edge">
<title>anchortext_91&#45;&gt;leaf_93</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4406.603,-11783.7549C4409.451,-11277.7154 4469.4101,-365.1678 4345.5,-72 4340.8663,-61.0367 4332.8131,-51.173 4324.2759,-42.9682"/>
<polygon fill="#000000" stroke="#000000" points="4326.5056,-40.2666 4316.7227,-36.199 4321.8338,-45.4795 4326.5056,-40.2666"/>
</g>
<!-- leaf_94 -->
<g id="node95" class="node">
<title>leaf_94</title>
<polygon fill="none" stroke="#c0c0c0" points="4885.5,-36 4351.5,-36 4351.5,0 4885.5,0 4885.5,-36"/>
<text text-anchor="middle" x="4618.5" y="-14.5" font-family="Inconsolata" font-size="14.00" fill="#000000">https://raw.githubusercontent.com/mpeterv/argparse/master/src/argparse.lua</text>
</g>
<!-- url_92&#45;&gt;leaf_94 -->
<g id="edge94" class="edge">
<title>url_92&#45;&gt;leaf_94</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4502.4376,-11783.891C4500.6946,-11276.1578 4463.5788,-212.4432 4538.5,-72 4545.1005,-59.6271 4555.9348,-49.5729 4567.5295,-41.6437"/>
<polygon fill="#000000" stroke="#000000" points="4569.4816,-44.5503 4576.057,-36.2428 4565.7361,-38.6366 4569.4816,-44.5503"/>
</g>
<!-- leaf_100 -->
<g id="node101" class="node">
<title>leaf_100</title>
<polygon fill="none" stroke="#c0c0c0" points="5200.5,-11819.9188 5030.5,-11819.9188 5030.5,-11783.9188 5200.5,-11783.9188 5200.5,-11819.9188"/>
<text text-anchor="middle" x="5115.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">**** argparse, proper.</text>
</g>
<!-- header_97&#45;&gt;leaf_100 -->
<g id="edge100" class="edge">
<title>header_97&#45;&gt;leaf_100</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5121.4909,-23708.8742C5121.2382,-23206.7435 5115.8295,-12456.82 5115.5143,-11830.4121"/>
<polygon fill="#000000" stroke="#000000" points="5119.0142,-11830.02 5115.5091,-11820.0218 5112.0142,-11830.0236 5119.0142,-11830.02"/>
</g>
<!-- raw_101 -->
<g id="node102" class="node">
<title>raw_101</title>
<ellipse fill="none" stroke="#000000" cx="5245.5" cy="-11801.9188" rx="27" ry="18"/>
<text text-anchor="middle" x="5245.5" y="-11797.7188" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_98&#45;&gt;raw_101 -->
<g id="edge101" class="edge">
<title>prose_98&#45;&gt;raw_101</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5261.4756,-23708.8742C5260.8019,-23206.7435 5246.3787,-12456.82 5245.5382,-11830.4121"/>
<polygon fill="#000000" stroke="#000000" points="5249.0378,-11830.0171 5245.5243,-11820.0218 5242.0378,-11830.0265 5249.0378,-11830.0171"/>
</g>
<!-- leaf_103 -->
<g id="node104" class="node">
<title>leaf_103</title>
<polygon fill="none" stroke="#c0c0c0" points="6126,-23531.7565 5291,-23531.7565 5291,-72.0812 6126,-72.0812 6126,-23531.7565"/>
<text text-anchor="middle" x="5708.5" y="-23516.6377" font-family="Inconsolata" font-size="14.00" fill="#000000">package.argparse = (function()</text>
<text text-anchor="middle" x="5708.5" y="-23501.2376" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; skipping a level of indentation</text>
<text text-anchor="middle" x="5708.5" y="-23469.8376" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deep_update(t1, t2)</text>
<text text-anchor="middle" x="5708.5" y="-23454.4376" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for k, v in pairs(t2) do</text>
<text text-anchor="middle" x="5708.5" y="-23439.0375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(v) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-23423.6375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;v = deep_update({}, v)</text>
<text text-anchor="middle" x="5708.5" y="-23408.2375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-23376.8375" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;t1[k] = v</text>
<text text-anchor="middle" x="5708.5" y="-23361.4374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-23330.0374" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return t1</text>
<text text-anchor="middle" x="5708.5" y="-23314.6374" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-23283.2373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; A property is a tuple {name, callback}.</text>
<text text-anchor="middle" x="5708.5" y="-23267.8373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; properties.args is number of properties that can be set as arguments</text>
<text text-anchor="middle" x="5708.5" y="-23252.4373" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; when calling an object.</text>
<text text-anchor="middle" x="5708.5" y="-23237.0372" font-family="Inconsolata" font-size="14.00" fill="#000000">local function class(prototype, properties, parent)</text>
<text text-anchor="middle" x="5708.5" y="-23221.6372" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Class is the metatable of its instances.</text>
<text text-anchor="middle" x="5708.5" y="-23206.2372" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local cl = {}</text>
<text text-anchor="middle" x="5708.5" y="-23190.8371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;cl.__index = cl</text>
<text text-anchor="middle" x="5708.5" y="-23159.4371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parent then</text>
<text text-anchor="middle" x="5708.5" y="-23144.0371" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = deep_update(deep_update({}, parent.__prototype), prototype)</text>
<text text-anchor="middle" x="5708.5" y="-23128.637" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-23113.237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;cl.__prototype = prototype</text>
<text text-anchor="middle" x="5708.5" y="-23097.837" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-23066.437" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if properties then</text>
<text text-anchor="middle" x="5708.5" y="-23051.0369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local names = {}</text>
<text text-anchor="middle" x="5708.5" y="-23019.6369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Create setter methods and fill set of property names.</text>
<text text-anchor="middle" x="5708.5" y="-23004.2369" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, property in ipairs(properties) do</text>
<text text-anchor="middle" x="5708.5" y="-22988.8368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name, callback = property[1], property[2]</text>
<text text-anchor="middle" x="5708.5" y="-22957.4368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cl[name] = function(self, value)</text>
<text text-anchor="middle" x="5708.5" y="-22942.0368" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not callback(self, value) then</text>
<text text-anchor="middle" x="5708.5" y="-22926.6367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[&quot;_&quot; .. name] = value</text>
<text text-anchor="middle" x="5708.5" y="-22911.2367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22879.8367" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-22864.4366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22833.0366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;names[name] = true</text>
<text text-anchor="middle" x="5708.5" y="-22817.6366" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22786.2365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;function cl.__call(self, ...)</text>
<text text-anchor="middle" x="5708.5" y="-22770.8365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; When calling an object, if the first argument is a table,</text>
<text text-anchor="middle" x="5708.5" y="-22755.4365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; interpret keys as property names, else delegate arguments</text>
<text text-anchor="middle" x="5708.5" y="-22740.0365" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; to corresponding setters in order.</text>
<text text-anchor="middle" x="5708.5" y="-22724.6364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if type((...)) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-22709.2364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name, value in pairs((...)) do</text>
<text text-anchor="middle" x="5708.5" y="-22693.8364" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if names[name] then</text>
<text text-anchor="middle" x="5708.5" y="-22678.4363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[name](self, value)</text>
<text text-anchor="middle" x="5708.5" y="-22663.0363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22647.6363" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22632.2362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-22616.8362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local nargs = select(&quot;#&quot;, ...)</text>
<text text-anchor="middle" x="5708.5" y="-22585.4362" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i, property in ipairs(properties) do</text>
<text text-anchor="middle" x="5708.5" y="-22570.0361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i &gt; nargs or i &gt; properties.args then</text>
<text text-anchor="middle" x="5708.5" y="-22554.6361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-22539.2361" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22507.836" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local arg = select(i, ...)</text>
<text text-anchor="middle" x="5708.5" y="-22476.436" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg ~= nil then</text>
<text text-anchor="middle" x="5708.5" y="-22461.036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self[property[1]](self, arg)</text>
<text text-anchor="middle" x="5708.5" y="-22445.636" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22430.2359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22414.8359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22383.4359" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-22368.0358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22352.6358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22321.2358" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If indexing class fails, fallback to its parent.</text>
<text text-anchor="middle" x="5708.5" y="-22305.8357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local class_metatable = {}</text>
<text text-anchor="middle" x="5708.5" y="-22290.4357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;class_metatable.__index = parent</text>
<text text-anchor="middle" x="5708.5" y="-22259.0357" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;function class_metatable.__call(self, ...)</text>
<text text-anchor="middle" x="5708.5" y="-22243.6356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Calling a class returns its instance.</text>
<text text-anchor="middle" x="5708.5" y="-22228.2356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Arguments are delegated to the instance.</text>
<text text-anchor="middle" x="5708.5" y="-22212.8356" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local object = deep_update({}, self.__prototype)</text>
<text text-anchor="middle" x="5708.5" y="-22197.4355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(object, self)</text>
<text text-anchor="middle" x="5708.5" y="-22182.0355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return object(...)</text>
<text text-anchor="middle" x="5708.5" y="-22166.6355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22135.2355" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return setmetatable(cl, class_metatable)</text>
<text text-anchor="middle" x="5708.5" y="-22119.8354" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-22088.4354" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typecheck(name, types, value)</text>
<text text-anchor="middle" x="5708.5" y="-22073.0354" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, type_ in ipairs(types) do</text>
<text text-anchor="middle" x="5708.5" y="-22057.6353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(value) == type_ then</text>
<text text-anchor="middle" x="5708.5" y="-22042.2353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="5708.5" y="-22026.8353" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-22011.4352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21980.0352" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;error((&quot;bad property &#39;%s&#39; (%s expected, got %s)&quot;):format(name, table.concat(types, &quot; or &quot;), type(value)))</text>
<text text-anchor="middle" x="5708.5" y="-21964.6352" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-21933.2351" font-family="Inconsolata" font-size="14.00" fill="#000000">local function typechecked(name, ...)</text>
<text text-anchor="middle" x="5708.5" y="-21917.8351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {...}</text>
<text text-anchor="middle" x="5708.5" y="-21902.4351" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(_, value) typecheck(name, types, value) end}</text>
<text text-anchor="middle" x="5708.5" y="-21887.035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-21855.635" font-family="Inconsolata" font-size="14.00" fill="#000000">local multiname = {&quot;name&quot;, function(self, value)</text>
<text text-anchor="middle" x="5708.5" y="-21840.235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;name&quot;, {&quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5708.5" y="-21808.835" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for alias in value:gmatch(&quot;%S+&quot;) do</text>
<text text-anchor="middle" x="5708.5" y="-21793.4349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._name = self._name or alias</text>
<text text-anchor="middle" x="5708.5" y="-21778.0349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._aliases, alias)</text>
<text text-anchor="middle" x="5708.5" y="-21762.6349" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21731.2348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Do not set _name as with other properties.</text>
<text text-anchor="middle" x="5708.5" y="-21715.8348" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return true</text>
<text text-anchor="middle" x="5708.5" y="-21700.4348" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5708.5" y="-21669.0347" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse_boundaries(str)</text>
<text text-anchor="middle" x="5708.5" y="-21653.6347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if tonumber(str) then</text>
<text text-anchor="middle" x="5708.5" y="-21638.2347" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(str), tonumber(str)</text>
<text text-anchor="middle" x="5708.5" y="-21622.8346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21591.4346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;*&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-21576.0346" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, math.huge</text>
<text text-anchor="middle" x="5708.5" y="-21560.6345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21529.2345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;+&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-21513.8345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 1, math.huge</text>
<text text-anchor="middle" x="5708.5" y="-21498.4345" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21467.0344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str == &quot;?&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-21451.6344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 0, 1</text>
<text text-anchor="middle" x="5708.5" y="-21436.2344" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21404.8343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%&#45;%d+$&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-21389.4343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = str:match &quot;^(%d+)%&#45;(%d+)$&quot;</text>
<text text-anchor="middle" x="5708.5" y="-21374.0343" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), tonumber(max)</text>
<text text-anchor="middle" x="5708.5" y="-21358.6342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21327.2342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if str:match &quot;^%d+%+$&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-21311.8342" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min = str:match &quot;^(%d+)%+$&quot;</text>
<text text-anchor="middle" x="5708.5" y="-21296.4341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return tonumber(min), math.huge</text>
<text text-anchor="middle" x="5708.5" y="-21281.0341" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21265.6341" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-21234.234" font-family="Inconsolata" font-size="14.00" fill="#000000">local function boundaries(name)</text>
<text text-anchor="middle" x="5708.5" y="-21218.834" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {name, function(self, value)</text>
<text text-anchor="middle" x="5708.5" y="-21203.434" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;typecheck(name, {&quot;number&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5708.5" y="-21172.034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local min, max = parse_boundaries(value)</text>
<text text-anchor="middle" x="5708.5" y="-21140.6339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not min then</text>
<text text-anchor="middle" x="5708.5" y="-21125.2339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error((&quot;bad property &#39;%s&#39;&quot;):format(name))</text>
<text text-anchor="middle" x="5708.5" y="-21109.8339" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-21078.4338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self[&quot;_min&quot; .. name], self[&quot;_max&quot; .. name] = min, max</text>
<text text-anchor="middle" x="5708.5" y="-21063.0338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end}</text>
<text text-anchor="middle" x="5708.5" y="-21047.6338" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-21016.2337" font-family="Inconsolata" font-size="14.00" fill="#000000">local actions = {}</text>
<text text-anchor="middle" x="5708.5" y="-20984.8337" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_action = {&quot;action&quot;, function(_, value)</text>
<text text-anchor="middle" x="5708.5" y="-20969.4337" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;action&quot;, {&quot;function&quot;, &quot;string&quot;}, value)</text>
<text text-anchor="middle" x="5708.5" y="-20938.0336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) == &quot;string&quot; and not actions[value] then</text>
<text text-anchor="middle" x="5708.5" y="-20922.6336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error((&quot;unknown action &#39;%s&#39;&quot;):format(value))</text>
<text text-anchor="middle" x="5708.5" y="-20907.2336" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20891.8335" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5708.5" y="-20860.4335" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_init = {&quot;init&quot;, function(self)</text>
<text text-anchor="middle" x="5708.5" y="-20845.0335" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="5708.5" y="-20829.6335" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5708.5" y="-20798.2334" font-family="Inconsolata" font-size="14.00" fill="#000000">local option_default = {&quot;default&quot;, function(self, value)</text>
<text text-anchor="middle" x="5708.5" y="-20782.8334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(value) ~= &quot;string&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-20767.4334" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._init = value</text>
<text text-anchor="middle" x="5708.5" y="-20752.0333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_init = true</text>
<text text-anchor="middle" x="5708.5" y="-20736.6333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true</text>
<text text-anchor="middle" x="5708.5" y="-20721.2333" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20705.8332" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5708.5" y="-20674.4332" font-family="Inconsolata" font-size="14.00" fill="#000000">local add_help = {&quot;add_help&quot;, function(self, value)</text>
<text text-anchor="middle" x="5708.5" y="-20659.0332" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typecheck(&quot;add_help&quot;, {&quot;boolean&quot;, &quot;string&quot;, &quot;table&quot;}, value)</text>
<text text-anchor="middle" x="5708.5" y="-20627.6331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_help then</text>
<text text-anchor="middle" x="5708.5" y="-20612.2331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(self._options)</text>
<text text-anchor="middle" x="5708.5" y="-20596.8331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_help = false</text>
<text text-anchor="middle" x="5708.5" y="-20581.4331" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20550.033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if value then</text>
<text text-anchor="middle" x="5708.5" y="-20534.633" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local help = self:flag()</text>
<text text-anchor="middle" x="5708.5" y="-20519.233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:description &quot;Show this help message and exit.&quot;</text>
<text text-anchor="middle" x="5708.5" y="-20503.8329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:action(function()</text>
<text text-anchor="middle" x="5708.5" y="-20488.4329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;print(self:get_help())</text>
<text text-anchor="middle" x="5708.5" y="-20473.0329" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;os.exit(0)</text>
<text text-anchor="middle" x="5708.5" y="-20457.6328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="5708.5" y="-20426.2328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= true then</text>
<text text-anchor="middle" x="5708.5" y="-20410.8328" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help = help(value)</text>
<text text-anchor="middle" x="5708.5" y="-20395.4327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20364.0327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not help._name then</text>
<text text-anchor="middle" x="5708.5" y="-20348.6327" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;help &quot;&#45;h&quot; &quot;&#45;&#45;help&quot;</text>
<text text-anchor="middle" x="5708.5" y="-20333.2326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20301.8326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self._has_help = true</text>
<text text-anchor="middle" x="5708.5" y="-20286.4326" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-20271.0326" font-family="Inconsolata" font-size="14.00" fill="#000000">end}</text>
<text text-anchor="middle" x="5708.5" y="-20239.6325" font-family="Inconsolata" font-size="14.00" fill="#000000">local Parser = class({</text>
<text text-anchor="middle" x="5708.5" y="-20224.2325" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_arguments = {},</text>
<text text-anchor="middle" x="5708.5" y="-20208.8325" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_options = {},</text>
<text text-anchor="middle" x="5708.5" y="-20193.4324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_commands = {},</text>
<text text-anchor="middle" x="5708.5" y="-20178.0324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mutexes = {},</text>
<text text-anchor="middle" x="5708.5" y="-20162.6324" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_groups = {},</text>
<text text-anchor="middle" x="5708.5" y="-20147.2323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_require_command = true,</text>
<text text-anchor="middle" x="5708.5" y="-20131.8323" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_handle_options = true</text>
<text text-anchor="middle" x="5708.5" y="-20116.4323" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5708.5" y="-20101.0322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="5708.5" y="-20085.6322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-20070.2322" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-20054.8321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-20039.4321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-20024.0321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-20008.6321" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19993.232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19977.832" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19962.432" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19947.0319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19931.6319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19916.2319" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19900.8318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19885.4318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19870.0318" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19854.6317" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="5708.5" y="-19839.2317" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5708.5" y="-19807.8317" font-family="Inconsolata" font-size="14.00" fill="#000000">local Command = class({</text>
<text text-anchor="middle" x="5708.5" y="-19792.4316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {}</text>
<text text-anchor="middle" x="5708.5" y="-19777.0316" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5708.5" y="-19761.6316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 3,</text>
<text text-anchor="middle" x="5708.5" y="-19746.2316" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="5708.5" y="-19730.8315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19715.4315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;epilog&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19700.0315" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19684.6314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19669.2314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19653.8314" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;require_command&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19638.4313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;handle_options&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19623.0313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;action&quot;, &quot;function&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19607.6313" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;command_target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19592.2312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_vertical_space&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19576.8312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19561.4312" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;usage_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19546.0311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_usage_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19530.6311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_description_margin&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19515.2311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;help_max_width&quot;, &quot;number&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19499.8311" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19484.431" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;add_help</text>
<text text-anchor="middle" x="5708.5" y="-19469.031" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Parser)</text>
<text text-anchor="middle" x="5708.5" y="-19437.631" font-family="Inconsolata" font-size="14.00" fill="#000000">local Argument = class({</text>
<text text-anchor="middle" x="5708.5" y="-19422.2309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_minargs = 1,</text>
<text text-anchor="middle" x="5708.5" y="-19406.8309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxargs = 1,</text>
<text text-anchor="middle" x="5708.5" y="-19391.4309" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 1,</text>
<text text-anchor="middle" x="5708.5" y="-19376.0308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_maxcount = 1,</text>
<text text-anchor="middle" x="5708.5" y="-19360.6308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_defmode = &quot;unused&quot;,</text>
<text text-anchor="middle" x="5708.5" y="-19345.2308" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_show_default = true</text>
<text text-anchor="middle" x="5708.5" y="-19329.8307" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5708.5" y="-19314.4307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 5,</text>
<text text-anchor="middle" x="5708.5" y="-19299.0307" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;name&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19283.6306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19268.2306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="5708.5" y="-19252.8306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19237.4306" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19222.0305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19206.6305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19191.2305" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19175.8304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19160.4304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-19145.0304" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="5708.5" y="-19129.6303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="5708.5" y="-19114.2303" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5708.5" y="-19082.8303" font-family="Inconsolata" font-size="14.00" fill="#000000">local Option = class({</text>
<text text-anchor="middle" x="5708.5" y="-19067.4302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_aliases = {},</text>
<text text-anchor="middle" x="5708.5" y="-19052.0302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_mincount = 0,</text>
<text text-anchor="middle" x="5708.5" y="-19036.6302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;_overwrite = true</text>
<text text-anchor="middle" x="5708.5" y="-19021.2301" font-family="Inconsolata" font-size="14.00" fill="#000000">}, {</text>
<text text-anchor="middle" x="5708.5" y="-19005.8301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;args = 6,</text>
<text text-anchor="middle" x="5708.5" y="-18990.4301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;multiname,</text>
<text text-anchor="middle" x="5708.5" y="-18975.0301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;description&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18959.63" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_default,</text>
<text text-anchor="middle" x="5708.5" y="-18944.23" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;convert&quot;, &quot;function&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18928.83" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;args&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18913.4299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;boundaries(&quot;count&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18898.0299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;target&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18882.6299" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;defmode&quot;, &quot;string&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18867.2298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;show_default&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18851.8298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;overwrite&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18836.4298" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;argname&quot;, &quot;string&quot;, &quot;table&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18821.0297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;typechecked(&quot;hidden&quot;, &quot;boolean&quot;),</text>
<text text-anchor="middle" x="5708.5" y="-18805.6297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_action,</text>
<text text-anchor="middle" x="5708.5" y="-18790.2297" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option_init</text>
<text text-anchor="middle" x="5708.5" y="-18774.8296" font-family="Inconsolata" font-size="14.00" fill="#000000">}, Argument)</text>
<text text-anchor="middle" x="5708.5" y="-18743.4296" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_inherit_property(name, default)</text>
<text text-anchor="middle" x="5708.5" y="-18728.0296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local element = self</text>
<text text-anchor="middle" x="5708.5" y="-18696.6296" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="5708.5" y="-18681.2295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local value = element[&quot;_&quot; .. name]</text>
<text text-anchor="middle" x="5708.5" y="-18649.8295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if value ~= nil then</text>
<text text-anchor="middle" x="5708.5" y="-18634.4295" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return value</text>
<text text-anchor="middle" x="5708.5" y="-18619.0294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18587.6294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._parent then</text>
<text text-anchor="middle" x="5708.5" y="-18572.2294" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return default</text>
<text text-anchor="middle" x="5708.5" y="-18556.8293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18525.4293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;element = element._parent</text>
<text text-anchor="middle" x="5708.5" y="-18510.0293" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18494.6292" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-18463.2292" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argument_list()</text>
<text text-anchor="middle" x="5708.5" y="-18447.8292" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="5708.5" y="-18432.4291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local i = 1</text>
<text text-anchor="middle" x="5708.5" y="-18401.0291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._minargs, 3) do</text>
<text text-anchor="middle" x="5708.5" y="-18385.6291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argname = self:_get_argname(i)</text>
<text text-anchor="middle" x="5708.5" y="-18354.2291" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._default and self._defmode:find &quot;a&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-18338.829" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argname = &quot;[&quot; .. argname .. &quot;]&quot;</text>
<text text-anchor="middle" x="5708.5" y="-18323.429" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18292.029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, argname)</text>
<text text-anchor="middle" x="5708.5" y="-18276.6289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="5708.5" y="-18261.2289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18229.8289" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while i &lt;= math.min(self._maxargs, 3) do</text>
<text text-anchor="middle" x="5708.5" y="-18214.4288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;[&quot; .. self:_get_argname(i) .. &quot;]&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-18199.0288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;i = i+1</text>
<text text-anchor="middle" x="5708.5" y="-18167.6288" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == math.huge then</text>
<text text-anchor="middle" x="5708.5" y="-18152.2287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-18136.8287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18121.4287" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18090.0286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if i &lt; self._maxargs then</text>
<text text-anchor="middle" x="5708.5" y="-18074.6286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, &quot;...&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-18059.2286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-18027.8286" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return buf</text>
<text text-anchor="middle" x="5708.5" y="-18012.4285" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17981.0285" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_usage()</text>
<text text-anchor="middle" x="5708.5" y="-17965.6285" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = table.concat(self:_get_argument_list(), &quot; &quot;)</text>
<text text-anchor="middle" x="5708.5" y="-17934.2284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._defmode:find &quot;u&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-17918.8284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs &gt; 1 or (self._minargs == 1 and not self._defmode:find &quot;a&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-17903.4284" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="5708.5" y="-17888.0283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17872.6283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17841.2283" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="5708.5" y="-17825.8282" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17794.4282" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_true(result, target)</text>
<text text-anchor="middle" x="5708.5" y="-17779.0282" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = true</text>
<text text-anchor="middle" x="5708.5" y="-17763.6282" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17732.2281" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store_false(result, target)</text>
<text text-anchor="middle" x="5708.5" y="-17716.8281" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = false</text>
<text text-anchor="middle" x="5708.5" y="-17701.4281" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17670.028" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.store(result, target, argument)</text>
<text text-anchor="middle" x="5708.5" y="-17654.628" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = argument</text>
<text text-anchor="middle" x="5708.5" y="-17639.228" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17607.8279" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.count(result, target, _, overwrite)</text>
<text text-anchor="middle" x="5708.5" y="-17592.4279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not overwrite then</text>
<text text-anchor="middle" x="5708.5" y="-17577.0279" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result[target] = result[target] + 1</text>
<text text-anchor="middle" x="5708.5" y="-17561.6278" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17546.2278" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17514.8278" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.append(result, target, argument, overwrite)</text>
<text text-anchor="middle" x="5708.5" y="-17499.4277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="5708.5" y="-17484.0277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="5708.5" y="-17452.6277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="5708.5" y="-17437.2277" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.remove(result[target], 1)</text>
<text text-anchor="middle" x="5708.5" y="-17421.8276" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17406.4276" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17375.0276" font-family="Inconsolata" font-size="14.00" fill="#000000">function actions.concat(result, target, arguments, overwrite)</text>
<text text-anchor="middle" x="5708.5" y="-17359.6275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if overwrite then</text>
<text text-anchor="middle" x="5708.5" y="-17344.2275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(&quot;&#39;concat&#39; action can&#39;t handle too many invocations&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-17328.8275" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17297.4274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result[target] = result[target] or {}</text>
<text text-anchor="middle" x="5708.5" y="-17266.0274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(arguments) do</text>
<text text-anchor="middle" x="5708.5" y="-17250.6274" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result[target], argument)</text>
<text text-anchor="middle" x="5708.5" y="-17235.2273" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17219.8273" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-17188.4273" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_action()</text>
<text text-anchor="middle" x="5708.5" y="-17173.0272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local action, init</text>
<text text-anchor="middle" x="5708.5" y="-17141.6272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._maxcount == 1 then</text>
<text text-anchor="middle" x="5708.5" y="-17126.2272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-17110.8272" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store_true&quot;, nil</text>
<text text-anchor="middle" x="5708.5" y="-17095.4271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-17080.0271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;store&quot;, nil</text>
<text text-anchor="middle" x="5708.5" y="-17064.6271" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-17049.227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-17033.827" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._maxargs == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-17018.427" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;count&quot;, 0</text>
<text text-anchor="middle" x="5708.5" y="-17003.0269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-16987.6269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action, init = &quot;append&quot;, {}</text>
<text text-anchor="middle" x="5708.5" y="-16972.2269" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16956.8268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16925.4268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._action then</text>
<text text-anchor="middle" x="5708.5" y="-16910.0268" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = self._action</text>
<text text-anchor="middle" x="5708.5" y="-16894.6267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16863.2267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_init then</text>
<text text-anchor="middle" x="5708.5" y="-16847.8267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;init = self._init</text>
<text text-anchor="middle" x="5708.5" y="-16832.4267" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16801.0266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(action) == &quot;string&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-16785.6266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;action = actions[action]</text>
<text text-anchor="middle" x="5708.5" y="-16770.2266" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16738.8265" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return action, init</text>
<text text-anchor="middle" x="5708.5" y="-16723.4265" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-16692.0265" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns placeholder for `narg`&#45;th argument.</text>
<text text-anchor="middle" x="5708.5" y="-16676.6264" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_argname(narg)</text>
<text text-anchor="middle" x="5708.5" y="-16661.2264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argname = self._argname or self:_get_default_argname()</text>
<text text-anchor="middle" x="5708.5" y="-16629.8264" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(argname) == &quot;table&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-16614.4263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname[narg]</text>
<text text-anchor="middle" x="5708.5" y="-16599.0263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-16583.6263" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return argname</text>
<text text-anchor="middle" x="5708.5" y="-16568.2262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16552.8262" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-16521.4262" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_argname()</text>
<text text-anchor="middle" x="5708.5" y="-16506.0262" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return &quot;&lt;&quot; .. self._name .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-16490.6261" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-16459.2261" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_argname()</text>
<text text-anchor="middle" x="5708.5" y="-16443.8261" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return &quot;&lt;&quot; .. self:_get_default_target() .. &quot;&gt;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-16428.426" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-16397.026" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Returns labels to be shown in the help message.</text>
<text text-anchor="middle" x="5708.5" y="-16381.626" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_label_lines()</text>
<text text-anchor="middle" x="5708.5" y="-16366.2259" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {self._name}</text>
<text text-anchor="middle" x="5708.5" y="-16350.8259" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-16319.4259" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_label_lines()</text>
<text text-anchor="middle" x="5708.5" y="-16304.0258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list = self:_get_argument_list()</text>
<text text-anchor="middle" x="5708.5" y="-16272.6258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #argument_list == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-16257.2258" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Don&#39;t put aliases for simple flags like `&#45;h` on different lines.</text>
<text text-anchor="middle" x="5708.5" y="-16241.8257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="5708.5" y="-16226.4257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16195.0257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local longest_alias_length = &#45;1</text>
<text text-anchor="middle" x="5708.5" y="-16163.6257" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-16148.2256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;longest_alias_length = math.max(longest_alias_length, #alias)</text>
<text text-anchor="middle" x="5708.5" y="-16132.8256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-16101.4256" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_list_repr = table.concat(argument_list, &quot; &quot;)</text>
<text text-anchor="middle" x="5708.5" y="-16086.0255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="5708.5" y="-16054.6255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-16039.2255" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local line = (&quot; &quot;):rep(longest_alias_length &#45; #alias) .. alias .. &quot; &quot; .. argument_list_repr</text>
<text text-anchor="middle" x="5708.5" y="-16007.8254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if i ~= #self._aliases then</text>
<text text-anchor="middle" x="5708.5" y="-15992.4254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. &quot;,&quot;</text>
<text text-anchor="middle" x="5708.5" y="-15977.0254" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15945.6253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="5708.5" y="-15930.2253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15898.8253" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="5708.5" y="-15883.4252" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15852.0252" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_label_lines()</text>
<text text-anchor="middle" x="5708.5" y="-15836.6252" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return {table.concat(self._aliases, &quot;, &quot;)}</text>
<text text-anchor="middle" x="5708.5" y="-15821.2252" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15789.8251" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_description()</text>
<text text-anchor="middle" x="5708.5" y="-15774.4251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._default and self._show_default then</text>
<text text-anchor="middle" x="5708.5" y="-15759.0251" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._description then</text>
<text text-anchor="middle" x="5708.5" y="-15743.625" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;%s (default: %s)&quot;):format(self._description, self._default)</text>
<text text-anchor="middle" x="5708.5" y="-15728.225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-15712.825" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (&quot;default: %s&quot;):format(self._default)</text>
<text text-anchor="middle" x="5708.5" y="-15697.4249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15682.0249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-15666.6249" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._description or &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-15651.2248" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15635.8248" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15604.4248" font-family="Inconsolata" font-size="14.00" fill="#000000">function Command:_get_description()</text>
<text text-anchor="middle" x="5708.5" y="-15589.0247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._description or &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-15573.6247" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15542.2247" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_usage()</text>
<text text-anchor="middle" x="5708.5" y="-15526.8247" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage = self:_get_argument_list()</text>
<text text-anchor="middle" x="5708.5" y="-15511.4246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(usage, 1, self._name)</text>
<text text-anchor="middle" x="5708.5" y="-15496.0246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;usage = table.concat(usage, &quot; &quot;)</text>
<text text-anchor="middle" x="5708.5" y="-15464.6246" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._mincount == 0 or self._default then</text>
<text text-anchor="middle" x="5708.5" y="-15449.2245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;usage = &quot;[&quot; .. usage .. &quot;]&quot;</text>
<text text-anchor="middle" x="5708.5" y="-15433.8245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15402.4245" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return usage</text>
<text text-anchor="middle" x="5708.5" y="-15387.0244" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15355.6244" font-family="Inconsolata" font-size="14.00" fill="#000000">function Argument:_get_default_target()</text>
<text text-anchor="middle" x="5708.5" y="-15340.2244" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._name</text>
<text text-anchor="middle" x="5708.5" y="-15324.8243" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15293.4243" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_get_default_target()</text>
<text text-anchor="middle" x="5708.5" y="-15278.0243" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res</text>
<text text-anchor="middle" x="5708.5" y="-15246.6242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, alias in ipairs(self._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-15231.2242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if alias:sub(1, 1) == alias:sub(2, 2) then</text>
<text text-anchor="middle" x="5708.5" y="-15215.8242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res = alias:sub(3)</text>
<text text-anchor="middle" x="5708.5" y="-15200.4242" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-15185.0241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15169.6241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-15138.2241" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;res = res or self._name:sub(2)</text>
<text text-anchor="middle" x="5708.5" y="-15122.824" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return (res:gsub(&quot;&#45;&quot;, &quot;_&quot;))</text>
<text text-anchor="middle" x="5708.5" y="-15107.424" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15076.024" font-family="Inconsolata" font-size="14.00" fill="#000000">function Option:_is_vararg()</text>
<text text-anchor="middle" x="5708.5" y="-15060.6239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self._maxargs ~= self._minargs</text>
<text text-anchor="middle" x="5708.5" y="-15045.2239" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-15013.8239" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_fullname()</text>
<text text-anchor="middle" x="5708.5" y="-14998.4238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parent = self._parent</text>
<text text-anchor="middle" x="5708.5" y="-14983.0238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {self._name}</text>
<text text-anchor="middle" x="5708.5" y="-14951.6238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while parent do</text>
<text text-anchor="middle" x="5708.5" y="-14936.2238" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(buf, 1, parent._name)</text>
<text text-anchor="middle" x="5708.5" y="-14920.8237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;parent = parent._parent</text>
<text text-anchor="middle" x="5708.5" y="-14905.4237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14874.0237" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(buf, &quot; &quot;)</text>
<text text-anchor="middle" x="5708.5" y="-14858.6236" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14827.2236" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_update_charset(charset)</text>
<text text-anchor="middle" x="5708.5" y="-14811.8236" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;charset = charset or {}</text>
<text text-anchor="middle" x="5708.5" y="-14780.4235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self._commands) do</text>
<text text-anchor="middle" x="5708.5" y="-14765.0235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;command:_update_charset(charset)</text>
<text text-anchor="middle" x="5708.5" y="-14749.6235" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14718.2234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5708.5" y="-14702.8234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-14687.4234" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;charset[alias:sub(1, 1)] = true</text>
<text text-anchor="middle" x="5708.5" y="-14672.0233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14656.6233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14625.2233" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return charset</text>
<text text-anchor="middle" x="5708.5" y="-14609.8233" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14578.4232" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:argument(...)</text>
<text text-anchor="middle" x="5708.5" y="-14563.0232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument = Argument(...)</text>
<text text-anchor="middle" x="5708.5" y="-14547.6232" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._arguments, argument)</text>
<text text-anchor="middle" x="5708.5" y="-14532.2231" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="5708.5" y="-14516.8231" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14485.4231" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:option(...)</text>
<text text-anchor="middle" x="5708.5" y="-14470.023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = Option(...)</text>
<text text-anchor="middle" x="5708.5" y="-14438.623" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._has_help then</text>
<text text-anchor="middle" x="5708.5" y="-14423.223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._options, #self._options, option)</text>
<text text-anchor="middle" x="5708.5" y="-14407.8229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-14392.4229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self._options, option)</text>
<text text-anchor="middle" x="5708.5" y="-14377.0229" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14345.6228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return option</text>
<text text-anchor="middle" x="5708.5" y="-14330.2228" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14298.8228" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:flag(...)</text>
<text text-anchor="middle" x="5708.5" y="-14283.4228" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:option():args(0)(...)</text>
<text text-anchor="middle" x="5708.5" y="-14268.0227" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14236.6227" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:command(...)</text>
<text text-anchor="middle" x="5708.5" y="-14221.2227" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = Command():add_help(true)(...)</text>
<text text-anchor="middle" x="5708.5" y="-14205.8226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command._parent = self</text>
<text text-anchor="middle" x="5708.5" y="-14190.4226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._commands, command)</text>
<text text-anchor="middle" x="5708.5" y="-14175.0226" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return command</text>
<text text-anchor="middle" x="5708.5" y="-14159.6225" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-14128.2225" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:mutex(...)</text>
<text text-anchor="middle" x="5708.5" y="-14112.8225" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements = {...}</text>
<text text-anchor="middle" x="5708.5" y="-14081.4224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(elements) do</text>
<text text-anchor="middle" x="5708.5" y="-14066.0224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="5708.5" y="-14050.6224" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument, (&quot;bad argument #%d to &#39;mutex&#39; (Option or Argument expected)&quot;):format(i))</text>
<text text-anchor="middle" x="5708.5" y="-14035.2223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-14003.8223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._mutexes, elements)</text>
<text text-anchor="middle" x="5708.5" y="-13988.4223" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-13973.0223" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-13941.6222" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:group(name, ...)</text>
<text text-anchor="middle" x="5708.5" y="-13926.2222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;assert(type(name) == &quot;string&quot;, (&quot;bad argument #1 to &#39;group&#39; (string expected, got %s)&quot;):format(type(name)))</text>
<text text-anchor="middle" x="5708.5" y="-13894.8222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local group = {name = name, ...}</text>
<text text-anchor="middle" x="5708.5" y="-13863.4221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i, element in ipairs(group) do</text>
<text text-anchor="middle" x="5708.5" y="-13848.0221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mt = getmetatable(element)</text>
<text text-anchor="middle" x="5708.5" y="-13832.6221" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;assert(mt == Option or mt == Argument or mt == Command,</text>
<text text-anchor="middle" x="5708.5" y="-13817.222" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;bad argument #%d to &#39;group&#39; (Option or Argument or Command expected)&quot;):format(i + 1))</text>
<text text-anchor="middle" x="5708.5" y="-13801.822" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-13770.422" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self._groups, group)</text>
<text text-anchor="middle" x="5708.5" y="-13755.0219" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-13739.6219" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-13708.2219" font-family="Inconsolata" font-size="14.00" fill="#000000">local usage_welcome = &quot;Usage: &quot;</text>
<text text-anchor="middle" x="5708.5" y="-13676.8218" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_usage()</text>
<text text-anchor="middle" x="5708.5" y="-13661.4218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._usage then</text>
<text text-anchor="middle" x="5708.5" y="-13646.0218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._usage</text>
<text text-anchor="middle" x="5708.5" y="-13630.6218" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-13599.2217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = self:_inherit_property(&quot;usage_margin&quot;, #usage_welcome)</text>
<text text-anchor="middle" x="5708.5" y="-13583.8217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local max_usage_width = self:_inherit_property(&quot;usage_max_width&quot;, 70)</text>
<text text-anchor="middle" x="5708.5" y="-13568.4217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {usage_welcome .. self:_get_fullname()}</text>
<text text-anchor="middle" x="5708.5" y="-13537.0216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add(s)</text>
<text text-anchor="middle" x="5708.5" y="-13521.6216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #lines[#lines]+1+#s &lt;= max_usage_width then</text>
<text text-anchor="middle" x="5708.5" y="-13506.2216" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines] = lines[#lines] .. &quot; &quot; .. s</text>
<text text-anchor="middle" x="5708.5" y="-13490.8215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-13475.4215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lines[#lines+1] = (&quot; &quot;):rep(usage_margin) .. s</text>
<text text-anchor="middle" x="5708.5" y="-13460.0215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-13444.6214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-13413.2214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Normally options are before positional arguments in usage messages.</text>
<text text-anchor="middle" x="5708.5" y="-13397.8214" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; However, vararg options should be after, because they can&#39;t be reliable used</text>
<text text-anchor="middle" x="5708.5" y="-13382.4213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; before a positional argument.</text>
<text text-anchor="middle" x="5708.5" y="-13367.0213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Mutexes come into play, too, and are shown as soon as possible.</text>
<text text-anchor="middle" x="5708.5" y="-13351.6213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Overall, output usages in the following order:</text>
<text text-anchor="middle" x="5708.5" y="-13336.2213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Mutexes that don&#39;t have positional arguments or vararg options.</text>
<text text-anchor="middle" x="5708.5" y="-13320.8212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Options that are not in any mutexes and are not vararg.</text>
<text text-anchor="middle" x="5708.5" y="-13305.4212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Positional arguments &#45; on their own or as a part of a mutex.</text>
<text text-anchor="middle" x="5708.5" y="-13290.0212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 4. Remaining mutexes.</text>
<text text-anchor="middle" x="5708.5" y="-13274.6211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 5. Remaining options.</text>
<text text-anchor="middle" x="5708.5" y="-13243.2211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local elements_in_mutexes = {}</text>
<text text-anchor="middle" x="5708.5" y="-13227.8211" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="5708.5" y="-13212.421" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_mutexes = {}</text>
<text text-anchor="middle" x="5708.5" y="-13197.021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local argument_to_mutexes = {}</text>
<text text-anchor="middle" x="5708.5" y="-13165.621" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_mutex(mutex, main_argument)</text>
<text text-anchor="middle" x="5708.5" y="-13150.2209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if added_mutexes[mutex] then</text>
<text text-anchor="middle" x="5708.5" y="-13134.8209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return</text>
<text text-anchor="middle" x="5708.5" y="-13119.4209" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-13088.0208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;added_mutexes[mutex] = true</text>
<text text-anchor="middle" x="5708.5" y="-13072.6208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local buf = {}</text>
<text text-anchor="middle" x="5708.5" y="-13041.2208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5708.5" y="-13025.8208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5708.5" y="-13010.4207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option or element == main_argument then</text>
<text text-anchor="middle" x="5708.5" y="-12995.0207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, element:_get_usage())</text>
<text text-anchor="middle" x="5708.5" y="-12979.6207" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5708.5" y="-12964.2206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12948.8206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12933.4206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12902.0205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #buf == 1 then</text>
<text text-anchor="middle" x="5708.5" y="-12886.6205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(buf[1])</text>
<text text-anchor="middle" x="5708.5" y="-12871.2205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif #buf &gt; 1 then</text>
<text text-anchor="middle" x="5708.5" y="-12855.8204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;(&quot; .. table.concat(buf, &quot; | &quot;) .. &quot;)&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-12840.4204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12825.0204" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12793.6203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local function add_element(element)</text>
<text text-anchor="middle" x="5708.5" y="-12778.2203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5708.5" y="-12762.8203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(element:_get_usage())</text>
<text text-anchor="middle" x="5708.5" y="-12747.4203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5708.5" y="-12732.0202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12716.6202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12685.2202" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="5708.5" y="-12669.8201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local is_vararg = false</text>
<text text-anchor="middle" x="5708.5" y="-12654.4201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local has_argument = false</text>
<text text-anchor="middle" x="5708.5" y="-12623.0201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5708.5" y="-12607.62" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(element) == Option then</text>
<text text-anchor="middle" x="5708.5" y="-12592.22" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if element:_is_vararg() then</text>
<text text-anchor="middle" x="5708.5" y="-12576.82" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;is_vararg = true</text>
<text text-anchor="middle" x="5708.5" y="-12561.4199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12546.0199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-12530.6199" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;has_argument = true</text>
<text text-anchor="middle" x="5708.5" y="-12515.2198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument_to_mutexes[element] = argument_to_mutexes[element] or {}</text>
<text text-anchor="middle" x="5708.5" y="-12499.8198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(argument_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="5708.5" y="-12484.4198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12453.0198" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elements_in_mutexes[element] = true</text>
<text text-anchor="middle" x="5708.5" y="-12437.6197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12406.2197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not is_vararg and not has_argument then</text>
<text text-anchor="middle" x="5708.5" y="-12390.8197" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="5708.5" y="-12375.4196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12360.0196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12328.6196" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5708.5" y="-12313.2195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not elements_in_mutexes[option] and not option:_is_vararg() then</text>
<text text-anchor="middle" x="5708.5" y="-12297.8195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="5708.5" y="-12282.4195" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12267.0194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12235.6194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Add usages for positional arguments, together with one mutex containing them, if they are in a mutex.</text>
<text text-anchor="middle" x="5708.5" y="-12220.2194" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(self._arguments) do</text>
<text text-anchor="middle" x="5708.5" y="-12204.8193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Pick a mutex as a part of which to show this argument, take the first one that&#39;s still available.</text>
<text text-anchor="middle" x="5708.5" y="-12189.4193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mutex</text>
<text text-anchor="middle" x="5708.5" y="-12158.0193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if elements_in_mutexes[argument] then</text>
<text text-anchor="middle" x="5708.5" y="-12142.6193" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, argument_mutex in ipairs(argument_to_mutexes[argument]) do</text>
<text text-anchor="middle" x="5708.5" y="-12127.2192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not added_mutexes[argument_mutex] then</text>
<text text-anchor="middle" x="5708.5" y="-12111.8192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mutex = argument_mutex</text>
<text text-anchor="middle" x="5708.5" y="-12096.4192" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12081.0191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12065.6191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-12034.2191" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if mutex then</text>
<text text-anchor="middle" x="5708.5" y="-12018.819" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_mutex(mutex, argument)</text>
<text text-anchor="middle" x="5708.5" y="-12003.419" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-11988.019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add_element(argument)</text>
<text text-anchor="middle" x="5708.5" y="-11972.6189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11957.2189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11925.8189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(self._mutexes) do</text>
<text text-anchor="middle" x="5708.5" y="-11910.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_mutex(mutex)</text>
<text text-anchor="middle" x="5708.5" y="-11895.0188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11863.6188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self._options) do</text>
<text text-anchor="middle" x="5708.5" y="-11848.2188" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add_element(option)</text>
<text text-anchor="middle" x="5708.5" y="-11832.8187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11801.4187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self._commands &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-11786.0187" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self._require_command then</text>
<text text-anchor="middle" x="5708.5" y="-11770.6186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;&lt;command&gt;&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11755.2186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-11739.8186" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;add(&quot;[&lt;command&gt;]&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11724.4185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11693.0185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;add(&quot;...&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11677.6185" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11646.2184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11630.8184" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-11599.4184" font-family="Inconsolata" font-size="14.00" fill="#000000">local function split_lines(s)</text>
<text text-anchor="middle" x="5708.5" y="-11584.0184" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s == &quot;&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-11568.6183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return {}</text>
<text text-anchor="middle" x="5708.5" y="-11553.2183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11521.8183" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local lines = {}</text>
<text text-anchor="middle" x="5708.5" y="-11490.4182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if s:sub(&#45;1) ~= &quot;\n&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-11475.0182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;s = s .. &quot;\n&quot;</text>
<text text-anchor="middle" x="5708.5" y="-11459.6182" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11428.2181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for line in s:gmatch(&quot;([^\n]*)\n&quot;) do</text>
<text text-anchor="middle" x="5708.5" y="-11412.8181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(lines, line)</text>
<text text-anchor="middle" x="5708.5" y="-11397.4181" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11366.018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lines</text>
<text text-anchor="middle" x="5708.5" y="-11350.618" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-11319.218" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="5708.5" y="-11303.8179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Algorithm for splitting lines is simple and greedy.</text>
<text text-anchor="middle" x="5708.5" y="-11288.4179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5708.5" y="-11257.0179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Preserve original indentation of the line, put this at the beginning of each result line.</text>
<text text-anchor="middle" x="5708.5" y="-11241.6179" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If the first word looks like a list marker (&#39;*&#39;, &#39;+&#39;, or &#39;&#45;&#39;), add spaces so that starts</text>
<text text-anchor="middle" x="5708.5" y="-11226.2178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; of the second and the following lines vertically align with the start of the second word.</text>
<text text-anchor="middle" x="5708.5" y="-11210.8178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local indentation = line:match(&quot;^ *&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11179.4178" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if line:find(&quot;^ *[%*%+%&#45;]&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-11164.0177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;indentation = indentation .. &quot; &quot; .. line:match(&quot;^ *[%*%+%&#45;]( *)&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-11148.6177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-11117.2177" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Parts of the last line being assembled.</text>
<text text-anchor="middle" x="5708.5" y="-11101.8176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_parts = {}</text>
<text text-anchor="middle" x="5708.5" y="-11070.4176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Length of the current line.</text>
<text text-anchor="middle" x="5708.5" y="-11055.0176" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local line_length = 0</text>
<text text-anchor="middle" x="5708.5" y="-11023.6175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Index of the next character to consider.</text>
<text text-anchor="middle" x="5708.5" y="-11008.2175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local index = 1</text>
<text text-anchor="middle" x="5708.5" y="-10976.8175" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while true do</text>
<text text-anchor="middle" x="5708.5" y="-10961.4174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local word_start, word_finish, word = line:find(&quot;([^ ]+)&quot;, index)</text>
<text text-anchor="middle" x="5708.5" y="-10930.0174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not word_start then</text>
<text text-anchor="middle" x="5708.5" y="-10914.6174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Ignore trailing spaces, if any.</text>
<text text-anchor="middle" x="5708.5" y="-10899.2174" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-10883.8173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10852.4173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local preceding_spaces = line:sub(index, word_start &#45; 1)</text>
<text text-anchor="middle" x="5708.5" y="-10837.0173" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;index = word_finish + 1</text>
<text text-anchor="middle" x="5708.5" y="-10805.6172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if (#line_parts == 0) or (line_length + #preceding_spaces + #word &lt;= max_length) then</text>
<text text-anchor="middle" x="5708.5" y="-10790.2172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Either this is the very first word or it fits as an addition to the current line, add it.</text>
<text text-anchor="middle" x="5708.5" y="-10774.8172" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, preceding_spaces) &#45;&#45; For the very first word this adds the indentation.</text>
<text text-anchor="middle" x="5708.5" y="-10759.4171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(line_parts, word)</text>
<text text-anchor="middle" x="5708.5" y="-10744.0171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = line_length + #preceding_spaces + #word</text>
<text text-anchor="middle" x="5708.5" y="-10728.6171" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-10713.217" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; Does not fit, finish current line and put the word into a new one.</text>
<text text-anchor="middle" x="5708.5" y="-10697.817" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="5708.5" y="-10682.417" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_parts = {indentation, word}</text>
<text text-anchor="middle" x="5708.5" y="-10667.0169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line_length = #indentation + #word</text>
<text text-anchor="middle" x="5708.5" y="-10651.6169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10636.2169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10604.8169" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #line_parts &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-10589.4168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(result_lines, table.concat(line_parts))</text>
<text text-anchor="middle" x="5708.5" y="-10574.0168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10542.6168" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #result_lines == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-10527.2167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#45;&#45; Preserve empty lines.</text>
<text text-anchor="middle" x="5708.5" y="-10511.8167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;result_lines[1] = &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-10496.4167" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10465.0166" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="5708.5" y="-10449.6166" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-10418.2166" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Automatically wraps lines within given array,</text>
<text text-anchor="middle" x="5708.5" y="-10402.8165" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; attempting to limit line length to `max_length`.</text>
<text text-anchor="middle" x="5708.5" y="-10387.4165" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Existing line splits are preserved.</text>
<text text-anchor="middle" x="5708.5" y="-10372.0165" font-family="Inconsolata" font-size="14.00" fill="#000000">local function autowrap(lines, max_length)</text>
<text text-anchor="middle" x="5708.5" y="-10356.6164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5708.5" y="-10325.2164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, line in ipairs(lines) do</text>
<text text-anchor="middle" x="5708.5" y="-10309.8164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local autowrapped_lines = autowrap_line(line, max_length)</text>
<text text-anchor="middle" x="5708.5" y="-10278.4164" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, autowrapped_line in ipairs(autowrapped_lines) do</text>
<text text-anchor="middle" x="5708.5" y="-10263.0163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, autowrapped_line)</text>
<text text-anchor="middle" x="5708.5" y="-10247.6163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10232.2163" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-10200.8162" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return result_lines</text>
<text text-anchor="middle" x="5708.5" y="-10185.4162" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-10154.0162" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_get_element_help(element)</text>
<text text-anchor="middle" x="5708.5" y="-10138.6161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local label_lines = element:_get_label_lines()</text>
<text text-anchor="middle" x="5708.5" y="-10123.2161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_lines = split_lines(element:_get_description())</text>
<text text-anchor="middle" x="5708.5" y="-10091.8161" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local result_lines = {}</text>
<text text-anchor="middle" x="5708.5" y="-10060.416" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; All label lines should have the same length (except the last one, it has no comma).</text>
<text text-anchor="middle" x="5708.5" y="-10045.016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If too long, start description after all the label lines.</text>
<text text-anchor="middle" x="5708.5" y="-10029.616" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Otherwise, combine label and description lines.</text>
<text text-anchor="middle" x="5708.5" y="-9998.2159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin_len = self:_inherit_property(&quot;help_usage_margin&quot;, 3)</text>
<text text-anchor="middle" x="5708.5" y="-9982.8159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local usage_margin = (&quot; &quot;):rep(usage_margin_len)</text>
<text text-anchor="middle" x="5708.5" y="-9967.4159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin_len = self:_inherit_property(&quot;help_description_margin&quot;, 25)</text>
<text text-anchor="middle" x="5708.5" y="-9952.0159" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local description_margin = (&quot; &quot;):rep(description_margin_len)</text>
<text text-anchor="middle" x="5708.5" y="-9920.6158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-9889.2158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5708.5" y="-9873.8158" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description_max_width = math.max(help_max_width &#45; description_margin_len, 10)</text>
<text text-anchor="middle" x="5708.5" y="-9858.4157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;description_lines = autowrap(description_lines, description_max_width)</text>
<text text-anchor="middle" x="5708.5" y="-9843.0157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9811.6157" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #label_lines[1] &gt;= (description_margin_len &#45; usage_margin_len) then</text>
<text text-anchor="middle" x="5708.5" y="-9796.2156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, label_line in ipairs(label_lines) do</text>
<text text-anchor="middle" x="5708.5" y="-9780.8156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, usage_margin .. label_line)</text>
<text text-anchor="middle" x="5708.5" y="-9765.4156" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9734.0155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, description_line in ipairs(description_lines) do</text>
<text text-anchor="middle" x="5708.5" y="-9718.6155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, description_margin .. description_line)</text>
<text text-anchor="middle" x="5708.5" y="-9703.2155" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9687.8154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-9672.4154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, math.max(#label_lines, #description_lines) do</text>
<text text-anchor="middle" x="5708.5" y="-9657.0154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local label_line = label_lines[i]</text>
<text text-anchor="middle" x="5708.5" y="-9641.6154" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local description_line = description_lines[i]</text>
<text text-anchor="middle" x="5708.5" y="-9610.2153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local line = &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-9578.8153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if label_line then</text>
<text text-anchor="middle" x="5708.5" y="-9563.4153" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = usage_margin .. label_line</text>
<text text-anchor="middle" x="5708.5" y="-9548.0152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9516.6152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if description_line and description_line ~= &quot;&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-9501.2152" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;line = line .. (&quot; &quot;):rep(description_margin_len &#45; #line) .. description_line</text>
<text text-anchor="middle" x="5708.5" y="-9485.8151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9454.4151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result_lines, line)</text>
<text text-anchor="middle" x="5708.5" y="-9439.0151" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9423.615" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9392.215" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(result_lines, &quot;\n&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-9376.815" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-9345.4149" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_group_types(group)</text>
<text text-anchor="middle" x="5708.5" y="-9330.0149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local types = {}</text>
<text text-anchor="middle" x="5708.5" y="-9298.6149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(group) do</text>
<text text-anchor="middle" x="5708.5" y="-9283.2149" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;types[getmetatable(element)] = true</text>
<text text-anchor="middle" x="5708.5" y="-9267.8148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9236.4148" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return types</text>
<text text-anchor="middle" x="5708.5" y="-9221.0148" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-9189.6147" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_add_group_help(blocks, added_elements, label, elements)</text>
<text text-anchor="middle" x="5708.5" y="-9174.2147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local buf = {label}</text>
<text text-anchor="middle" x="5708.5" y="-9142.8147" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, element in ipairs(elements) do</text>
<text text-anchor="middle" x="5708.5" y="-9127.4146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not element._hidden and not added_elements[element] then</text>
<text text-anchor="middle" x="5708.5" y="-9112.0146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;added_elements[element] = true</text>
<text text-anchor="middle" x="5708.5" y="-9096.6146" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(buf, self:_get_element_help(element))</text>
<text text-anchor="middle" x="5708.5" y="-9081.2145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9065.8145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-9034.4145" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #buf &gt; 1 then</text>
<text text-anchor="middle" x="5708.5" y="-9019.0144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, table.concat(buf, (&quot;\n&quot;):rep(self:_inherit_property(&quot;help_vertical_space&quot;, 0) + 1)))</text>
<text text-anchor="middle" x="5708.5" y="-9003.6144" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8988.2144" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-8956.8144" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:get_help()</text>
<text text-anchor="middle" x="5708.5" y="-8941.4143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._help then</text>
<text text-anchor="middle" x="5708.5" y="-8926.0143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self._help</text>
<text text-anchor="middle" x="5708.5" y="-8910.6143" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8879.2142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local blocks = {self:get_usage()}</text>
<text text-anchor="middle" x="5708.5" y="-8847.8142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local help_max_width = self:_inherit_property(&quot;help_max_width&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-8816.4142" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._description then</text>
<text text-anchor="middle" x="5708.5" y="-8801.0141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local description = self._description</text>
<text text-anchor="middle" x="5708.5" y="-8769.6141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5708.5" y="-8754.2141" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;description = table.concat(autowrap(split_lines(description), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-8738.814" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8707.414" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, description)</text>
<text text-anchor="middle" x="5708.5" y="-8692.014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8660.614" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 1. Put groups containing arguments first, then other arguments.</text>
<text text-anchor="middle" x="5708.5" y="-8645.2139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 2. Put remaining groups containing options, then other options.</text>
<text text-anchor="middle" x="5708.5" y="-8629.8139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; 3. Put remaining groups containing commands, then other commands.</text>
<text text-anchor="middle" x="5708.5" y="-8614.4139" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; Assume that an element can&#39;t be in several groups.</text>
<text text-anchor="middle" x="5708.5" y="-8599.0138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local groups_by_type = {</text>
<text text-anchor="middle" x="5708.5" y="-8583.6138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Argument] = {},</text>
<text text-anchor="middle" x="5708.5" y="-8568.2138" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Option] = {},</text>
<text text-anchor="middle" x="5708.5" y="-8552.8137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;[Command] = {}</text>
<text text-anchor="middle" x="5708.5" y="-8537.4137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="5708.5" y="-8506.0137" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, group in ipairs(self._groups) do</text>
<text text-anchor="middle" x="5708.5" y="-8490.6136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local group_types = get_group_types(group)</text>
<text text-anchor="middle" x="5708.5" y="-8459.2136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mt in ipairs({Argument, Option, Command}) do</text>
<text text-anchor="middle" x="5708.5" y="-8443.8136" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if group_types[mt] then</text>
<text text-anchor="middle" x="5708.5" y="-8428.4135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(groups_by_type[mt], group)</text>
<text text-anchor="middle" x="5708.5" y="-8413.0135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-8397.6135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8382.2135" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8366.8134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8335.4134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local default_groups = {</text>
<text text-anchor="middle" x="5708.5" y="-8320.0134" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Arguments&quot;, type = Argument, elements = self._arguments},</text>
<text text-anchor="middle" x="5708.5" y="-8304.6133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Options&quot;, type = Option, elements = self._options},</text>
<text text-anchor="middle" x="5708.5" y="-8289.2133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;{name = &quot;Commands&quot;, type = Command, elements = self._commands}</text>
<text text-anchor="middle" x="5708.5" y="-8273.8133" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;}</text>
<text text-anchor="middle" x="5708.5" y="-8242.4132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local added_elements = {}</text>
<text text-anchor="middle" x="5708.5" y="-8211.0132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, default_group in ipairs(default_groups) do</text>
<text text-anchor="middle" x="5708.5" y="-8195.6132" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local type_groups = groups_by_type[default_group.type]</text>
<text text-anchor="middle" x="5708.5" y="-8164.2131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, group in ipairs(type_groups) do</text>
<text text-anchor="middle" x="5708.5" y="-8148.8131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, group.name .. &quot;:&quot;, group)</text>
<text text-anchor="middle" x="5708.5" y="-8133.4131" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8102.013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local default_label = default_group.name .. &quot;:&quot;</text>
<text text-anchor="middle" x="5708.5" y="-8070.613" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #type_groups &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-8055.213" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default_label = &quot;Other &quot; .. default_label:gsub(&quot;^.&quot;, string.lower)</text>
<text text-anchor="middle" x="5708.5" y="-8039.813" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-8008.4129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:_add_group_help(blocks, added_elements, default_label, default_group.elements)</text>
<text text-anchor="middle" x="5708.5" y="-7993.0129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7961.6129" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self._epilog then</text>
<text text-anchor="middle" x="5708.5" y="-7946.2128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local epilog = self._epilog</text>
<text text-anchor="middle" x="5708.5" y="-7914.8128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if help_max_width then</text>
<text text-anchor="middle" x="5708.5" y="-7899.4128" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;epilog = table.concat(autowrap(split_lines(epilog), help_max_width), &quot;\n&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-7884.0127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7852.6127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(blocks, epilog)</text>
<text text-anchor="middle" x="5708.5" y="-7837.2127" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7805.8126" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return table.concat(blocks, &quot;\n\n&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-7790.4126" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-7759.0126" font-family="Inconsolata" font-size="14.00" fill="#000000">local function get_tip(context, wrong_name)</text>
<text text-anchor="middle" x="5708.5" y="-7743.6125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local context_pool = {}</text>
<text text-anchor="middle" x="5708.5" y="-7728.2125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_name</text>
<text text-anchor="middle" x="5708.5" y="-7712.8125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local possible_names = {}</text>
<text text-anchor="middle" x="5708.5" y="-7681.4125" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for name in pairs(context) do</text>
<text text-anchor="middle" x="5708.5" y="-7666.0124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(name) == &quot;string&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-7650.6124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 1, #name do</text>
<text text-anchor="middle" x="5708.5" y="-7635.2124" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_name = name:sub(1, i &#45; 1) .. name:sub(i + 1)</text>
<text text-anchor="middle" x="5708.5" y="-7603.8123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not context_pool[possible_name] then</text>
<text text-anchor="middle" x="5708.5" y="-7588.4123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context_pool[possible_name] = {}</text>
<text text-anchor="middle" x="5708.5" y="-7573.0123" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7541.6122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(context_pool[possible_name], name)</text>
<text text-anchor="middle" x="5708.5" y="-7526.2122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7510.8122" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7495.4121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7464.0121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #wrong_name + 1 do</text>
<text text-anchor="middle" x="5708.5" y="-7448.6121" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;possible_name = wrong_name:sub(1, i &#45; 1) .. wrong_name:sub(i + 1)</text>
<text text-anchor="middle" x="5708.5" y="-7417.212" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if context[possible_name] then</text>
<text text-anchor="middle" x="5708.5" y="-7401.812" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[possible_name] = true</text>
<text text-anchor="middle" x="5708.5" y="-7386.412" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif context_pool[possible_name] then</text>
<text text-anchor="middle" x="5708.5" y="-7371.012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, name in ipairs(context_pool[possible_name]) do</text>
<text text-anchor="middle" x="5708.5" y="-7355.6119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;possible_names[name] = true</text>
<text text-anchor="middle" x="5708.5" y="-7340.2119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7324.8119" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7309.4118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7278.0118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first = next(possible_names)</text>
<text text-anchor="middle" x="5708.5" y="-7246.6118" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if first then</text>
<text text-anchor="middle" x="5708.5" y="-7231.2117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if next(possible_names, first) then</text>
<text text-anchor="middle" x="5708.5" y="-7215.8117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local possible_names_arr = {}</text>
<text text-anchor="middle" x="5708.5" y="-7184.4117" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for name in pairs(possible_names) do</text>
<text text-anchor="middle" x="5708.5" y="-7169.0116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(possible_names_arr, &quot;&#39;&quot; .. name .. &quot;&#39;&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-7153.6116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7122.2116" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.sort(possible_names_arr)</text>
<text text-anchor="middle" x="5708.5" y="-7106.8115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean one of these: &quot; .. table.concat(possible_names_arr, &quot; &quot;) .. &quot;?&quot;</text>
<text text-anchor="middle" x="5708.5" y="-7091.4115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-7076.0115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;\nDid you mean &#39;&quot; .. first .. &quot;&#39;?&quot;</text>
<text text-anchor="middle" x="5708.5" y="-7060.6115" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-7045.2114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-7029.8114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-7014.4114" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-6999.0113" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6967.6113" font-family="Inconsolata" font-size="14.00" fill="#000000">local ElementState = class({</text>
<text text-anchor="middle" x="5708.5" y="-6952.2113" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;invocations = 0</text>
<text text-anchor="middle" x="5708.5" y="-6936.8112" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5708.5" y="-6905.4112" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:__call(state, element)</text>
<text text-anchor="middle" x="5708.5" y="-6890.0112" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state = state</text>
<text text-anchor="middle" x="5708.5" y="-6874.6111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.result = state.result</text>
<text text-anchor="middle" x="5708.5" y="-6859.2111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.element = element</text>
<text text-anchor="middle" x="5708.5" y="-6843.8111" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.target = element._target or element:_get_default_target()</text>
<text text-anchor="middle" x="5708.5" y="-6828.411" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.action, self.result[self.target] = element:_get_action()</text>
<text text-anchor="middle" x="5708.5" y="-6813.011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-6797.611" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6766.211" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:error(fmt, ...)</text>
<text text-anchor="middle" x="5708.5" y="-6750.8109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.state:error(fmt, ...)</text>
<text text-anchor="middle" x="5708.5" y="-6735.4109" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6704.0109" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:convert(argument, index)</text>
<text text-anchor="middle" x="5708.5" y="-6688.6108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local converter = self.element._convert</text>
<text text-anchor="middle" x="5708.5" y="-6657.2108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if converter then</text>
<text text-anchor="middle" x="5708.5" y="-6641.8108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local ok, err</text>
<text text-anchor="middle" x="5708.5" y="-6610.4107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type(converter) == &quot;function&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-6595.0107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter(argument)</text>
<text text-anchor="middle" x="5708.5" y="-6579.6107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif type(converter[index]) == &quot;function&quot; then</text>
<text text-anchor="middle" x="5708.5" y="-6564.2106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok, err = converter[index](argument)</text>
<text text-anchor="middle" x="5708.5" y="-6548.8106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-6533.4106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ok = converter[argument]</text>
<text text-anchor="middle" x="5708.5" y="-6518.0105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-6486.6105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ok == nil then</text>
<text text-anchor="middle" x="5708.5" y="-6471.2105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(err and &quot;%s&quot; or &quot;malformed argument &#39;%s&#39;&quot;, err or argument)</text>
<text text-anchor="middle" x="5708.5" y="-6455.8105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-6424.4104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ok</text>
<text text-anchor="middle" x="5708.5" y="-6409.0104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-6377.6104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return argument</text>
<text text-anchor="middle" x="5708.5" y="-6362.2103" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6330.8103" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:default(mode)</text>
<text text-anchor="middle" x="5708.5" y="-6315.4103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.element._defmode:find(mode) and self.element._default</text>
<text text-anchor="middle" x="5708.5" y="-6300.0102" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6268.6102" font-family="Inconsolata" font-size="14.00" fill="#000000">local function bound(noun, min, max, is_max)</text>
<text text-anchor="middle" x="5708.5" y="-6253.2102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local res = &quot;&quot;</text>
<text text-anchor="middle" x="5708.5" y="-6221.8101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if min ~= max then</text>
<text text-anchor="middle" x="5708.5" y="-6206.4101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;res = &quot;at &quot; .. (is_max and &quot;most&quot; or &quot;least&quot;) .. &quot; &quot;</text>
<text text-anchor="middle" x="5708.5" y="-6191.0101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-6159.61" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local number = is_max and max or min</text>
<text text-anchor="middle" x="5708.5" y="-6144.21" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return res .. tostring(number) .. &quot; &quot; .. noun .. &#160;(number == 1 and &quot;&quot; or &quot;s&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-6128.81" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6097.41" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:set_name(alias)</text>
<text text-anchor="middle" x="5708.5" y="-6082.0099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.name = (&quot;%s &#39;%s&#39;&quot;):format(alias and &quot;option&quot; or &quot;argument&quot;, alias or self.element._name)</text>
<text text-anchor="middle" x="5708.5" y="-6066.6099" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-6035.2099" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:invoke()</text>
<text text-anchor="middle" x="5708.5" y="-6019.8098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.open = true</text>
<text text-anchor="middle" x="5708.5" y="-6004.4098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.overwrite = false</text>
<text text-anchor="middle" x="5708.5" y="-5973.0098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.invocations &gt;= self.element._maxcount then</text>
<text text-anchor="middle" x="5708.5" y="-5957.6097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._overwrite then</text>
<text text-anchor="middle" x="5708.5" y="-5942.2097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.overwrite = true</text>
<text text-anchor="middle" x="5708.5" y="-5926.8097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-5911.4096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local num_times_repr = bound(&quot;time&quot;, self.element._mincount, self.element._maxcount, true)</text>
<text text-anchor="middle" x="5708.5" y="-5896.0096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, self.name, num_times_repr)</text>
<text text-anchor="middle" x="5708.5" y="-5880.6096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5865.2095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-5849.8095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.invocations = self.invocations + 1</text>
<text text-anchor="middle" x="5708.5" y="-5834.4095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5803.0095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.args = {}</text>
<text text-anchor="middle" x="5708.5" y="-5771.6094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="5708.5" y="-5756.2094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5708.5" y="-5740.8094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5709.4093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="5708.5" y="-5694.0093" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-5662.6093" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:pass(argument)</text>
<text text-anchor="middle" x="5708.5" y="-5647.2092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument = self:convert(argument, #self.args + 1)</text>
<text text-anchor="middle" x="5708.5" y="-5631.8092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;table.insert(self.args, argument)</text>
<text text-anchor="middle" x="5708.5" y="-5600.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if #self.args &gt;= self.element._maxargs then</text>
<text text-anchor="middle" x="5708.5" y="-5585.0091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5708.5" y="-5569.6091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5538.2091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.open</text>
<text text-anchor="middle" x="5708.5" y="-5522.8091" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-5491.409" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:complete_invocation()</text>
<text text-anchor="middle" x="5708.5" y="-5476.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;while #self.args &lt; self.element._minargs do</text>
<text text-anchor="middle" x="5708.5" y="-5460.609" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:pass(self.element._default)</text>
<text text-anchor="middle" x="5708.5" y="-5445.2089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5429.8089" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-5398.4089" font-family="Inconsolata" font-size="14.00" fill="#000000">function ElementState:close()</text>
<text text-anchor="middle" x="5708.5" y="-5383.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.open then</text>
<text text-anchor="middle" x="5708.5" y="-5367.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.open = false</text>
<text text-anchor="middle" x="5708.5" y="-5336.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.args &lt; self.element._minargs then</text>
<text text-anchor="middle" x="5708.5" y="-5320.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-5305.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:complete_invocation()</text>
<text text-anchor="middle" x="5708.5" y="-5290.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-5274.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #self.args == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-5259.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if getmetatable(self.element) == Argument then</text>
<text text-anchor="middle" x="5708.5" y="-5243.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, self.name)</text>
<text text-anchor="middle" x="5708.5" y="-5228.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="5708.5" y="-5213.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires an argument&quot;, self.name)</text>
<text text-anchor="middle" x="5708.5" y="-5197.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5182.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5150.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s requires %s&quot;, self.name, bound(&quot;argument&quot;, self.element._minargs, self.element._maxargs))</text>
<text text-anchor="middle" x="5708.5" y="-5135.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5120.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-5088.6083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local args</text>
<text text-anchor="middle" x="5708.5" y="-5057.2083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.element._maxargs == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-5041.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="5708.5" y="-5026.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif self.element._maxargs == 1 then</text>
<text text-anchor="middle" x="5708.5" y="-5011.0082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.element._minargs == 0 and self.element._mincount ~= self.element._maxcount then</text>
<text text-anchor="middle" x="5708.5" y="-4995.6082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="5708.5" y="-4980.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-4964.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args[1]</text>
<text text-anchor="middle" x="5708.5" y="-4949.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4934.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-4918.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;args = self.args</text>
<text text-anchor="middle" x="5708.5" y="-4903.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4871.808" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.action(self.result, self.target, args, self.overwrite)</text>
<text text-anchor="middle" x="5708.5" y="-4856.4079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4841.0079" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-4809.6079" font-family="Inconsolata" font-size="14.00" fill="#000000">local ParseState = class({</text>
<text text-anchor="middle" x="5708.5" y="-4794.2078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;result = {},</text>
<text text-anchor="middle" x="5708.5" y="-4778.8078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;options = {},</text>
<text text-anchor="middle" x="5708.5" y="-4763.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;arguments = {},</text>
<text text-anchor="middle" x="5708.5" y="-4748.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;argument_i = 1,</text>
<text text-anchor="middle" x="5708.5" y="-4732.6077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;element_to_mutexes = {},</text>
<text text-anchor="middle" x="5708.5" y="-4717.2077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;mutex_to_element_state = {},</text>
<text text-anchor="middle" x="5708.5" y="-4701.8076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;command_actions = {}</text>
<text text-anchor="middle" x="5708.5" y="-4686.4076" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="5708.5" y="-4655.0076" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:__call(parser, error_handler)</text>
<text text-anchor="middle" x="5708.5" y="-4639.6076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="5708.5" y="-4624.2075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler = error_handler</text>
<text text-anchor="middle" x="5708.5" y="-4608.8075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.charset = parser:_update_charset()</text>
<text text-anchor="middle" x="5708.5" y="-4593.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:switch(parser)</text>
<text text-anchor="middle" x="5708.5" y="-4578.0074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self</text>
<text text-anchor="middle" x="5708.5" y="-4562.6074" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-4531.2074" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:error(fmt, ...)</text>
<text text-anchor="middle" x="5708.5" y="-4515.8073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.error_handler(self.parser, fmt:format(...))</text>
<text text-anchor="middle" x="5708.5" y="-4500.4073" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-4469.0073" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:switch(parser)</text>
<text text-anchor="middle" x="5708.5" y="-4453.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.parser = parser</text>
<text text-anchor="middle" x="5708.5" y="-4422.2072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if parser._action then</text>
<text text-anchor="middle" x="5708.5" y="-4406.8072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.command_actions, {action = parser._action, name = parser._name})</text>
<text text-anchor="middle" x="5708.5" y="-4391.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4360.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(parser._options) do</text>
<text text-anchor="middle" x="5708.5" y="-4344.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option = ElementState(self, option)</text>
<text text-anchor="middle" x="5708.5" y="-4329.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.options, option)</text>
<text text-anchor="middle" x="5708.5" y="-4297.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(option.element._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-4282.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.options[alias] = option</text>
<text text-anchor="middle" x="5708.5" y="-4267.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4251.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4220.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, mutex in ipairs(parser._mutexes) do</text>
<text text-anchor="middle" x="5708.5" y="-4204.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, element in ipairs(mutex) do</text>
<text text-anchor="middle" x="5708.5" y="-4189.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not self.element_to_mutexes[element] then</text>
<text text-anchor="middle" x="5708.5" y="-4174.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.element_to_mutexes[element] = {}</text>
<text text-anchor="middle" x="5708.5" y="-4158.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4127.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(self.element_to_mutexes[element], mutex)</text>
<text text-anchor="middle" x="5708.5" y="-4111.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4096.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-4065.0066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, argument in ipairs(parser._arguments) do</text>
<text text-anchor="middle" x="5708.5" y="-4049.6066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument = ElementState(self, argument)</text>
<text text-anchor="middle" x="5708.5" y="-4034.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;table.insert(self.arguments, argument)</text>
<text text-anchor="middle" x="5708.5" y="-4018.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:set_name()</text>
<text text-anchor="middle" x="5708.5" y="-4003.4065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;argument:invoke()</text>
<text text-anchor="middle" x="5708.5" y="-3988.0065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3956.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.handle_options = parser._handle_options</text>
<text text-anchor="middle" x="5708.5" y="-3941.2064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="5708.5" y="-3925.8064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self.commands = parser._commands</text>
<text text-anchor="middle" x="5708.5" y="-3894.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, command in ipairs(self.commands) do</text>
<text text-anchor="middle" x="5708.5" y="-3879.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, alias in ipairs(command._aliases) do</text>
<text text-anchor="middle" x="5708.5" y="-3863.6063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.commands[alias] = command</text>
<text text-anchor="middle" x="5708.5" y="-3848.2063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3832.8062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3817.4062" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-3786.0062" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_option(name)</text>
<text text-anchor="middle" x="5708.5" y="-3770.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local option = self.options[name]</text>
<text text-anchor="middle" x="5708.5" y="-3739.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not option then</text>
<text text-anchor="middle" x="5708.5" y="-3723.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown option &#39;%s&#39;%s&quot;, name, get_tip(self.options, name))</text>
<text text-anchor="middle" x="5708.5" y="-3708.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-3693.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return option</text>
<text text-anchor="middle" x="5708.5" y="-3677.606" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3662.206" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-3630.8059" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:get_command(name)</text>
<text text-anchor="middle" x="5708.5" y="-3615.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local command = self.commands[name]</text>
<text text-anchor="middle" x="5708.5" y="-3584.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if not command then</text>
<text text-anchor="middle" x="5708.5" y="-3568.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-3553.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;unknown command &#39;%s&#39;%s&quot;, name, get_tip(self.commands, name))</text>
<text text-anchor="middle" x="5708.5" y="-3537.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-3522.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;too many arguments&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-3507.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3491.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-3476.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return command</text>
<text text-anchor="middle" x="5708.5" y="-3460.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3445.4056" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-3414.0056" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:check_mutexes(element_state)</text>
<text text-anchor="middle" x="5708.5" y="-3398.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.element_to_mutexes[element_state.element] then</text>
<text text-anchor="middle" x="5708.5" y="-3383.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _, mutex in ipairs(self.element_to_mutexes[element_state.element]) do</text>
<text text-anchor="middle" x="5708.5" y="-3367.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local used_element_state = self.mutex_to_element_state[mutex]</text>
<text text-anchor="middle" x="5708.5" y="-3336.4054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if used_element_state and used_element_state ~= element_state then</text>
<text text-anchor="middle" x="5708.5" y="-3321.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s can not be used together with %s&quot;, element_state.name, used_element_state.name)</text>
<text text-anchor="middle" x="5708.5" y="-3305.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-3290.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.mutex_to_element_state[mutex] = element_state</text>
<text text-anchor="middle" x="5708.5" y="-3274.8053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3259.4053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3244.0052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3228.6052" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-3197.2052" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:invoke(option, name)</text>
<text text-anchor="middle" x="5708.5" y="-3181.8051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="5708.5" y="-3166.4051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;option:set_name(name)</text>
<text text-anchor="middle" x="5708.5" y="-3151.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:check_mutexes(option, name)</text>
<text text-anchor="middle" x="5708.5" y="-3119.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if option:invoke() then</text>
<text text-anchor="middle" x="5708.5" y="-3104.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = option</text>
<text text-anchor="middle" x="5708.5" y="-3088.805" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-3073.405" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-3042.0049" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:pass(arg)</text>
<text text-anchor="middle" x="5708.5" y="-3026.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="5708.5" y="-3011.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.option:pass(arg) then</text>
<text text-anchor="middle" x="5708.5" y="-2995.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="5708.5" y="-2980.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2965.0048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif self.argument then</text>
<text text-anchor="middle" x="5708.5" y="-2949.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:check_mutexes(self.argument)</text>
<text text-anchor="middle" x="5708.5" y="-2918.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if not self.argument:pass(arg) then</text>
<text text-anchor="middle" x="5708.5" y="-2902.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument_i = self.argument_i + 1</text>
<text text-anchor="middle" x="5708.5" y="-2887.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.argument = self.arguments[self.argument_i]</text>
<text text-anchor="middle" x="5708.5" y="-2872.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2856.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-2841.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local command = self:get_command(arg)</text>
<text text-anchor="middle" x="5708.5" y="-2825.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.result[command._target or command._name] = true</text>
<text text-anchor="middle" x="5708.5" y="-2794.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.parser._command_target then</text>
<text text-anchor="middle" x="5708.5" y="-2779.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.result[self.parser._command_target] = command._name</text>
<text text-anchor="middle" x="5708.5" y="-2763.6044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2732.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:switch(command)</text>
<text text-anchor="middle" x="5708.5" y="-2716.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2701.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-2670.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:close()</text>
<text text-anchor="middle" x="5708.5" y="-2654.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.option then</text>
<text text-anchor="middle" x="5708.5" y="-2639.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option:close()</text>
<text text-anchor="middle" x="5708.5" y="-2623.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.option = nil</text>
<text text-anchor="middle" x="5708.5" y="-2608.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2593.0042" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-2561.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:finalize()</text>
<text text-anchor="middle" x="5708.5" y="-2546.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:close()</text>
<text text-anchor="middle" x="5708.5" y="-2514.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = self.argument_i, #self.arguments do</text>
<text text-anchor="middle" x="5708.5" y="-2499.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local argument = self.arguments[i]</text>
<text text-anchor="middle" x="5708.5" y="-2484.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if #argument.args == 0 and argument:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-2468.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:complete_invocation()</text>
<text text-anchor="middle" x="5708.5" y="-2453.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-2437.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;argument:close()</text>
<text text-anchor="middle" x="5708.5" y="-2422.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2407.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2375.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if self.parser._require_command and #self.commands &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-2360.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self:error(&quot;a command is required&quot;)</text>
<text text-anchor="middle" x="5708.5" y="-2344.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2313.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, option in ipairs(self.options) do</text>
<text text-anchor="middle" x="5708.5" y="-2298.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;option.name = option.name or (&quot;option &#39;%s&#39;&quot;):format(option.element._name)</text>
<text text-anchor="middle" x="5708.5" y="-2266.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-2251.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;u&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-2235.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="5708.5" y="-2220.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:complete_invocation()</text>
<text text-anchor="middle" x="5708.5" y="-2205.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="5708.5" y="-2189.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2174.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2142.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local mincount = option.element._mincount</text>
<text text-anchor="middle" x="5708.5" y="-2111.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if option.invocations &lt; mincount then</text>
<text text-anchor="middle" x="5708.5" y="-2096.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option:default(&quot;a&quot;) then</text>
<text text-anchor="middle" x="5708.5" y="-2080.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while option.invocations &lt; mincount do</text>
<text text-anchor="middle" x="5708.5" y="-2065.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:invoke()</text>
<text text-anchor="middle" x="5708.5" y="-2049.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;option:close()</text>
<text text-anchor="middle" x="5708.5" y="-2034.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-2019.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif option.invocations == 0 then</text>
<text text-anchor="middle" x="5708.5" y="-2003.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;missing %s&quot;, option.name)</text>
<text text-anchor="middle" x="5708.5" y="-1988.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-1972.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;%s must be used %s&quot;, option.name, bound(&quot;time&quot;, mincount, option.element._maxcount))</text>
<text text-anchor="middle" x="5708.5" y="-1957.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1942.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1926.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1895.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = #self.command_actions, 1, &#45;1 do</text>
<text text-anchor="middle" x="5708.5" y="-1879.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;self.command_actions[i].action(self.result, self.command_actions[i].name)</text>
<text text-anchor="middle" x="5708.5" y="-1864.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1849.0029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-1817.6029" font-family="Inconsolata" font-size="14.00" fill="#000000">function ParseState:parse(args)</text>
<text text-anchor="middle" x="5708.5" y="-1802.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for _, arg in ipairs(args) do</text>
<text text-anchor="middle" x="5708.5" y="-1786.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local plain = true</text>
<text text-anchor="middle" x="5708.5" y="-1755.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if self.handle_options then</text>
<text text-anchor="middle" x="5708.5" y="-1740.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local first = arg:sub(1, 1)</text>
<text text-anchor="middle" x="5708.5" y="-1708.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.charset[first] then</text>
<text text-anchor="middle" x="5708.5" y="-1693.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg &gt; 1 then</text>
<text text-anchor="middle" x="5708.5" y="-1677.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;plain = false</text>
<text text-anchor="middle" x="5708.5" y="-1646.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if arg:sub(2, 2) == first then</text>
<text text-anchor="middle" x="5708.5" y="-1631.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #arg == 2 then</text>
<text text-anchor="middle" x="5708.5" y="-1615.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if self.options[arg] then</text>
<text text-anchor="middle" x="5708.5" y="-1600.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="5708.5" y="-1584.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="5708.5" y="-1569.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-1554.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:close()</text>
<text text-anchor="middle" x="5708.5" y="-1538.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1507.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.handle_options = false</text>
<text text-anchor="middle" x="5708.5" y="-1491.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-1476.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local equals = arg:find &quot;=&quot;</text>
<text text-anchor="middle" x="5708.5" y="-1461.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if equals then</text>
<text text-anchor="middle" x="5708.5" y="-1445.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = arg:sub(1, equals &#45; 1)</text>
<text text-anchor="middle" x="5708.5" y="-1430.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="5708.5" y="-1398.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if option.element._maxargs &lt;= 0 then</text>
<text text-anchor="middle" x="5708.5" y="-1383.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:error(&quot;option &#39;%s&#39; does not take arguments&quot;, name)</text>
<text text-anchor="middle" x="5708.5" y="-1368.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1336.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="5708.5" y="-1321.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(equals + 1))</text>
<text text-anchor="middle" x="5708.5" y="-1305.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-1290.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(arg)</text>
<text text-anchor="middle" x="5708.5" y="-1275.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, arg)</text>
<text text-anchor="middle" x="5708.5" y="-1259.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1244.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1228.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-1213.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 2, #arg do</text>
<text text-anchor="middle" x="5708.5" y="-1198.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local name = first .. arg:sub(i, i)</text>
<text text-anchor="middle" x="5708.5" y="-1182.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local option = self:get_option(name)</text>
<text text-anchor="middle" x="5708.5" y="-1167.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:invoke(option, name)</text>
<text text-anchor="middle" x="5708.5" y="-1135.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if i ~= #arg and option.element._maxargs &gt; 0 then</text>
<text text-anchor="middle" x="5708.5" y="-1120.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg:sub(i + 1))</text>
<text text-anchor="middle" x="5708.5" y="-1105.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="5708.5" y="-1089.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1074.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1058.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1043.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1028.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-1012.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-981.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if plain then</text>
<text text-anchor="middle" x="5708.5" y="-965.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self:pass(arg)</text>
<text text-anchor="middle" x="5708.5" y="-950.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-935.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-903.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;self:finalize()</text>
<text text-anchor="middle" x="5708.5" y="-888.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self.result</text>
<text text-anchor="middle" x="5708.5" y="-872.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-841.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:error(msg)</text>
<text text-anchor="middle" x="5708.5" y="-826.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.stderr:write((&quot;%s\n\nError: %s\n&quot;):format(self:get_usage(), msg))</text>
<text text-anchor="middle" x="5708.5" y="-810.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;os.exit(1)</text>
<text text-anchor="middle" x="5708.5" y="-795.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-763.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Compatibility with strict.lua and other checkers:</text>
<text text-anchor="middle" x="5708.5" y="-748.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">local default_cmdline = rawget(_G, &quot;arg&quot;) or {}</text>
<text text-anchor="middle" x="5708.5" y="-717.001" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:_parse(args, error_handler)</text>
<text text-anchor="middle" x="5708.5" y="-701.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ParseState(self, error_handler):parse(args or default_cmdline)</text>
<text text-anchor="middle" x="5708.5" y="-686.201" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-654.8009" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:parse(args)</text>
<text text-anchor="middle" x="5708.5" y="-639.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return self:_parse(args, self.error)</text>
<text text-anchor="middle" x="5708.5" y="-624.0009" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-592.6008" font-family="Inconsolata" font-size="14.00" fill="#000000">local function xpcall_error_handler(err)</text>
<text text-anchor="middle" x="5708.5" y="-577.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tostring(err) .. &quot;\noriginal &quot; .. debug.traceback(&quot;&quot;, 2):sub(2)</text>
<text text-anchor="middle" x="5708.5" y="-561.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-530.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">function Parser:pparse(args)</text>
<text text-anchor="middle" x="5708.5" y="-515.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local parse_error</text>
<text text-anchor="middle" x="5708.5" y="-483.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ok, result = xpcall(function()</text>
<text text-anchor="middle" x="5708.5" y="-468.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return self:_parse(args, function(_, err)</text>
<text text-anchor="middle" x="5708.5" y="-452.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;parse_error = err</text>
<text text-anchor="middle" x="5708.5" y="-437.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(err, 0)</text>
<text text-anchor="middle" x="5708.5" y="-422.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end)</text>
<text text-anchor="middle" x="5708.5" y="-406.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end, xpcall_error_handler)</text>
<text text-anchor="middle" x="5708.5" y="-375.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ok then</text>
<text text-anchor="middle" x="5708.5" y="-359.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return true, result</text>
<text text-anchor="middle" x="5708.5" y="-344.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif not parse_error then</text>
<text text-anchor="middle" x="5708.5" y="-329.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(result, 0)</text>
<text text-anchor="middle" x="5708.5" y="-313.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="5708.5" y="-298.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return false, parse_error</text>
<text text-anchor="middle" x="5708.5" y="-282.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="5708.5" y="-267.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5708.5" y="-236.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">local argparse = {}</text>
<text text-anchor="middle" x="5708.5" y="-204.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">argparse.version = &quot;0.6.0&quot;</text>
<text text-anchor="middle" x="5708.5" y="-173.2002" font-family="Inconsolata" font-size="14.00" fill="#000000">setmetatable(argparse, {__call = function(_, ...)</text>
<text text-anchor="middle" x="5708.5" y="-157.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return Parser(default_cmdline[0]):add_help(true)(...)</text>
<text text-anchor="middle" x="5708.5" y="-142.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">end})</text>
<text text-anchor="middle" x="5708.5" y="-111.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">return argparse</text>
<text text-anchor="middle" x="5708.5" y="-95.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; finish anonymous function and call</text>
<text text-anchor="middle" x="5708.5" y="-80.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end) ( )</text>
</g>
<!-- codeblock_99&#45;&gt;leaf_103 -->
<g id="edge103" class="edge">
<title>codeblock_99&#45;&gt;leaf_103</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5490.832,-23708.8742C5491.3261,-23681.8487 5492.3628,-23625.1378 5493.8841,-23541.9175"/>
<polygon fill="#000000" stroke="#000000" points="5497.3837,-23541.9703 5494.0671,-23531.9079 5490.3848,-23541.8423 5497.3837,-23541.9703"/>
</g>
<!-- leaf_102 -->
<g id="node103" class="node">
<title>leaf_102</title>
<polygon fill="none" stroke="#c0c0c0" points="5272.5,-36 5218.5,-36 5218.5,0 5272.5,0 5272.5,-36"/>
</g>
<!-- raw_101&#45;&gt;leaf_102 -->
<g id="edge102" class="edge">
<title>raw_101&#45;&gt;leaf_102</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5245.5,-11783.5851C5245.5,-11282.4404 5245.5,-670.1349 5245.5,-46.6077"/>
<polygon fill="#000000" stroke="#000000" points="5249.0001,-46.2552 5245.5,-36.2552 5242.0001,-46.2552 5249.0001,-46.2552"/>
</g>
<!-- leaf_108 -->
<g id="node109" class="node">
<title>leaf_108</title>
<polygon fill="none" stroke="#c0c0c0" points="5704.5,-24553.4394 5604.5,-24553.4394 5604.5,-24517.4394 5704.5,-24517.4394 5704.5,-24553.4394"/>
<text text-anchor="middle" x="5654.5" y="-24531.9394" font-family="Inconsolata" font-size="14.00" fill="#000000">** Stricture</text>
</g>
<!-- header_104&#45;&gt;leaf_108 -->
<g id="edge108" class="edge">
<title>header_104&#45;&gt;leaf_108</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5654.5,-25184.4485C5654.5,-25092.2805 5654.5,-24676.8395 5654.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="5658.0001,-24563.6151 5654.5,-24553.6151 5651.0001,-24563.6151 5658.0001,-24563.6151"/>
</g>
<!-- raw_109 -->
<g id="node110" class="node">
<title>raw_109</title>
<ellipse fill="none" stroke="#000000" cx="5754.5" cy="-24535.4394" rx="27" ry="18"/>
<text text-anchor="middle" x="5754.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_105&#45;&gt;raw_109 -->
<g id="edge109" class="edge">
<title>prose_105&#45;&gt;raw_109</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5760.3364,-25184.4485C5759.5076,-25092.2805 5755.7716,-24676.8395 5754.7557,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="5758.2533,-24563.5832 5754.6635,-24553.6151 5751.2536,-24563.6462 5758.2533,-24563.5832"/>
</g>
<!-- leaf_111 -->
<g id="node112" class="node">
<title>leaf_111</title>
<polygon fill="none" stroke="#c0c0c0" points="6431.5,-25148.8418 5799.5,-25148.8418 5799.5,-23922.0369 6431.5,-23922.0369 6431.5,-25148.8418"/>
<text text-anchor="middle" x="6115.5" y="-25133.4405" font-family="Inconsolata" font-size="14.00" fill="#000000">do</text>
<text text-anchor="middle" x="6115.5" y="-25118.0405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local getinfo, error, rawset, rawget = debug.getinfo, error, rawset, rawget</text>
<text text-anchor="middle" x="6115.5" y="-25102.6405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local strict = {}</text>
<text text-anchor="middle" x="6115.5" y="-25071.2404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local function what ()</text>
<text text-anchor="middle" x="6115.5" y="-25055.8404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local d = getinfo(3, &quot;S&quot;)</text>
<text text-anchor="middle" x="6115.5" y="-25040.4404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return d and d.what or &quot;C&quot;</text>
<text text-anchor="middle" x="6115.5" y="-25025.0404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24993.6403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45;&#45; make an existing table strict.</text>
<text text-anchor="middle" x="6115.5" y="-24978.2403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @string name name of table (optional)</text>
<text text-anchor="middle" x="6115.5" y="-24962.8403" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @tab[opt] mod table &#45; if `nil` then we&#39;ll return a new table</text>
<text text-anchor="middle" x="6115.5" y="-24947.4402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @tab[opt] predeclared &#45; table of variables that are to be considered predeclared.</text>
<text text-anchor="middle" x="6115.5" y="-24932.0402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; @return the given table, or a new table</text>
<text text-anchor="middle" x="6115.5" y="-24916.6402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local function stricture(name,mod,predeclared)</text>
<text text-anchor="middle" x="6115.5" y="-24901.2401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local mt, old_newindex, old_index, old_index_type, global, closed</text>
<text text-anchor="middle" x="6115.5" y="-24885.8401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if predeclared then</text>
<text text-anchor="middle" x="6115.5" y="-24870.4401" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;global = predeclared.__global</text>
<text text-anchor="middle" x="6115.5" y="-24855.04" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;closed = predeclared.__closed</text>
<text text-anchor="middle" x="6115.5" y="-24839.64" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24824.24" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if type(mod) == &#39;table&#39; then</text>
<text text-anchor="middle" x="6115.5" y="-24808.8399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt = getmetatable(mod)</text>
<text text-anchor="middle" x="6115.5" y="-24793.4399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if mt and rawget(mt,&#39;__declared&#39;) then return end &#45;&#45; already patched...</text>
<text text-anchor="middle" x="6115.5" y="-24778.0399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="6115.5" y="-24762.6399" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mod = {}</text>
<text text-anchor="middle" x="6115.5" y="-24747.2398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24731.8398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if mt == nil then</text>
<text text-anchor="middle" x="6115.5" y="-24716.4398" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt = {}</text>
<text text-anchor="middle" x="6115.5" y="-24701.0397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;setmetatable(mod, mt)</text>
<text text-anchor="middle" x="6115.5" y="-24685.6397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="6115.5" y="-24670.2397" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_newindex = mt.__newindex</text>
<text text-anchor="middle" x="6115.5" y="-24654.8396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_index = mt.__index</text>
<text text-anchor="middle" x="6115.5" y="-24639.4396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_index_type = type(old_index)</text>
<text text-anchor="middle" x="6115.5" y="-24624.0396" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24608.6395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__declared = predeclared or {}</text>
<text text-anchor="middle" x="6115.5" y="-24593.2395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__newindex = function(t, n, v)</text>
<text text-anchor="middle" x="6115.5" y="-24577.8395" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_newindex then</text>
<text text-anchor="middle" x="6115.5" y="-24562.4394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;old_newindex(t, n, v)</text>
<text text-anchor="middle" x="6115.5" y="-24547.0394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if rawget(t,n)~=nil then return end</text>
<text text-anchor="middle" x="6115.5" y="-24531.6394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24516.2394" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not mt.__declared[n] then</text>
<text text-anchor="middle" x="6115.5" y="-24500.8393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if global then</text>
<text text-anchor="middle" x="6115.5" y="-24485.4393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local w = what()</text>
<text text-anchor="middle" x="6115.5" y="-24470.0393" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if w ~= &quot;main&quot; and w ~= &quot;C&quot; then</text>
<text text-anchor="middle" x="6115.5" y="-24454.6392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(&quot;assign to undeclared global &#39;&quot;..n..&quot;&#39;&quot;, 2)</text>
<text text-anchor="middle" x="6115.5" y="-24439.2392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24423.8392" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24408.4391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__declared[n] = true</text>
<text text-anchor="middle" x="6115.5" y="-24393.0391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24377.6391" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rawset(t, n, v)</text>
<text text-anchor="middle" x="6115.5" y="-24362.239" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24346.839" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mt.__index = function(t,n)</text>
<text text-anchor="middle" x="6115.5" y="-24331.439" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if not mt.__declared[n] and what() ~= &quot;C&quot; then</text>
<text text-anchor="middle" x="6115.5" y="-24316.0389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_index then</text>
<text text-anchor="middle" x="6115.5" y="-24300.6389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if old_index_type == &quot;table&quot; then</text>
<text text-anchor="middle" x="6115.5" y="-24285.2389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local fallback = old_index[n]</text>
<text text-anchor="middle" x="6115.5" y="-24269.8389" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if fallback ~= nil then</text>
<text text-anchor="middle" x="6115.5" y="-24254.4388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return fallback</text>
<text text-anchor="middle" x="6115.5" y="-24239.0388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24223.6388" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="6115.5" y="-24208.2387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local res = old_index(t, n)</text>
<text text-anchor="middle" x="6115.5" y="-24192.8387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if res ~= nil then</text>
<text text-anchor="middle" x="6115.5" y="-24177.4387" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return res</text>
<text text-anchor="middle" x="6115.5" y="-24162.0386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24146.6386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24131.2386" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24115.8385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local msg = &quot;variable &#39;&quot;..n..&quot;&#39; is not declared&quot;</text>
<text text-anchor="middle" x="6115.5" y="-24100.4385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if name then</text>
<text text-anchor="middle" x="6115.5" y="-24085.0385" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;msg = msg .. &quot; in &#39;&quot;..name..&quot;&#39;&quot;</text>
<text text-anchor="middle" x="6115.5" y="-24069.6384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24054.2384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(msg, 2)</text>
<text text-anchor="middle" x="6115.5" y="-24038.8384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-24023.4384" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return rawget(t, n)</text>
<text text-anchor="middle" x="6115.5" y="-24008.0383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-23992.6383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return mod</text>
<text text-anchor="middle" x="6115.5" y="-23977.2383" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="6115.5" y="-23945.8382" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;stricture(nil,_G,{_PROMPT=true,__global=true})</text>
<text text-anchor="middle" x="6115.5" y="-23930.4382" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_106&#45;&gt;leaf_111 -->
<g id="edge111" class="edge">
<title>codeblock_106&#45;&gt;leaf_111</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6014.3357,-25184.4485C6015.3965,-25177.6428 6016.7321,-25169.0745 6018.3032,-25158.9956"/>
<polygon fill="#000000" stroke="#000000" points="6021.7983,-25159.2974 6019.8803,-25148.8776 6014.8818,-25158.2192 6021.7983,-25159.2974"/>
</g>
<!-- header_112 -->
<g id="node113" class="node">
<title>header_112</title>
<ellipse fill="none" stroke="#000000" cx="6492.5" cy="-24535.4394" rx="31.9741" ry="18"/>
<text text-anchor="middle" x="6492.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">4 : gc</text>
</g>
<!-- section_107&#45;&gt;header_112 -->
<g id="edge112" class="edge">
<title>section_107&#45;&gt;header_112</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6579.9017,-25184.7198C6571.3418,-25174.8843 6561.7826,-25161.9943 6556.5,-25148.6405 6472.6848,-24936.7657 6484.0069,-24653.2591 6490.2007,-24563.7472"/>
<polygon fill="#000000" stroke="#000000" points="6493.7056,-24563.8065 6490.9417,-24553.5785 6486.7241,-24563.2977 6493.7056,-24563.8065"/>
</g>
<!-- prose_113 -->
<g id="node114" class="node">
<title>prose_113</title>
<ellipse fill="none" stroke="#000000" cx="6597.5" cy="-24535.4394" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="6597.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_107&#45;&gt;prose_113 -->
<g id="edge113" class="edge">
<title>section_107&#45;&gt;prose_113</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6597.5,-25184.4485C6597.5,-25092.2805 6597.5,-24676.8395 6597.5,-24563.8712"/>
<polygon fill="#000000" stroke="#000000" points="6601.0001,-24563.6151 6597.5,-24553.6151 6594.0001,-24563.6151 6601.0001,-24563.6151"/>
</g>
<!-- codeblock_114 -->
<g id="node115" class="node">
<title>codeblock_114</title>
<ellipse fill="none" stroke="#000000" cx="6857.5" cy="-24535.4394" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="6857.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1681&#45;1683</text>
</g>
<!-- section_107&#45;&gt;codeblock_114 -->
<g id="edge114" class="edge">
<title>section_107&#45;&gt;codeblock_114</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6613.4179,-25184.6132C6621.7143,-25174.5468 6631.5508,-25161.4762 6638.5,-25148.6405 6753.1842,-24936.8093 6828.6816,-24652.7691 6850.7697,-24563.4964"/>
<polygon fill="#000000" stroke="#000000" points="6854.2158,-24564.1388 6853.1976,-24553.593 6847.4171,-24562.472 6854.2158,-24564.1388"/>
</g>
<!-- codeblock_115 -->
<g id="node116" class="node">
<title>codeblock_115</title>
<ellipse fill="none" stroke="#000000" cx="7204.5" cy="-24535.4394" rx="97.2677" ry="18"/>
<text text-anchor="middle" x="7204.5" y="-24531.2394" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 1686&#45;1696</text>
</g>
<!-- section_107&#45;&gt;codeblock_115 -->
<g id="edge115" class="edge">
<title>section_107&#45;&gt;codeblock_115</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6682.1159,-25199.8041C6776.4053,-25195.0091 6921.1948,-25182.2537 6963.5,-25148.6405 7157.5088,-24994.4927 7195.7464,-24662.1337 7202.919,-24563.551"/>
<polygon fill="#000000" stroke="#000000" points="7206.4178,-24563.6851 7203.6012,-24553.4715 7199.4338,-24563.2123 7206.4178,-24563.6851"/>
</g>
<!-- leaf_110 -->
<g id="node111" class="node">
<title>leaf_110</title>
<polygon fill="none" stroke="#c0c0c0" points="5867.5,-23754.9394 5641.5,-23754.9394 5641.5,-23699.1364 5867.5,-23699.1364 5867.5,-23754.9394"/>
<text text-anchor="middle" x="5754.5" y="-23707.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">Lifted straight from penlight.</text>
</g>
<!-- raw_109&#45;&gt;leaf_110 -->
<g id="edge110" class="edge">
<title>raw_109&#45;&gt;leaf_110</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5754.5,-24517.4213C5754.5,-24415.2598 5754.5,-23908.2866 5754.5,-23764.8849"/>
<polygon fill="#000000" stroke="#000000" points="5758.0001,-23764.8141 5754.5,-23754.8141 5751.0001,-23764.8142 5758.0001,-23764.8141"/>
</g>
<!-- leaf_116 -->
<g id="node117" class="node">
<title>leaf_116</title>
<polygon fill="none" stroke="#c0c0c0" points="6289,-23745.0379 6224,-23745.0379 6224,-23709.0379 6289,-23709.0379 6289,-23745.0379"/>
<text text-anchor="middle" x="6256.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">**** gc</text>
</g>
<!-- header_112&#45;&gt;leaf_116 -->
<g id="edge116" class="edge">
<title>header_112&#45;&gt;leaf_116</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6497.5231,-24517.6453C6519.0189,-24437.3442 6595.3254,-24104.7337 6440.5,-23922.2382 6398.3798,-23872.5904 6344.7597,-23932.0536 6298.5,-23886.2382 6263.3452,-23851.4211 6256.5287,-23790.9045 6255.8007,-23755.3593"/>
<polygon fill="#000000" stroke="#000000" points="6259.2998,-23755.1666 6255.7456,-23745.1858 6252.2999,-23755.2046 6259.2998,-23755.1666"/>
</g>
<!-- raw_117 -->
<g id="node118" class="node">
<title>raw_117</title>
<ellipse fill="none" stroke="#000000" cx="6334.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6334.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_113&#45;&gt;raw_117 -->
<g id="edge117" class="edge">
<title>prose_113&#45;&gt;raw_117</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6602.2341,-24517.4754C6622.4149,-24436.438 6693.1597,-24101.1091 6533.5,-23922.2382 6484.0961,-23866.8897 6423.092,-23938.5668 6370.5,-23886.2382 6335.73,-23851.6423 6331.521,-23791.0478 6332.4415,-23755.4289"/>
<polygon fill="#000000" stroke="#000000" points="6335.9469,-23755.3693 6332.8637,-23745.233 6328.9528,-23755.0796 6335.9469,-23755.3693"/>
</g>
<!-- prespace_118 -->
<g id="node119" class="node">
<title>prespace_118</title>
<ellipse fill="none" stroke="#000000" cx="6425.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="6425.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_113&#45;&gt;prespace_118 -->
<g id="edge118" class="edge">
<title>prose_113&#45;&gt;prespace_118</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6600.6895,-24517.4758C6613.5113,-24439.7874 6654.9812,-24127.3931 6533.5,-23922.2382 6519.1779,-23898.0514 6498.5503,-23908.5857 6481.5,-23886.2382 6451.3514,-23846.723 6436.5687,-23789.6705 6430.026,-23755.675"/>
<polygon fill="#000000" stroke="#000000" points="6433.4091,-23754.7149 6428.1823,-23745.4991 6426.5213,-23755.9629 6433.4091,-23754.7149"/>
</g>
<!-- literal_119 -->
<g id="node120" class="node">
<title>literal_119</title>
<ellipse fill="none" stroke="#000000" cx="6521.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="6521.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_113&#45;&gt;literal_119 -->
<g id="edge119" class="edge">
<title>prose_113&#45;&gt;literal_119</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6595.8061,-24517.4213C6585.974,-24412.8393 6536.2598,-23884.0356 6524.1584,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6527.6187,-23754.7279 6523.198,-23745.0994 6520.6495,-23755.3832 6527.6187,-23754.7279"/>
</g>
<!-- raw_120 -->
<g id="node121" class="node">
<title>raw_120</title>
<ellipse fill="none" stroke="#000000" cx="6597.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6597.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_113&#45;&gt;raw_120 -->
<g id="edge120" class="edge">
<title>prose_113&#45;&gt;raw_120</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6597.5,-24517.4213C6597.5,-24412.8393 6597.5,-23884.0356 6597.5,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6601.0001,-23755.0994 6597.5,-23745.0994 6594.0001,-23755.0995 6601.0001,-23755.0994"/>
</g>
<!-- prespace_121 -->
<g id="node122" class="node">
<title>prespace_121</title>
<ellipse fill="none" stroke="#000000" cx="6688.5" cy="-23727.0379" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="6688.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_113&#45;&gt;prespace_121 -->
<g id="edge121" class="edge">
<title>prose_113&#45;&gt;prespace_121</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6599.5283,-24517.4213C6611.3008,-24412.8393 6670.8271,-23884.0356 6685.317,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6688.8262,-23755.4282 6686.4669,-23745.0994 6681.8701,-23754.6451 6688.8262,-23755.4282"/>
</g>
<!-- literal_122 -->
<g id="node123" class="node">
<title>literal_122</title>
<ellipse fill="none" stroke="#000000" cx="6784.5" cy="-23727.0379" rx="31.481" ry="18"/>
<text text-anchor="middle" x="6784.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_113&#45;&gt;literal_122 -->
<g id="edge122" class="edge">
<title>prose_113&#45;&gt;literal_122</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6601.6679,-24517.4213C6625.8842,-24412.7342 6748.4292,-23882.9722 6778.0485,-23754.9276"/>
<polygon fill="#000000" stroke="#000000" points="6781.4782,-23755.631 6780.322,-23745.0994 6774.6583,-23754.0534 6781.4782,-23755.631"/>
</g>
<!-- raw_123 -->
<g id="node124" class="node">
<title>raw_123</title>
<ellipse fill="none" stroke="#000000" cx="6860.5" cy="-23727.0379" rx="27" ry="18"/>
<text text-anchor="middle" x="6860.5" y="-23722.8379" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_113&#45;&gt;raw_123 -->
<g id="edge123" class="edge">
<title>prose_113&#45;&gt;raw_123</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6596.8571,-24517.2604C6594.9896,-24437.3598 6597.5391,-24112.8822 6751.5,-23922.2382 6774.2283,-23894.0945 6802.1062,-23914.6487 6824.5,-23886.2382 6854.495,-23848.1841 6860.4814,-23789.9387 6861.1497,-23755.4533"/>
<polygon fill="#000000" stroke="#000000" points="6864.6512,-23755.1655 6861.2036,-23745.1473 6857.6513,-23755.1288 6864.6512,-23755.1655"/>
</g>
<!-- leaf_131 -->
<g id="node132" class="node">
<title>leaf_131</title>
<polygon fill="none" stroke="#c0c0c0" points="7033.5,-23745.0379 6905.5,-23745.0379 6905.5,-23709.0379 7033.5,-23709.0379 7033.5,-23745.0379"/>
<text text-anchor="middle" x="6969.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000">collectgarbage()</text>
</g>
<!-- codeblock_114&#45;&gt;leaf_131 -->
<g id="edge131" class="edge">
<title>codeblock_114&#45;&gt;leaf_131</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6859.9963,-24517.4213C6874.4856,-24412.8393 6947.7488,-23884.0356 6965.5824,-23755.3145"/>
<polygon fill="#000000" stroke="#000000" points="6969.0921,-23755.4852 6966.9977,-23745.0994 6962.1584,-23754.5245 6969.0921,-23755.4852"/>
</g>
<!-- leaf_132 -->
<g id="node133" class="node">
<title>leaf_132</title>
<polygon fill="none" stroke="#c0c0c0" points="7403.5,-23800.1387 7051.5,-23800.1387 7051.5,-23653.9371 7403.5,-23653.9371 7403.5,-23800.1387"/>
<text text-anchor="middle" x="7227.5" y="-23785.1381" font-family="Inconsolata" font-size="14.00" fill="#000000">if rawget(_G, &quot;arg&quot;) ~= nil then</text>
<text text-anchor="middle" x="7227.5" y="-23769.738" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if string.sub(arg[0], &#45;4) == &quot;.lua&quot; then</text>
<text text-anchor="middle" x="7227.5" y="-23754.338" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0])()</text>
<text text-anchor="middle" x="7227.5" y="-23738.938" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif string.sub(arg[0], &#45;4) == &quot;.raw&quot; then</text>
<text text-anchor="middle" x="7227.5" y="-23723.5379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0])()</text>
<text text-anchor="middle" x="7227.5" y="-23708.1379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="7227.5" y="-23692.7379" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;loadfile(arg[0] .. &quot;.lua&quot;)()</text>
<text text-anchor="middle" x="7227.5" y="-23677.3378" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="7227.5" y="-23661.9378" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_115&#45;&gt;leaf_132 -->
<g id="edge132" class="edge">
<title>codeblock_115&#45;&gt;leaf_132</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M7205.0126,-24517.4213C7207.6651,-24424.1921 7219.909,-23993.8442 7225.1304,-23810.3234"/>
<polygon fill="#000000" stroke="#000000" points="7228.633,-23810.2789 7225.4189,-23800.1833 7221.6358,-23810.0797 7228.633,-23810.2789"/>
</g>
<!-- leaf_124 -->
<g id="node125" class="node">
<title>leaf_124</title>
<polygon fill="none" stroke="#c0c0c0" points="6244.5,-11829.8203 6144.5,-11829.8203 6144.5,-11774.0173 6244.5,-11774.0173 6244.5,-11829.8203"/>
<text text-anchor="middle" x="6194.5" y="-11782.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">All of these</text>
</g>
<!-- raw_117&#45;&gt;leaf_124 -->
<g id="edge124" class="edge">
<title>raw_117&#45;&gt;leaf_124</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6334.0216,-23708.894C6332.4292,-23677.7561 6325.688,-23613.1283 6297.5,-23567.8377 6284.149,-23546.3861 6264.3775,-23554.6434 6253.5,-23531.8377 6117.9503,-23247.6441 6189.2784,-12559.3605 6194.2352,-11839.9488"/>
<polygon fill="#000000" stroke="#000000" points="6197.7356,-11839.876 6194.3049,-11829.852 6190.7358,-11839.8276 6197.7356,-11839.876"/>
</g>
<!-- leaf_125 -->
<g id="node126" class="node">
<title>leaf_125</title>
<polygon fill="none" stroke="#c0c0c0" points="6316.5,-11819.9188 6262.5,-11819.9188 6262.5,-11783.9188 6316.5,-11783.9188 6316.5,-11819.9188"/>
<text text-anchor="middle" x="6289.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_118&#45;&gt;leaf_125 -->
<g id="edge125" class="edge">
<title>prespace_118&#45;&gt;leaf_125</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6422.6273,-23708.8161C6416.9965,-23677.5605 6402.1888,-23612.7602 6370.5,-23567.8377 6355.7363,-23546.9084 6336.6305,-23554.9052 6325.5,-23531.8377 6256.7313,-23389.3165 6287.5912,-12456.7914 6289.4175,-11829.9474"/>
<polygon fill="#000000" stroke="#000000" points="6292.9174,-11829.9523 6289.4467,-11819.942 6285.9174,-11829.9317 6292.9174,-11829.9523"/>
</g>
<!-- leaf_126 -->
<g id="node127" class="node">
<title>leaf_126</title>
<polygon fill="none" stroke="#c0c0c0" points="6388.5,-11819.9188 6334.5,-11819.9188 6334.5,-11783.9188 6388.5,-11783.9188 6388.5,-11819.9188"/>
<text text-anchor="middle" x="6361.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">do</text>
</g>
<!-- literal_119&#45;&gt;leaf_126 -->
<g id="edge126" class="edge">
<title>literal_119&#45;&gt;leaf_126</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6521.7518,-23708.9719C6521.2427,-23676.7946 6515.7158,-23609.0745 6480.5,-23567.8377 6454.3878,-23537.2609 6419.6133,-23565.4203 6397.5,-23531.8377 6310.4725,-23399.6724 6358.5441,-12457.3853 6361.3724,-11829.973"/>
<polygon fill="#000000" stroke="#000000" points="6364.8724,-11829.9743 6361.4177,-11819.9585 6357.8724,-11829.9425 6364.8724,-11829.9743"/>
</g>
<!-- leaf_127 -->
<g id="node128" class="node">
<title>leaf_127</title>
<polygon fill="none" stroke="#c0c0c0" points="6800.5,-11821.2194 6406.5,-11821.2194 6406.5,-11782.6183 6800.5,-11782.6183 6800.5,-11821.2194"/>
<text text-anchor="middle" x="6603.5" y="-11806.1189" font-family="Inconsolata" font-size="14.00" fill="#000000"> blocks are to emulate the per&#45;module behavior of Lua,</text>
<text text-anchor="middle" x="6603.5" y="-11790.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">creating closures so that all</text>
</g>
<!-- raw_120&#45;&gt;leaf_127 -->
<g id="edge127" class="edge">
<title>raw_120&#45;&gt;leaf_127</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6597.5091,-23708.8742C6597.7616,-23207.1223 6603.1623,-12473.0327 6603.4849,-11831.8469"/>
<polygon fill="#000000" stroke="#000000" points="6606.985,-11831.5675 6603.4901,-11821.5657 6599.985,-11831.5639 6606.985,-11831.5675"/>
</g>
<!-- leaf_128 -->
<g id="node129" class="node">
<title>leaf_128</title>
<polygon fill="none" stroke="#c0c0c0" points="6872.5,-11819.9188 6818.5,-11819.9188 6818.5,-11783.9188 6872.5,-11783.9188 6872.5,-11819.9188"/>
<text text-anchor="middle" x="6845.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_121&#45;&gt;leaf_128 -->
<g id="edge128" class="edge">
<title>prespace_121&#45;&gt;leaf_128</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6690.6185,-23708.9761C6695.1966,-23677.1028 6708.6631,-23610.2449 6744.5,-23567.8377 6765.8154,-23542.6143 6792.6905,-23560.2632 6809.5,-23531.8377 6890.0486,-23395.627 6848.0844,-12457.1533 6845.6116,-11829.963"/>
<polygon fill="#000000" stroke="#000000" points="6849.1116,-11829.9381 6845.572,-11819.9521 6842.1117,-11829.9659 6849.1116,-11829.9381"/>
</g>
<!-- leaf_129 -->
<g id="node130" class="node">
<title>leaf_129</title>
<polygon fill="none" stroke="#c0c0c0" points="6944.5,-11819.9188 6890.5,-11819.9188 6890.5,-11783.9188 6944.5,-11783.9188 6944.5,-11819.9188"/>
<text text-anchor="middle" x="6917.5" y="-11798.4189" font-family="Inconsolata" font-size="14.00" fill="#000000">local</text>
</g>
<!-- literal_122&#45;&gt;leaf_129 -->
<g id="edge129" class="edge">
<title>literal_122&#45;&gt;leaf_129</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6784.7933,-23708.9957C6786.1604,-23677.4446 6792.9065,-23611.4597 6824.5,-23567.8377 6842.0754,-23543.5708 6866.9965,-23558.0565 6881.5,-23531.8377 6958.098,-23393.3669 6919.8578,-12457.0237 6917.6018,-11829.9574"/>
<polygon fill="#000000" stroke="#000000" points="6921.1019,-11829.9358 6917.5657,-11819.9485 6914.1019,-11829.9611 6921.1019,-11829.9358"/>
</g>
<!-- leaf_130 -->
<g id="node131" class="node">
<title>leaf_130</title>
<polygon fill="none" stroke="#c0c0c0" points="7230.5,-11821.2194 6962.5,-11821.2194 6962.5,-11782.6183 7230.5,-11782.6183 7230.5,-11821.2194"/>
<text text-anchor="middle" x="7096.5" y="-11806.1189" font-family="Inconsolata" font-size="14.00" fill="#000000"> variables become garbage. &#160;So let&#39;s</text>
<text text-anchor="middle" x="7096.5" y="-11790.7188" font-family="Inconsolata" font-size="14.00" fill="#000000">collect them.</text>
</g>
<!-- raw_123&#45;&gt;leaf_130 -->
<g id="edge130" class="edge">
<title>raw_123&#45;&gt;leaf_130</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M6860.2579,-23709.021C6860.7052,-23677.5093 6865.603,-23611.5832 6896.5,-23567.8377 6913.7858,-23543.3636 6938.8771,-23557.9901 6953.5,-23531.8377 7569.9866,-22429.2804 7125.8539,-12446.5428 7097.8606,-11831.5803"/>
<polygon fill="#000000" stroke="#000000" points="7101.3445,-11831.145 7097.3923,-11821.3149 7094.3518,-11831.464 7101.3445,-11831.145"/>
</g>
</g>
</svg>
